{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/lib/long.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Long.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/DateOffset.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/Json.Converter.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeInfo.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Double.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Set.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/Json.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Guid.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/MapUtil.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Date.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/quote.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Encoding.js","webpack:///./src/Client/Pages/Login/styles.module.scss?8bb1","webpack:///./.fable-build/.fable/Fable.Parsimmon.4.1.0/Parsimmon.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/lib/big.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Decimal.js","webpack:///./.fable-build/Shared/Errors.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Choice.js","webpack:///./.fable-build/Shared/Users.js","webpack:///./.fable-build/Pages/Login/Domain.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/AsyncBuilder.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.Client.7.2.0/Types.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.Client.7.2.0/Extensions.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.Client.7.2.0/Http.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/TimeSpan.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.MsgPack.1.6.2/Read.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.Client.7.2.0/Proxy.fs.js","webpack:///./.fable-build/Server.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js","webpack:///./.fable-build/Pages/Login/State.js","webpack:///./.fable-build/.fable-build/.fable/Feliz.1.17.0/Interop.fs.js","webpack:///./.fable-build/.fable-build/.fable/Feliz.1.17.0/React.fs.js","webpack:///./.fable-build/.fable/Feliz.1.17.0/ReactInterop.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Promise.2.1.0/Promise.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Promise.2.1.0/PromiseImpl.fs.js","webpack:///./.fable-build/.fable-build/.fable/Feliz.UseElmish.1.5.0/UseElmish.fs.js","webpack:///./.fable-build/.fable-build/.fable/Feliz.Bulma.2.4.0/ElementBuilders.fs.js","webpack:///./.fable-build/Pages/Login/View.js","webpack:///./.fable-build/Application.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/MutableMap.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/MutableSet.js","webpack:///./.fable-build/.fable-build/.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/Parser.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/SimpleJson.fs.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeCheck.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/RegExp.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/String.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Int32.js","webpack:///./.fable-build/.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/BitConverter.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/List.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt/n.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt/z.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/FSharp.Collections.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/System.Text.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/FSharp.Core.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-008/Map.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CaseInfo","declaringType","tag","fields","this","TypeInfo","fullname","generics","construct","parent","cases","enumCases","fullName","getHashCode","other","equals","getGenerics","fullnameHash","stringHash","genHashes","map","combineHashCodes","t1","t2","equalArraysWith","getRecordElements","k1","v1","k2","v2","class_type","record_type","undefined","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","array_type","obj_type","unit_type","string_type","bool_type","int8_type","uint8_type","int16_type","uint16_type","int32_type","uint32_type","float32_type","float64_type","info","Array","isArray","lastIndexOf","substr","gen","x","join","endsWith","getElementType","_a","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getUnionCases","Error","getTupleElements","isTuple","getFunctionElements","isFunction","isUnion","Union","isRecord","Record","startsWith","getUnionFields","v","case_","getUnionCaseFields","uci","getRecordField","field","makeUnion","values","expectedLength","makeRecord","reduce","obj","makeTuple","_t","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","isLong","GetHashCode","h1","Equals","CompareTo","compare","toString","radix","toJSON","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","RangeError","indexOf","substring","radixToPower","size","min","parseInt","add","multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","LongLib","op_Addition","op_Subtraction","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_LeftShift","op_BitwiseAnd","fromBytes","bytes","le","fromBytesLE","fromBytesBE","toBytes","hi","lo","toBytesLE","toBytesBE","getLowBits","getHighBits","getLowBitsUnsigned","getHighBitsUnsigned","fromInteger","kind","xh","parse","style","_bitsize","y","len","isValid","sign","maxValue","getMaxValue","toUpperCase","padStart","tryParse","bitsize","defValue","contents","unixEpochMillisecondsToTicks","ms","offset","ticksToUnixEpochMilliseconds","ticks","makeRangeStepFunction","step","last","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","DateTimeOffset","Date","getTimezoneOffset","fromTicks","date","parseRaw","offsetMatch","offsetRegex","exec","getTime","Convert_insideBrowser","Function","Convert_isDefined","tree","JSON","stringify","ofList","ofArray","Convert_InternalMap","Convert_$007CMapKey$007C_$007C","_arg1","Convert_generateMap","json","Convert_$007CMapEmpty$007C_$007C","activePatternResult3335","pattern_matching_result","tail","head","activePatternResult3330","Convert_$007CMapOne$007C_$007C","activePatternResult3334","left","right","activePatternResult3332","Convert_$007CMapNode$007C_$007C","leftMap","rightMap","key_1","value_1","matchValue","Convert_arrayLike","Convert_isQuoted","input","Convert_betweenQuotes","Convert_fromJsonAs","input_mut","typeInfo_mut","foundCase","foundCase_2","clo2_6","testExpr","comparer_2","comparer","jsonValue","jsonValue_1","jsonValue_2","jsonValue_3","jsonValue_4","value_38","input_1","typeInfo","value_2","value_3","value_4","value_5","value_6","value_7","value_8","value_9","value_10","value_11","value_12","value_13","value_14","value_15","value_16","value_17","value_18","getlElemType","value_19","getElemType","value_20","getElemType_1","value_21","genericJson","value_22","value_23","value_24","value_25","value_26","value_27","value_28","value_29","getTypes","jsonValue_5","optionalTypeDelayed_5","equalsSafe","Json","parse_1","Decimal","parse_2","patternInput","underlyingType","originalType","matchValue_1","outArg","FSharpRef","arg20","name_2","toFail","printf","clo1","clo2","matchValue_2","outArg_1","tryParse_1","v_1","arg20_1","clo1_1","clo2_1","arg20_2","clo1_2","clo2_2","elemType","WorkerGlobalScope","self","fromBase64String","Buffer","from","otherType","clo1_3","clo2_3","SimpleJson_toPlainObject","parse_3","fromInt32","parse_4","parse_5","seconds","DateOffset","pattern_matching_result_1","caseName","values_1","caseName_1","patternInput_2","unionType","matchValue_3","toList","activePatternResult3364","Convert_$007CNonArray$007C_$007C","pattern_matching_result_2","foundCase_3","tryFind_1","case$","CaseName","map_2","case$_1","toText","clo1_4","expectedCases","arg20_4","clo1_5","clo2_4","clo3","CaseTypes","foundCase_1","deserialized","Info","Convert_optional","parsedOptional","parsedValues","array_1","foundCase_4","arg20_5","arg30_1","clo1_6","clo2_5","clo3_1","array2","zip","tupledArg","valueType","_arg2","pattern_matching_result_3","caseInfo","caseType","case$_2","equalsWith","compareSafe","typeInfo_1","caseNames_1","case$_3","clo1_8","expectedCases_1","arg20_7","clo1_9","clo2_7","clo3_2","containsKey","count","getCases","unionCases","forAll","Convert_isRecord","Convert_unionOfRecords","foundDiscriminatorKey","discriminators","tryFind_2","keyword","discriminatorKey","discriminatorValueJson","find","foundUnionCase","discriminatorValue","tryFind_3","case$_4","case$_5","record","arg10_12","clo1_12","clo2_9","arg10_13","clo1_13","arg10_11","clo1_11","otherwise_5","unexpectedJson","expectedType","clo1_14","clo2_10","pattern_matching_result_4","caseIndex","fieldValues","matchValue_4","tryFind","values_2","array_3","foundCase_5","mapIndexed","index","value_35","arg10_10","SimpleJson_toString","arg20_8","clo1_10","clo2_8","parsedOptional_1","some","pattern_matching_result_5","value_36","value_37","dict","caseName_4","getTypes_2","parse_6","_arg3","pattern_matching_result_6","get$","list_2","choose","x_1","lowBytes","getBytesInt32","highBytes","combinedBytes","concat","toInt64","_arg4","patternInput_3","unionType_1","caseTypes","case$_6","Convert_removeQuotes","caseNames_2","case$_7","clo1_17","expectedCases_2","arg20_11","clo1_18","clo2_11","clo3_3","caseInfo_1","pattern_matching_result_7","caseName_5","getTypes_3","serializedRecord","caseValue","getTypes_4","elementTypeDelayed","values_4","elementTypeDelayed_1","values_5","elementTypeDelayed_2","linkedList","elementTypeDelayed_3","values_6","elementTypeDelayed_4","values_7","array_9","tupleTypesDelayed","dict_1","getTypes_5","getTypes_6","tuples","getTypes_7","tuples_1","dict_2","getTypes_8","getType","items","getTypes_9","getType_1","_arg5","patternInput_4","unionType_2","caseTypes_1","case$_8","caseNames_3","case$_9","clo1_19","expectedCases_3","arg20_12","clo1_20","clo2_12","clo3_4","caseInfo_2","SimpleJson_parse","pattern_matching_result_8","caseName_6","caseName_8","values_3","otherwise_6","patternInput_5","unionType_3","cases_1","_arg6","case$_10","caseNames_4","case$_11","clo1_21","expectedCases_4","arg20_13","clo1_22","clo2_13","clo3_5","caseInfo_3","_arg7","case$_12","parsedValues_1","array_8","types","foundCaseName","caseInfo_4","clo1_24","array2_1","tupledArg_1","valueType_1","caseNames_5","_arg1_1","expectedCases_5","clo1_23","clo2_14","unexpectedJson_1","expectedType_1","clo1_25","clo2_15","list_4","elementType","map_3","value_42","elementType_1","value_44","elementType_2","flattenedList","Convert_flattenFable3Lists","ofSeq","delay","append","empty_1","singleton_1","value_46","elements","elementType_3","value_48","ofList_1","Compare","elementType_4","value_50","array_10","array2_2","tupleTypes","tupledArg_2","jsonType","recordValues","patternInput_6","recordType","values_8","_arg3_1","_arg8","fieldType","FieldType","fieldName","FieldName","tupledArg_3","dictKeys","arg10_27","strings","recordFields","arg10_30","strings_1","list_10","arg","arg10_26","clo1_26","clo1_27","_arg2_1","name_1","clo1_28","clo1_29","clo1_30","arg30_6","clo1_31","clo2_16","clo3_6","clo4","value_53","patternInput_7","valueType_2","keyType","pairs","collect","keyValuePair","a","tuple_1","elements_1","elements_2","output","patternInput_8","valueType_3","keyType_1","pairs_1","keyValuePair_1","tuple_2","Dictionary","hashSafe","structuralHash","enumerator","getEnumerator","forLoopVar","value_60","key_3","addToDict","Dispose","pairs_2","list_11","output_1","patternInput_9","valueType_4","keyType_2","tupledArg_4","key_4","value_61","enumerator_1","forLoopVar_1","value_64","key_5","hashset","elemType_1","HashSet","enumerator_2","deserialized_1","addToSet","pattern_matching_result_9","tree_1","patternInput_10","valueType_5","keyType_3","matchValue_5","isEmpty","matchValue_6","inputJson","clo1_32","pairs_3","list_12","Convert_flattenMap","singleton","empty","tupledArg_5","key_6","value_68","SimpleJson_parseNative","elements_3","elements_4","pattern_matching_result_10","tree_3","flattenedMap","Convert_flatteFable3Map","pairs_4","list_13","tupledArg_6","key_7","value_73","isPrimitive","enumUnion","elements_5","elements_6","unknownType","arg10_33","arg20_17","clo1_33","clo2_17","arg10_34","arg20_18","clo1_34","clo2_18","Convert_quoteText","quote","Convert_serialize","value_mut","copyOfStruct","copyOfStruct_1","copyOfStruct_2","int32ToString","toString_1","toString_2","toString_3","serializedFields","getFields","fieldTypes","PropertyInfo","source","map_4","element","source_1","getElementType_1","element_1","strings_2","source_2","getElementType_2","element_2","strings_3","getElementType_3","element_3","strings_4","list","getElementType_4","element_4","strings_5","array_2","source_3","elementType_5","getElementType_5","element_5","getElementType_6","existingValue","value_78","serializedFields_1","strings_6","patternInput_1","usedCase","serializedValues","strings_7","array_5","table","getPairTypes","toArray","serializedKey","serializedValue","serializedValues_1","strings_8","source_4","getPairTypes_1","pair","serializedKey_1","serializedValue_1","strings_9","array_6","getTupleTypes","index_1","element_6","SimpleJson_stringify","RecordField","UnionCase","test","replace","Number","SetTreeLeaf$1","k","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","_","SetTreeNode$1","h","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","acc_mut","acc","SetTreeModule_mk","hl","hr","SetTreeModule_rebalance","t_2","t2_3","t_3","t2_4","t1h","t2h","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_mem","comparer_mut","k_mut","SetTreeModule_iter","f_mut","f","SetTreeModule_SetIterator$1","stack","started","SetTreeModule_collapseLHS","stack_mut","List","rest","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","t1_6","x1_4","t2_6","x2_4","t1_7","x1_5","t2_7","x2_5","c_3","c_2","t1_8","x1_6","t2_8","x2_6","t1_2","x1","t2_2","x2_1","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","arr","SetTreeModule_ofSeq","ie","e_mut","SetTreeModule_mkFromEnumerator","FSharpSet","this$","abs","FSharpSet__ComputeHashCode","that","FSharpSet__get_Comparer","FSharpSet__get_Tree","map_1","FSharpSet__get_Count","iterator","toIterator","GetEnumerator","FSharpSet__Contains","thisArg","iterate_1","partialApply","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","Json$reflection","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","trim","toLowerCase","_byteToHex","_hexToByte","_convertMapsInitialized","initConvertMaps","arrayToGuid","buf","tryGetValue","defaultValue","has","set","getItemFromDict","dateOffsetToString","isMinus","hours","minutes","padWithZeros","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","dateOffset","baseDate","timeInSeconds","timeParts","split","parseFloat","offsetParts","offsetInMinutes","detectUTC","year","month","day","dateValue","UTC","setFullYear","daysInMonth","isLeapYear","compareDates","seqToString","callStack","cons","getPrototypeOf","constructor","entries","String","compareList","cur","next","done","withParens","hashes","numberHash","sameConstructor","equalArrays","compareArrays","recordToJSON","keys","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","contentsOrGetter","setter","Exception","message","inputText","escapable","meta","lastIndex","charCodeAt","UTF16LE","buffer","byteOffset","byteLength","view","DataView","code","setUint16","utf16le_encode","array","ArrayBuffer","isView","subarray","TextDecoder","decode","chars","getUint16","fromCharCode","utf16le_decode","UTF8","TextEncoder","encode","pos","nextCode","utf8_encode","decodeUtf8","i1","fromCodePoint","utf8_decode","_UTF8","get_UTF8","Parsimmon","action","times","seed","forEach","elem","bufferExists","isParser","isBuffer","makeSuccess","status","furthest","expected","makeFailure","mergeReplies","xs","ys","sort","union","makeLineColumnIndex","line","column","lines","assertParser","charAt","assertNumber","assertRegexp","RegExp","flags","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkSize","chunks","chunkIndex","toChunks","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","prefix","re","anchoredRegexp","seq","parsers","arguments","numParsers","accum","seqMap","args","mapper","pop","results","alt","fail","sepBy1","parser","separator","then","many","rs","regexp","group","anchored","fullMatch","groupMatch","succeed","lookahead","predicate","oneOf","idx","ch","desc","noneOf","takeWhile","lazy","skip","eof","msg","err","type","or","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","tieWith","assertArray","tie","prevResult","atMost","atLeast","init","fn","contramap","promap","g","mark","start","end","node","sepBy","notFollowedBy","text","reply","fallback","ap","chain","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","P","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","search","round","Big","DP","RM","dp","rm","more","xc","unshift","id","z","NE","PE","isneg","yc","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","one","sqrt","toExponential","toFixed","toPrecision","sd","valueOf","_Big_","findIndex","normalize","version","get_Zero","DatabaseError","UserError","AuthenticationError","ApplicationError","ApplicationError$reflection","ApplicationErrorModule_explain","username","UserErrorModule_explain","FSharpResult$2","Request_Login","Username","Password","Request_AddUser","Name","Response_Token","Token","ExpiresUtc","Response_Token$reflection","Response_LoggedInUser","RefreshToken","Response_LoggedInUser$reflection","Response_UserRow","Response_UserRow$reflection","Route_builder","UsersService","Login","GetUsers","SaveUser","UsersService$reflection","LoginForm","Model","Form","Errors","IsLoading","Msg","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","delete","state","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","iter","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","_x","isCancellationRequested","token","defaultCancellationToken","fromContinuations","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","Cmd_none","Cmd_ofSub","HttpMethod","RequestBody","SerializationType","HttpRequest","Url","Headers","WithCredentials","HttpResponse","StatusCode","ResponseBody","RemoteBuilderOptions","CustomHeaders","BaseUrl","Authorization","RouteBuilder","ResponseSerialization","ProxyRequestException","response","errorMsg","reponseText","ProxyRequestException_$ctor_76BC5104","InternalUtilities_toUInt8Array","defaultRequestConfig","HttpMethod_1","url","post","withHeaders","headers","req","withBody","send","resolve","xhr","XMLHttpRequest","open","setRequestHeader","withCredentials","onreadystatechange","readyState","responseText","content","content_1","sendAndReadBinary","responseType","comparePrimitives","interpretStringAs","typ","Reader","Reader__ReadByte","Reader__ReadRawBin_Z524259A4","Reader__ReadString_Z524259A4","getString","Reader__ReadUInt16","Reader__readInt","toUInt16","Reader__ReadUInt32","toUInt32","Reader__ReadMap_412036CA","arg10","fill","Reader__Read_24524716","equals_1","Reader__ReadArray_412036CA","array_4","props","prop","x_2","arg00","arg0","rangeNumber","Reader__ReadRawArray_412036CA","arg00_1","dateTimeTicks","timeSpanMinutes","Reader__ReadSet_412036CA","Reader__ReadBin_412036CA","fromByteArray","fromTicks_1","fromTicks_2","typ_1","n_2","typ_10","n_20","toSingle","arg20_10","typ_11","n_22","toDouble","Reader__ReadFloat64","typ_6","n_12","Reader__ReadUInt8","arg20_6","typ_7","n_14","clo1_7","typ_8","n_16","typ_9","n_18","toUInt64","Reader__ReadUInt64","arg20_9","typ_5","n_10","Reader__ReadInt8","typ_4","n_8","toInt16","Reader__ReadInt16","typ_3","n_6","toInt32","Reader__ReadInt32","arg20_3","typ_2","n_4","Reader__ReadInt64","b_10","arg30","isLittleEndian","Blob_readBlobAsText","blob","reader","FileReader","onload","readAsText","Proxy_proxyFetch","options","typeName","func","funcArgs","getArgs","argumentCount","returnTypeAsync","getAsyncTypeArgument","getPromiseTypeArgument","binaryInput","readAsBinary","getAsyncType","Proxy_isAsyncOfByteArray","getArgs_1","Proxy_isByteArray","route","baseUrl","trimEnd","Proxy_combineRouteWithBaseUrl","funcNeedParameters","arg1","arg2","arg3","arg4","arg5","arg6","arg7","inputArguments","take","inputArgumentTypes","contentType","builder$0040","requestBody","authToken","requestBodyJson","requestBodyJson_1","requestBodyJson_2","statusCode_1","response_3","responseAsBlob_2","Blob","response_4","ReturnFrom","responseAsBlob_3","response_5","response_6","parsedJson","n_3","statusCode","typ_mut","getReturnType","responseAsBlob","response_1","n_1","responseAsBlob_1","response_2","builder","options_1","usersService","uncurry","resolver","resolvedType","ResolveType","schemaType","createTypeInfo","pick","a_1","a_2","b_1","a_3","b_2","a_4","b_3","d_1","a_5","b_4","d_2","e_1","a_6","b_5","c_4","d_3","e_2","f_1","a_7","b_6","c_5","d_4","e_3","f_2","g_1","arg10_1","Remoting_buildProxy_Z15584635","RemotingModule_withBaseUrl","config","stateInit","handleLogin","dispatch","Zero","LoginPageProps","handleNewToken","reactApi","react","reactElement","createElement_1","mkAttr","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","React_createDisposable_3A5B6456","dispose","useReact_useEffect_Z5234A374","effect","dependencies","useReact_useEffect_Z101E1A95","useReact_useRef_1505","initialValue","useRef","useReact_useCallbackRef_7C4B0DD6","callback","callbackFunction","lastRenderCallbackRef","callbackRef","current","defaultArg","useCallback","useState","PromiseBuilder","PromiseBuilder__Delay_62FBFDE1","f1","f2","er","Promise","reject","er_1","catch","er_2","er_3","promise","RingState$1","RingBuffer$1","RingBuffer$1__Pop","wix","rix","rix$0027","useFeliz_React__React_useElmish_Static_17DC4F1D","update","initial","token_1","ring","setChildState","childState","cts","cancel","createCancellationToken","setChildState_1","dispatch_1","nextMsg","PromiseBuilder__While_2044D34","msg_1","state$0027","cmd$0027","iterate","success","option","isDisposable","sub_1","useReact_useEffect_3A5B6456","option_1","useFeliz_React__React_useElmish_Static_645B1FB7","createFunction","useMemo","useReact_useMemo_CF4EA67","Helpers_combineClasses","cn","classes","list_1","fold","Helpers_extractClasses","stylesheet","styles$002Emodule","Render","elems_7","props_6","names","elems_6","xs_3","elems_1","xs_16","elems_5","elms","xs_4","props_2","xs_6","xs_7","elms_1","xs_8","props_3","xs_10","xs_11","props_5","elems_4","props_4","xs_13","xs_15","xs_18","Errors_1","password","state$0027_1","state_1","toConsole","props_7","elems","xs_2","createObj","Children","preventDefault","ev","target","ev_1","arg_1","xs_20","render","createElement","document","getElementById","isIterable","isArrayLike","isHashable","Lazy","factory","isValueCreated","createdValue","padLeftAndRightWithZeros","lengthLeft","lengthRight","date1","ObjectRef","idMap","WeakMap","h2","physicalHash","isEquatable","xKeys","yKeys","equalObjects","xtime","ytime","comp","compareArraysWith","isComparable","compareObjects","kv","col","clear","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","hashMap","Dictionary__Add_5BDDA1","item","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","iterateIndexed","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","Dictionary_$ctor_6623D9B3","sumBy","GetZero","Add","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","HashSet__get_Count","HashSet__Remove_2B595","HashSet_$ctor_Z6150332D","HashSet__TryFindIndex_2B595","Parsimmon_many","Parsimmon_ofLazy","Parsimmon_digit","Parsimmon_seperateBy","others","Parsimmon_between","skipped","keep","Parsimmon_skip","Parsimmon_map","Parsimmon_choose","ps","Parsimmon_satisfy","Parsimmon_str","Parsimmon_oneOf","Parsimmon_optionalWhitespace","Parsimmon_atLeastOneOrMany","Parsimmon_atLeast","Parsimmon_stringReturn","Parsimmon_seq2","Parsimmon_concat","Parsimmon_seq3","otherParser","escape","anyCharSnippet","jint","negJint","jfloat","digits_1","decimals","dot","digitsLeft_1","digitsLeft","dot_1","digitsRight","negativeJFloat","jnumber","jbool","jnull","stringLiteral","tuple","jstring","withWhitespace","jvalue","comma","json$004099$002D1","jarray","Value","jobject","leftBrace","rightBrace","arg_2","arg0_1","jsonParser","InteropUtil_isBigInt","InteropUtil_isObjectLiteral","SimpleJson_tryParse","Parsimmon_parse","arg10_3","jsObject","inputSequence","bigInt","toDecimal","SimpleJson_parseNative$0027","activePatternResult3257","$007CNativeString$007C_$007C","activePatternResult3256","$007CNativeNumber$007C_$007C","number","activePatternResult3255","$007CNativeBool$007C_$007C","$007CNull$007C_$007C","activePatternResult3253","$007CNativeArray$007C_$007C","activePatternResult3252","$007CNativeObject$007C_$007C","fsFormatRegExp","formatRegExp","isNumeric","isLessThan","_Long","toHex","cont","createPrinter","strCopy","formatOnce","continuePrint","console","formatReplacement","padLength","precision","dateToString","zeroFlag","minusFlag","padLeft","str2","pattern","intPart","decimalPart","isNullOrEmpty","isNullOrWhiteSpace","delimiter","notSupported","b64Encoded","binary","atob","isRight","startIndex","NumberStyles","getRange","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","validResponse","umin","umax","op_UnaryNegation_Int32","$007CFuncType$007C_$007C","flattenFuncTypes","typeDef","range","domain","lazyToDelayed","unitVar0","_createTypeInfo","l_3","l_4","l_5","l_6","l_7","l_8","l_9","l_10","l_11","l_12","l_13","l_14","l_15","l_16","l_17","activePatternResult3172","primType","$007CPrimitiveType$007C_$007C","activePatternResult3171","activePatternResult3170","$007CRecordType$007C_$007C","l_1","activePatternResult3169","$007CUnionType$007C_$007C","l_2","activePatternResult3168","activePatternResult3167","$007CListType$007C_$007C","activePatternResult3166","$007CResizeArrayType$007C_$007C","elemType_2","activePatternResult3165","$007CHashSetType$007C_$007C","elemType_3","activePatternResult3164","$007CArrayType$007C_$007C","elemType_4","activePatternResult3163","$007CTupleType$007C_$007C","types_1","activePatternResult3162","$007COptionType$007C_$007C","elemType_5","activePatternResult3161","$007CNullable$007C_$007C","elemType_6","activePatternResult3160","$007CSetType$007C_$007C","elemType_7","activePatternResult3159","genArgs","$007CMapType$007C_$007C","activePatternResult3158","$007CDictionaryType$007C_$007C","activePatternResult3157","$007CSeqType$007C_$007C","elemType_8","activePatternResult3156","$007CAsyncType$007C_$007C","elemType_9","activePatternResult3155","$007CPromiseType$007C_$007C","elemType_10","typeInfoCache","ti_1","every","setInt32","getInt16","getInt32","getUint32","getFloat32","getFloat64","Enumerator","en","hasNext","__failIfNone","Seq","makeSeq","isArrayOrBufferView","unfold","firstDone","iters","innerIter","hasFinished","compareWith","cur1","cur2","iter1","iter2","exists","fold2","foldBack2","ar1","ar2","pairwise","hd","tl","scan","first","scanBack","adder","truncate","tryPick","fst","transpose","state_mut","xs_mut","List_1","fold_1","lists","tail_1","ofArrayWithTail","tryPickIndexed","i_mut","_arg1_mut","tryPickIndexedAux","tryFindIndexed","findIndexed","skipWhile","predicate_mut","t_1","Some","opt","mapping","indexNotFound","differentLengths","targetIndex","arrays","arrays_1","totalIdx","totalLength","idx_1","arr_2","initialize","initializer","copy","chooser","loop","findIndexBack","tryFindIndexBack","folder","permute","checkFlags","array1","chunkBySize","start_1","length1","length2","splitInto","chunks_1","min_1","minChunkSize","chunksWithExtraItem","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_maxInt","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_divbase","BigNatModule_modbase","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_add","rbound","c_mut","p_mut","q_mut","r_mut","i_1","z_1","i_2","BigNatModule_addP","BigNatModule_sub","BigNatModule_subP","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_gte","BigNatModule_mulSchoolBookCarry","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","ad","zLo","zHi","x_3","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","f64","f64_1","qai","BigNatModule_divmod","BigNatModule_copyN","finished","BigNatModule_two","BigNatModule_toFloat","evalFloat","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","kten2ks","prior_mut","ten2k_mut","prior","ten2k","digits_4","isLeading","prior_1","nL","nH","digits_2","BigNatModule_eval32","BigNatModule_ofString","ten","build","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_create_Z2BE94A1","BigInteger_posn_Z67CCE57D","BigInteger_negn_Z67CCE57D","BigInteger_$ctor_Z524259A4","BigInteger_$ctor_Z524259C1","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","BigInteger_op_UnaryNegation_Z665282C2","BigInteger_subnn_6A57060","nx","ny","BigInteger_addnn_6A57060","BigInteger__get_IsZero","BigInteger__get_IsOne","BigInteger_op_Addition_56F059C0","BigInteger_op_Multiply_56F059C0","BigInteger_op_LeftShift_62E082A2","BigInteger_Pow_62E082A2","yval","x_1_mut","n_1_mut","ndiv2","power","BigNatModule_pow","BigInteger__get_ToDouble","BigInteger_Parse_Z721C83C5","text_1","fromInt64","BigInteger__get_ToDecimal","flipTwosComplement","currByte","lowBitFound","firstBitIndex","isPositive","accumUInt32_mut","currIndex_mut","bytesRemaining_mut","lowBitFound_mut","accumUInt32","currIndex","bytesRemaining","bytesToProcess","ComparisonIdentity_Structural","LanguagePrimitives_FastGenericComparer","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_mk","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","MapTreeModule_spliceOutSuccessor","MapTreeModule_iter","MapTreeModule_iterOpt","MapTreeModule_toList","m_1_mut","MapTreeModule_ofArray","MapTreeModule_ofSeq","MapTreeModule_ofList","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","MapTreeModule_collapseLHS","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","combineHash","activePatternResult4281","FSharpMap__ComputeHashCode","e1","e2","m1","e1c","e2c","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","FSharpMap_$ctor","FSharpMap_Create","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","MapTreeModule_remove","FSharpMap__ToArray","MapTreeModule_toArray","FSharpMap__TryFind","remove"],"mappings":"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","file":"app.36047bf5fd07687783d9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([229,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { toArray, isEmpty, find, count, containsKey, toList, remove, tryFind, ofList } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Map.js\";\nimport { map as map_3, choose, tryFind as tryFind_2, length, empty, ofSeq, singleton, ofArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { FSharpRef, Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { getUnionFields, getRecordField, makeRecord, fullName, makeUnion, name as name_2, union_type, string_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { Json, Json$reflection } from \"./Json.fs.js\";\nimport { map as map_4, getEnumerator, collect, tryFind as tryFind_3, forAll, empty as empty_1, singleton as singleton_1, append, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { value as value_78, some, map as map_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { join, toText, fromBase64String, printf, toFail, substring, endsWith } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { parse } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Double.js\";\nimport { tryParse, parse as parse_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Int32.js\";\nimport { toString as toString_2 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Decimal.js\";\nimport Decimal from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Decimal.js\";\nimport { toString, fromInteger, toNumber, tryParse as tryParse_1, fromInt, parse as parse_2, fromNumber } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Long.js\";\nimport { SimpleJson_stringify, SimpleJson_parseNative, SimpleJson_parse, SimpleJson_toString, SimpleJson_toPlainObject } from \"./SimpleJson.fs.js\";\nimport { toString as toString_1, fromInt32, parse as parse_3 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt.js\";\nimport { toString as toString_3, parse as parse_4 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Date.js\";\nimport { parse as parse_5 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/DateOffset.js\";\nimport DateOffset from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/DateOffset.js\";\nimport { concat, mapIndexed, equalsWith, map as map_2, zip, tryFind as tryFind_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { int32ToString, structuralHash, equals, hashSafe, equalsSafe, compare, compareSafe } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { parse as parse_6 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Guid.js\";\nimport { toInt64, getBytesInt32 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/BitConverter.js\";\nimport { ofList as ofList_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Set.js\";\nimport { TypeInfo } from \"./TypeInfo.fs.js\";\nimport { Dictionary } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MutableMap.js\";\nimport { addToSet, addToDict } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MapUtil.js\";\nimport { HashSet } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MutableSet.js\";\nimport { enumUnion, isPrimitive } from \"./TypeInfo.Converter.fs.js\";\nimport quote from \"../../../.fable/Fable.SimpleJson.3.17.0/quote.js\";\n\nexport const Convert_insideBrowser = (new Function(\"try {return this===window;}catch(e){ return false;}\"))();\n\nfunction Convert_isDefined(value) {\n    return !((value === undefined));\n}\n\nexport function Convert_usingFable3() {\n    const map = JSON.parse(JSON.stringify(ofList(ofArray([[1, 1], [2, 2]]))));\n    const tree = map[\"tree\"];\n    if (Convert_isDefined(tree[\"k\"]) ? Convert_isDefined(tree[\"v\"]) : false) {\n        return Convert_isDefined(tree[\"h\"]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport const Convert_isUsingFable3 = Convert_usingFable3();\n\nexport class Convert_InternalMap extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"MapEmpty\", \"MapOne\", \"MapNode\"];\n    }\n}\n\nexport function Convert_InternalMap$reflection() {\n    return union_type(\"Fable.SimpleJson.Convert.InternalMap\", [], Convert_InternalMap, () => [[], [[\"Item1\", string_type], [\"Item2\", Json$reflection()]], [[\"Item1\", string_type], [\"Item2\", Json$reflection()], [\"Item3\", Convert_InternalMap$reflection()], [\"Item4\", Convert_InternalMap$reflection()]]]);\n}\n\nexport function Convert_flattenMap(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            const value = _arg1.fields[1];\n            const key = _arg1.fields[0];\n            return singleton([key, value]);\n        }\n        case 2: {\n            const value_1 = _arg1.fields[1];\n            const right = _arg1.fields[3];\n            const left = _arg1.fields[2];\n            const key_1 = _arg1.fields[0];\n            return ofSeq(delay(() => append(Convert_flattenMap(left), delay(() => append(Convert_flattenMap(right), delay(() => singleton_1([key_1, value_1])))))));\n        }\n        default: {\n            return empty();\n        }\n    }\n}\n\nexport function Convert_$007CKeyValue$007C_$007C(key, map) {\n    let option;\n    option = tryFind(key, map);\n    return map_1((value) => [key, value, remove(key, map)], option);\n}\n\nexport function Convert_$007CNonArray$007C_$007C(_arg1) {\n    if (_arg1.tag === 4) {\n        return void 0;\n    }\n    else {\n        const json = _arg1;\n        return json;\n    }\n}\n\nexport function Convert_$007CMapEmpty$007C_$007C(json) {\n    let pattern_matching_result;\n    if (json.tag === 1) {\n        if (json.fields[0] === \"MapEmpty\") {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return json;\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapKey$007C_$007C(_arg1) {\n    switch (_arg1.tag) {\n        case 0: {\n            const number = _arg1.fields[0];\n            return number.toString();\n        }\n        case 1: {\n            const key = _arg1.fields[0];\n            return key;\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapOne$007C_$007C(_arg1) {\n    let pattern_matching_result, key, value;\n    if (_arg1.tag === 4) {\n        if (_arg1.fields[0].tail != null) {\n            if (_arg1.fields[0].head.tag === 1) {\n                if (_arg1.fields[0].head.fields[0] === \"MapOne\") {\n                    if (_arg1.fields[0].tail.tail != null) {\n                        const activePatternResult3330 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\n                        if (activePatternResult3330 != null) {\n                            if (_arg1.fields[0].tail.tail.tail != null) {\n                                if (_arg1.fields[0].tail.tail.tail.tail == null) {\n                                    pattern_matching_result = 0;\n                                    key = activePatternResult3330;\n                                    value = _arg1.fields[0].tail.tail.head;\n                                }\n                                else {\n                                    pattern_matching_result = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [key, value];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapNode$007C_$007C(_arg1) {\n    let pattern_matching_result, key, left, right, value;\n    if (_arg1.tag === 4) {\n        if (_arg1.fields[0].tail != null) {\n            if (_arg1.fields[0].head.tag === 1) {\n                if (_arg1.fields[0].head.fields[0] === \"MapNode\") {\n                    if (_arg1.fields[0].tail.tail != null) {\n                        const activePatternResult3332 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\n                        if (activePatternResult3332 != null) {\n                            if (_arg1.fields[0].tail.tail.tail != null) {\n                                if (_arg1.fields[0].tail.tail.tail.tail != null) {\n                                    if (_arg1.fields[0].tail.tail.tail.tail.tail != null) {\n                                        if (_arg1.fields[0].tail.tail.tail.tail.tail.tail != null) {\n                                            if (_arg1.fields[0].tail.tail.tail.tail.tail.head.tag === 0) {\n                                                if (_arg1.fields[0].tail.tail.tail.tail.tail.tail.tail == null) {\n                                                    pattern_matching_result = 0;\n                                                    key = activePatternResult3332;\n                                                    left = _arg1.fields[0].tail.tail.tail.head;\n                                                    right = _arg1.fields[0].tail.tail.tail.tail.head;\n                                                    value = _arg1.fields[0].tail.tail.head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [key, value, left, right];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_generateMap(json) {\n    const activePatternResult3336 = Convert_$007CMapEmpty$007C_$007C(json);\n    if (activePatternResult3336 != null) {\n        return new Convert_InternalMap(0);\n    }\n    else {\n        const activePatternResult3335 = Convert_$007CMapOne$007C_$007C(json);\n        if (activePatternResult3335 != null) {\n            const key = activePatternResult3335[0];\n            const value = activePatternResult3335[1];\n            return new Convert_InternalMap(1, key, value);\n        }\n        else {\n            const activePatternResult3334 = Convert_$007CMapNode$007C_$007C(json);\n            if (activePatternResult3334 != null) {\n                const key_1 = activePatternResult3334[0];\n                const left = activePatternResult3334[2];\n                const right = activePatternResult3334[3];\n                const value_1 = activePatternResult3334[1];\n                const matchValue = [Convert_generateMap(left), Convert_generateMap(right)];\n                let pattern_matching_result, leftMap, rightMap;\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        pattern_matching_result = 0;\n                        leftMap = matchValue[0];\n                        rightMap = matchValue[1];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return new Convert_InternalMap(2, key_1, value_1, leftMap, rightMap);\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            }\n            else {\n                return void 0;\n            }\n        }\n    }\n}\n\nexport function Convert_flatteFable3Map(tree) {\n    return ofSeq(delay(() => {\n        let matchValue, key, value;\n        return append((matchValue = [tryFind(\"k\", tree), tryFind(\"v\", tree)], (matchValue[0] != null) ? ((matchValue[0].tag === 1) ? ((matchValue[1] != null) ? (key = matchValue[0].fields[0], value = matchValue[1], singleton_1([key, value])) : (void 0, empty_1())) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\n            let matchValue_1, left;\n            return append((matchValue_1 = tryFind(\"left\", tree), (matchValue_1 != null) ? ((matchValue_1.tag === 5) ? (left = matchValue_1.fields[0], Convert_flatteFable3Map(left)) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\n                const matchValue_2 = tryFind(\"right\", tree);\n                let pattern_matching_result, right;\n                if (matchValue_2 != null) {\n                    if (matchValue_2.tag === 5) {\n                        pattern_matching_result = 0;\n                        right = matchValue_2.fields[0];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return Convert_flatteFable3Map(right);\n                    }\n                    case 1: {\n                        return empty_1();\n                    }\n                }\n            }));\n        }));\n    }));\n}\n\nexport function Convert_flattenFable3Lists(linkedList) {\n    return ofSeq(delay(() => {\n        let matchValue, value;\n        return append((matchValue = tryFind(\"head\", linkedList), (matchValue == null) ? (void 0, empty_1()) : (value = matchValue, singleton_1(value))), delay(() => {\n            const matchValue_1 = tryFind(\"tail\", linkedList);\n            let pattern_matching_result, tail;\n            if (matchValue_1 != null) {\n                if (matchValue_1.tag === 5) {\n                    pattern_matching_result = 0;\n                    tail = matchValue_1.fields[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return Convert_flattenFable3Lists(tail);\n                }\n                case 1: {\n                    return empty_1();\n                }\n            }\n        }));\n    }));\n}\n\nexport function Convert_arrayLike(_arg1) {\n    switch (_arg1.tag) {\n        case 25: {\n            return true;\n        }\n        case 23: {\n            return true;\n        }\n        case 26: {\n            return true;\n        }\n        case 27: {\n            return true;\n        }\n        case 24: {\n            return true;\n        }\n        case 30: {\n            return true;\n        }\n        case 31: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexport function Convert_isRecord(_arg1) {\n    if (_arg1.tag === 34) {\n        const recordType = _arg1.fields[0];\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_unionOfRecords(_arg1) {\n    if (_arg1.tag === 35) {\n        const getCases = _arg1.fields[0];\n        const patternInput = getCases();\n        const unionType = patternInput[1];\n        const unionCases = patternInput[0];\n        return forAll((case$) => {\n            if (case$.CaseTypes.length === 1) {\n                return Convert_isRecord(case$.CaseTypes[0]);\n            }\n            else {\n                return false;\n            }\n        }, unionCases);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_optional(_arg1) {\n    if (_arg1.tag === 22) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_isQuoted(input) {\n    if (input.indexOf(\"\\\"\") === 0) {\n        return endsWith(input, \"\\\"\");\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_betweenQuotes(input) {\n    return (\"\\\"\" + input) + \"\\\"\";\n}\n\nexport function Convert_removeQuotes(input) {\n    return substring(input, 1, input.length - 2);\n}\n\nexport function Convert_fromJsonAs(input_mut, typeInfo_mut) {\n    let foundCase, foundCase_2, clo2_6, testExpr, otherwise, otherwise_2, tree_2, comparer_2, tree, comparer, getTypes_1, caseName_3, optionalTypeDelayed, jsonValue, optionalTypeDelayed_1, jsonValue_1, optionalTypeDelayed_2, jsonValue_2, optionalTypeDelayed_3, jsonValue_3, optionalTypeDelayed_4, jsonValue_4;\n    Convert_fromJsonAs:\n    while (true) {\n        const input = input_mut, typeInfo = typeInfo_mut;\n        const matchValue = [input, typeInfo];\n        let pattern_matching_result, value, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11, value_12, value_13, value_14, value_15, value_16, value_17, value_18, getlElemType, value_19, getElemType, value_20, getElemType_1, value_21, genericJson, value_22, value_23, value_24, value_25, value_26, value_27, value_28, value_29, getTypes, values, jsonValue_5, optionalTypeDelayed_5;\n        if (matchValue[0].tag === 0) {\n            if (matchValue[1].tag === 8) {\n                pattern_matching_result = 0;\n                value = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 7) {\n                pattern_matching_result = 1;\n                value_1 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 3;\n                value_3 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 1) {\n                pattern_matching_result = 7;\n                value_7 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 9) {\n                pattern_matching_result = 9;\n                value_9 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 10) {\n                pattern_matching_result = 11;\n                value_11 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 2) {\n                pattern_matching_result = 12;\n                value_12 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 3) {\n                pattern_matching_result = 14;\n                value_14 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 4) {\n                pattern_matching_result = 16;\n                value_16 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 16) {\n                pattern_matching_result = 18;\n                value_18 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 33) {\n                pattern_matching_result = 20;\n                getElemType = matchValue[1].fields[0];\n                value_20 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 12) {\n                pattern_matching_result = 27;\n                value_24 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 15) {\n                pattern_matching_result = 29;\n                value_26 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 14) {\n                pattern_matching_result = 32;\n                value_29 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (optionalTypeDelayed = matchValue[1].fields[0], (jsonValue = matchValue[0], !equalsSafe(jsonValue, new Json(3)))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 1) {\n            if (matchValue[1].tag === 7) {\n                pattern_matching_result = 2;\n                value_2 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 5;\n                value_5 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 1) {\n                pattern_matching_result = 6;\n                value_6 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 9) {\n                pattern_matching_result = 8;\n                value_8 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 10) {\n                pattern_matching_result = 10;\n                value_10 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 2) {\n                pattern_matching_result = 13;\n                value_13 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 3) {\n                pattern_matching_result = 15;\n                value_15 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 4) {\n                pattern_matching_result = 17;\n                value_17 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 33) {\n                pattern_matching_result = 19;\n                getlElemType = matchValue[1].fields[0];\n                value_19 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 25) {\n                pattern_matching_result = 21;\n                getElemType_1 = matchValue[1].fields[0];\n                value_21 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 11) {\n                pattern_matching_result = 25;\n                value_22 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 12) {\n                pattern_matching_result = 26;\n                value_23 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 15) {\n                pattern_matching_result = 28;\n                value_25 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 13) {\n                pattern_matching_result = 30;\n                value_27 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 14) {\n                pattern_matching_result = 31;\n                value_28 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (optionalTypeDelayed_1 = matchValue[1].fields[0], (jsonValue_1 = matchValue[0], !equalsSafe(jsonValue_1, new Json(3)))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 2) {\n            if (matchValue[1].tag === 6) {\n                pattern_matching_result = 4;\n                value_4 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (optionalTypeDelayed_2 = matchValue[1].fields[0], (jsonValue_2 = matchValue[0], !equalsSafe(jsonValue_2, new Json(3)))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 3) {\n            if (matchValue[1].tag === 1) {\n                pattern_matching_result = 22;\n            }\n            else if (matchValue[1].tag === 0) {\n                pattern_matching_result = 23;\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                pattern_matching_result = 34;\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 5) {\n            if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 35) {\n                pattern_matching_result = 33;\n                getTypes = matchValue[1].fields[0];\n                values = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (optionalTypeDelayed_3 = matchValue[1].fields[0], (jsonValue_3 = matchValue[0], !equalsSafe(jsonValue_3, new Json(3)))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[1].tag === 18) {\n            pattern_matching_result = 24;\n            genericJson = matchValue[0];\n        }\n        else if (matchValue[1].tag === 22) {\n            if (optionalTypeDelayed_4 = matchValue[1].fields[0], (jsonValue_4 = matchValue[0], !equalsSafe(jsonValue_4, new Json(3)))) {\n                pattern_matching_result = 35;\n                jsonValue_5 = matchValue[0];\n                optionalTypeDelayed_5 = matchValue[1].fields[0];\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else {\n            pattern_matching_result = 36;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return value;\n            }\n            case 1: {\n                return value_1;\n            }\n            case 2: {\n                return parse(value_2);\n            }\n            case 3: {\n                return Math.floor(value_3);\n            }\n            case 4: {\n                return value_4;\n            }\n            case 5: {\n                return parse_1(value_5, 511, false, 32);\n            }\n            case 6: {\n                return value_6;\n            }\n            case 7: {\n                return value_7.toString();\n            }\n            case 8: {\n                return new Decimal(value_8);\n            }\n            case 9: {\n                return new Decimal(value_9);\n            }\n            case 10: {\n                return parse_1(value_10, 511, false, 16);\n            }\n            case 11: {\n                return (value_11 + 0x8000 & 0xFFFF) - 0x8000;\n            }\n            case 12: {\n                return value_12 & 0xFFFF;\n            }\n            case 13: {\n                return parse_1(value_13, 511, true, 16);\n            }\n            case 14: {\n                return value_14 >>> 0;\n            }\n            case 15: {\n                return parse_1(value_15, 511, true, 32);\n            }\n            case 16: {\n                return fromNumber(value_16, true);\n            }\n            case 17: {\n                return parse_2(value_17, 511, true, 64);\n            }\n            case 18: {\n                return Math.floor(value_18);\n            }\n            case 19: {\n                const patternInput = getlElemType();\n                const underlyingType = patternInput[0];\n                const originalType = patternInput[1];\n                switch (underlyingType.tag) {\n                    case 5: {\n                        let matchValue_1;\n                        let outArg = 0;\n                        matchValue_1 = [tryParse(value_19, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n                            outArg = v;\n                        })), outArg];\n                        if (matchValue_1[0]) {\n                            const parsedNumber = matchValue_1[1] | 0;\n                            return parsedNumber;\n                        }\n                        else {\n                            const arg20 = name_2(originalType);\n                            const clo1 = toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"));\n                            const clo2 = clo1(value_19);\n                            return clo2(arg20);\n                        }\n                    }\n                    case 11: {\n                        let matchValue_2;\n                        let outArg_1 = fromInt(0);\n                        matchValue_2 = [tryParse_1(value_19, 511, false, 64, new FSharpRef(() => outArg_1, (v_1) => {\n                            outArg_1 = v_1;\n                        })), outArg_1];\n                        if (matchValue_2[0]) {\n                            const parsedNumber_1 = matchValue_2[1];\n                            return parsedNumber_1;\n                        }\n                        else {\n                            const arg20_1 = name_2(originalType);\n                            const clo1_1 = toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"));\n                            const clo2_1 = clo1_1(value_19);\n                            return clo2_1(arg20_1);\n                        }\n                    }\n                    default: {\n                        const other = underlyingType;\n                        const arg20_2 = name_2(originalType);\n                        const clo1_2 = toFail(printf(\"The value \\u0027%s\\u0027 cannot be converted to enum of type \\u0027%s\\u0027\"));\n                        const clo2_2 = clo1_2(value_19);\n                        return clo2_2(arg20_2);\n                    }\n                }\n            }\n            case 20: {\n                const patternInput_1 = getElemType();\n                const originalType_1 = patternInput_1[1];\n                return value_20;\n            }\n            case 21: {\n                const elemType = getElemType_1();\n                if (elemType.tag === 12) {\n                    if ((typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) ? true : Convert_insideBrowser) {\n                        return fromBase64String(value_21);\n                    }\n                    else {\n                        return Array.prototype.slice.call(Buffer.from(value_21, 'base64'));\n                    }\n                }\n                else {\n                    const otherType = elemType;\n                    const clo1_3 = toFail(printf(\"Cannot convert arbitrary string \\u0027%s\\u0027 to %A\"));\n                    const clo2_3 = clo1_3(value_21);\n                    return clo2_3(otherType);\n                }\n            }\n            case 22: {\n                return null;\n            }\n            case 23: {\n                return void 0;\n            }\n            case 24: {\n                return SimpleJson_toPlainObject(genericJson);\n            }\n            case 25: {\n                return parse_2(value_22, 511, false, 64);\n            }\n            case 26: {\n                return parse_1(value_23, 511, true, 8);\n            }\n            case 27: {\n                return value_24 & 0xFF;\n            }\n            case 28: {\n                return parse_3(value_25);\n            }\n            case 29: {\n                return fromInt32(Math.floor(value_26));\n            }\n            case 30: {\n                return parse_4(value_27);\n            }\n            case 31: {\n                return parse_5(value_28);\n            }\n            case 32: {\n                const seconds = fromNumber(Math.floor(value_29), false);\n                return DateOffset(toNumber(seconds) * 1000, 0);\n            }\n            case 33: {\n                const patternInput_2 = getTypes();\n                const unionType = patternInput_2[1];\n                const cases = patternInput_2[0];\n                const matchValue_3 = toList(values);\n                let pattern_matching_result_1, caseName, values_1, caseName_1, json;\n                if (matchValue_3.tail != null) {\n                    if (matchValue_3.head[1].tag === 4) {\n                        if (matchValue_3.tail.tail == null) {\n                            pattern_matching_result_1 = 0;\n                            caseName = matchValue_3.head[0];\n                            values_1 = matchValue_3.head[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_1 = 2;\n                        }\n                    }\n                    else {\n                        const activePatternResult3364 = Convert_$007CNonArray$007C_$007C(matchValue_3.head[1]);\n                        if (activePatternResult3364 != null) {\n                            if (matchValue_3.tail.tail == null) {\n                                pattern_matching_result_1 = 1;\n                                caseName_1 = matchValue_3.head[0];\n                                json = activePatternResult3364;\n                            }\n                            else {\n                                pattern_matching_result_1 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 2;\n                        }\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 2;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        let _arg1;\n                        _arg1 = tryFind_1((case$) => (case$.CaseName === caseName), cases);\n                        if (_arg1 != null) {\n                            if (foundCase = _arg1, (foundCase.CaseTypes.length === 1) ? Convert_arrayLike(foundCase.CaseTypes[0]) : false) {\n                                const foundCase_1 = _arg1;\n                                const deserialized = Convert_fromJsonAs(new Json(4, values_1), foundCase_1.CaseTypes[0]);\n                                const value_30 = makeUnion(foundCase_1.Info, [deserialized]);\n                                return value_30;\n                            }\n                            else {\n                                let pattern_matching_result_2, foundCase_3;\n                                if (_arg1 != null) {\n                                    if (foundCase_2 = _arg1, (foundCase_2.CaseTypes.length === 1) ? Convert_optional(foundCase_2.CaseTypes[0]) : false) {\n                                        pattern_matching_result_2 = 0;\n                                        foundCase_3 = _arg1;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        const parsedOptional = Convert_fromJsonAs(new Json(4, values_1), foundCase_3.CaseTypes[0]);\n                                        const value_31 = makeUnion(foundCase_3.Info, [parsedOptional]);\n                                        return value_31;\n                                    }\n                                    case 1: {\n                                        if (_arg1 != null) {\n                                            const foundCase_4 = _arg1;\n                                            if (((foundCase_4.CaseTypes.length === 1) ? (!Convert_arrayLike(foundCase_4.CaseTypes[0])) : false) ? (foundCase_4.CaseTypes.length !== length(values_1)) : false) {\n                                                const arg20_5 = foundCase_4.CaseTypes.length | 0;\n                                                const arg30_1 = length(values_1) | 0;\n                                                const clo1_6 = toFail(printf(\"Expected case \\u0027%s\\u0027 to have %d argument types but the JSON data only contained %d values\"));\n                                                const clo2_5 = clo1_6(foundCase_4.CaseName);\n                                                const clo3_1 = clo2_5(arg20_5);\n                                                clo3_1(arg30_1);\n                                            }\n                                            let parsedValues;\n                                            let array_1;\n                                            const array2 = Array.from(values_1);\n                                            array_1 = zip(foundCase_4.CaseTypes, array2);\n                                            parsedValues = map_2((tupledArg) => {\n                                                const valueType = tupledArg[0];\n                                                const value_32 = tupledArg[1];\n                                                return Convert_fromJsonAs(value_32, valueType);\n                                            }, array_1);\n                                            const value_33 = makeUnion(foundCase_4.Info, parsedValues);\n                                            return value_33;\n                                        }\n                                        else {\n                                            throw (new Error(\"The match cases were incomplete\"));\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const caseNames = map_2((case$_1) => {\n                                const clo1_4 = toText(printf(\" \\u0027%s\\u0027 \"));\n                                return clo1_4(case$_1.CaseName);\n                            }, cases);\n                            const expectedCases = join(\", \", caseNames);\n                            const arg20_4 = name_2(unionType);\n                            const clo1_5 = toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"));\n                            const clo2_4 = clo1_5(caseName);\n                            const clo3 = clo2_4(arg20_4);\n                            return clo3(expectedCases);\n                        }\n                    }\n                    case 1: {\n                        let _arg2;\n                        _arg2 = tryFind_1((case$_2) => (case$_2.CaseName === caseName_1), cases);\n                        let pattern_matching_result_3, caseInfo, caseName_2, caseType;\n                        if (_arg2 != null) {\n                            if (testExpr = _arg2.CaseTypes, (!equalsWith(compareSafe, testExpr, null)) ? (testExpr.length === 1) : false) {\n                                pattern_matching_result_3 = 0;\n                                caseInfo = _arg2.Info;\n                                caseName_2 = _arg2.CaseName;\n                                caseType = _arg2.CaseTypes[0];\n                            }\n                            else {\n                                pattern_matching_result_3 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 1;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                const value_34 = makeUnion(caseInfo, [(clo2_6 = ((input_1) => ((typeInfo_1) => Convert_fromJsonAs(input_1, typeInfo_1)))(json), clo2_6(caseType))]);\n                                return value_34;\n                            }\n                            case 1: {\n                                const caseNames_1 = map_2((case$_3) => {\n                                    const clo1_8 = toText(printf(\" \\u0027%s\\u0027 \"));\n                                    return clo1_8(case$_3.CaseName);\n                                }, cases);\n                                const expectedCases_1 = join(\", \", caseNames_1);\n                                const arg20_7 = name_2(unionType);\n                                const clo1_9 = toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"));\n                                const clo2_7 = clo1_9(caseName_1);\n                                const clo3_2 = clo2_7(arg20_7);\n                                return clo3_2(expectedCases_1);\n                            }\n                        }\n                    }\n                    case 2: {\n                        if (otherwise = matchValue_3, (containsKey(\"tag\", values) ? containsKey(\"fields\", values) : false) ? (count(values) === 2) : false) {\n                            const otherwise_1 = matchValue_3;\n                            const matchValue_4 = [tryFind(\"tag\", values), tryFind(\"fields\", values)];\n                            let pattern_matching_result_4, caseIndex, fieldValues;\n                            if (matchValue_4[0] != null) {\n                                if (matchValue_4[0].tag === 0) {\n                                    if (matchValue_4[1] != null) {\n                                        if (matchValue_4[1].tag === 4) {\n                                            pattern_matching_result_4 = 0;\n                                            caseIndex = matchValue_4[0].fields[0];\n                                            fieldValues = matchValue_4[1].fields[0];\n                                        }\n                                        else {\n                                            pattern_matching_result_4 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_4 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_4 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_4 = 1;\n                            }\n                            switch (pattern_matching_result_4) {\n                                case 0: {\n                                    const foundCase_5 = cases[~(~caseIndex)];\n                                    let values_2;\n                                    let array_3;\n                                    array_3 = Array.from(fieldValues);\n                                    values_2 = mapIndexed((index, value_35) => Convert_fromJsonAs(value_35, foundCase_5.CaseTypes[index]), array_3);\n                                    return makeUnion(foundCase_5.Info, values_2);\n                                }\n                                case 1: {\n                                    const arg10_10 = SimpleJson_toString(new Json(5, values));\n                                    const arg20_8 = fullName(unionType);\n                                    const clo1_10 = toFail(printf(\"Could not deserialize JSON(%s) into type %s\"));\n                                    const clo2_8 = clo1_10(arg10_10);\n                                    return clo2_8(arg20_8);\n                                }\n                            }\n                        }\n                        else if (otherwise_2 = matchValue_3, Convert_unionOfRecords(typeInfo)) {\n                            const otherwise_3 = matchValue_3;\n                            const discriminators = ofArray([\"__typename\", \"$typename\", \"$type\"]);\n                            let foundDiscriminatorKey;\n                            foundDiscriminatorKey = tryFind_2((keyword) => containsKey(keyword, values), discriminators);\n                            if (foundDiscriminatorKey != null) {\n                                const discriminatorKey = foundDiscriminatorKey;\n                                const discriminatorValueJson = find(discriminatorKey, values);\n                                if (discriminatorValueJson.tag === 1) {\n                                    const discriminatorValue = discriminatorValueJson.fields[0];\n                                    let foundUnionCase;\n                                    foundUnionCase = tryFind_3((case$_4) => (case$_4.CaseName.toUpperCase() === discriminatorValue.toUpperCase()), cases);\n                                    if (foundUnionCase != null) {\n                                        const case$_5 = foundUnionCase;\n                                        const record = Convert_fromJsonAs(new Json(5, values), case$_5.CaseTypes[0]);\n                                        return makeUnion(case$_5.Info, [record]);\n                                    }\n                                    else {\n                                        const arg10_12 = name_2(unionType);\n                                        const clo1_12 = toFail(printf(\"Union of records of type \\u0027%s\\u0027 does not have a matching case \\u0027%s\\u0027\"));\n                                        const clo2_9 = clo1_12(arg10_12);\n                                        return clo2_9(discriminatorValue);\n                                    }\n                                }\n                                else {\n                                    const otherwise_4 = discriminatorValueJson;\n                                    const arg10_13 = name_2(unionType);\n                                    const clo1_13 = toFail(printf(\"Union of records of type \\u0027%s\\u0027 cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\"));\n                                    return clo1_13(arg10_13);\n                                }\n                            }\n                            else {\n                                const arg10_11 = name_2(unionType);\n                                const clo1_11 = toFail(printf(\"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected \\u0027__typename\\u0027, \\u0027$typeName\\u0027 or \\u0027$type\\u0027\"));\n                                return clo1_11(arg10_11);\n                            }\n                        }\n                        else {\n                            const otherwise_5 = matchValue_3;\n                            const unexpectedJson = JSON.stringify(otherwise_5);\n                            const expectedType = JSON.stringify(cases);\n                            const clo1_14 = toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"));\n                            const clo2_10 = clo1_14(unexpectedJson);\n                            return clo2_10(expectedType);\n                        }\n                    }\n                }\n            }\n            case 34: {\n                return void 0;\n            }\n            case 35: {\n                const optionalType = optionalTypeDelayed_5();\n                const parsedOptional_1 = Convert_fromJsonAs(jsonValue_5, optionalType);\n                return (some)(parsedOptional_1);\n            }\n            case 36: {\n                let pattern_matching_result_5, value_36, value_37, dict, caseName_4, getTypes_2;\n                if (matchValue[0].tag === 1) {\n                    if (matchValue[1].tag === 17) {\n                        pattern_matching_result_5 = 0;\n                        value_36 = matchValue[0].fields[0];\n                    }\n                    else if (matchValue[1].tag === 35) {\n                        if (getTypes_1 = matchValue[1].fields[0], (caseName_3 = matchValue[0].fields[0], Convert_isQuoted(caseName_3))) {\n                            pattern_matching_result_5 = 3;\n                            caseName_4 = matchValue[0].fields[0];\n                            getTypes_2 = matchValue[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_5 = 4;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else if (matchValue[0].tag === 0) {\n                    if (matchValue[1].tag === 11) {\n                        pattern_matching_result_5 = 1;\n                        value_37 = matchValue[0].fields[0];\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else if (matchValue[0].tag === 5) {\n                    if (matchValue[1].tag === 11) {\n                        pattern_matching_result_5 = 2;\n                        dict = matchValue[0].fields[0];\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else {\n                    pattern_matching_result_5 = 4;\n                }\n                switch (pattern_matching_result_5) {\n                    case 0: {\n                        return parse_6(value_36);\n                    }\n                    case 1: {\n                        const arg10_16 = (~(~value_37)) | 0;\n                        return ((value_38) => fromInteger(value_38, false, 2))(arg10_16);\n                    }\n                    case 2: {\n                        const get$ = (key) => tryFind(key, dict);\n                        let _arg3;\n                        const list_2 = ofArray([get$(\"low\"), get$(\"high\"), get$(\"unsigned\")]);\n                        _arg3 = choose((x_1) => x_1, list_2);\n                        let pattern_matching_result_6, high, low;\n                        if (_arg3.tail != null) {\n                            if (_arg3.head.tag === 0) {\n                                if (_arg3.tail.tail != null) {\n                                    if (_arg3.tail.head.tag === 0) {\n                                        if (_arg3.tail.tail.tail != null) {\n                                            if (_arg3.tail.tail.head.tag === 2) {\n                                                if (_arg3.tail.tail.tail.tail == null) {\n                                                    pattern_matching_result_6 = 0;\n                                                    high = _arg3.tail.head.fields[0];\n                                                    low = _arg3.head.fields[0];\n                                                }\n                                                else {\n                                                    pattern_matching_result_6 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_6 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_6 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_6 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_6 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_6 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                        switch (pattern_matching_result_6) {\n                            case 0: {\n                                const lowBytes = getBytesInt32(~(~low));\n                                const highBytes = getBytesInt32(~(~high));\n                                const combinedBytes = concat([lowBytes, highBytes], Uint8Array);\n                                const value_39 = toInt64(combinedBytes, 0);\n                                return value_39;\n                            }\n                            case 1: {\n                                return toFail(printf(\"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"));\n                            }\n                        }\n                    }\n                    case 3: {\n                        const patternInput_3 = getTypes_2();\n                        const unionType_1 = patternInput_3[1];\n                        const caseTypes = patternInput_3[0];\n                        let _arg4;\n                        _arg4 = tryFind_1((case$_6) => (case$_6.CaseName === Convert_removeQuotes(caseName_4)), caseTypes);\n                        if (_arg4 == null) {\n                            const caseNames_2 = map_2((case$_7) => {\n                                const clo1_17 = toText(printf(\" \\u0027%s\\u0027 \"));\n                                return clo1_17(case$_7.CaseName);\n                            }, caseTypes);\n                            const expectedCases_2 = join(\", \", caseNames_2);\n                            const arg20_11 = name_2(unionType_1);\n                            const clo1_18 = toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"));\n                            const clo2_11 = clo1_18(caseName_4);\n                            const clo3_3 = clo2_11(arg20_11);\n                            return clo3_3(expectedCases_2);\n                        }\n                        else {\n                            const caseInfo_1 = _arg4.Info;\n                            return makeUnion(caseInfo_1, []);\n                        }\n                    }\n                    case 4: {\n                        let pattern_matching_result_7, caseName_5, getTypes_3, getFields, serializedRecord, caseValue, getTypes_4, elementTypeDelayed, values_4, elementTypeDelayed_1, values_5, elementTypeDelayed_2, linkedList, elementTypeDelayed_3, values_6, elementTypeDelayed_4, values_7, array_9, tupleTypesDelayed, dict_1, getTypes_5, getTypes_6, tuples, getTypes_7, tuples_1, dict_2, getTypes_8, getType, items, getTypes_9, map, getType_1;\n                        if (matchValue[0].tag === 1) {\n                            if (matchValue[1].tag === 35) {\n                                pattern_matching_result_7 = 0;\n                                caseName_5 = matchValue[0].fields[0];\n                                getTypes_3 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 34) {\n                                pattern_matching_result_7 = 1;\n                                getFields = matchValue[1].fields[0];\n                                serializedRecord = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[0].tag === 4) {\n                            if (matchValue[1].tag === 35) {\n                                pattern_matching_result_7 = 2;\n                                caseValue = matchValue[0].fields[0];\n                                getTypes_4 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 25) {\n                                pattern_matching_result_7 = 3;\n                                elementTypeDelayed = matchValue[1].fields[0];\n                                values_4 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 23) {\n                                pattern_matching_result_7 = 4;\n                                elementTypeDelayed_1 = matchValue[1].fields[0];\n                                values_5 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 24) {\n                                pattern_matching_result_7 = 6;\n                                elementTypeDelayed_3 = matchValue[1].fields[0];\n                                values_6 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 26) {\n                                pattern_matching_result_7 = 7;\n                                elementTypeDelayed_4 = matchValue[1].fields[0];\n                                values_7 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 27) {\n                                pattern_matching_result_7 = 8;\n                                array_9 = matchValue[0].fields[0];\n                                tupleTypesDelayed = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 28) {\n                                pattern_matching_result_7 = 10;\n                                getTypes_6 = matchValue[1].fields[0];\n                                tuples = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 29) {\n                                pattern_matching_result_7 = 11;\n                                getTypes_7 = matchValue[1].fields[0];\n                                tuples_1 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 31) {\n                                pattern_matching_result_7 = 13;\n                                getType = matchValue[1].fields[0];\n                                items = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[0].tag === 5) {\n                            if (matchValue[1].tag === 23) {\n                                pattern_matching_result_7 = 5;\n                                elementTypeDelayed_2 = matchValue[1].fields[0];\n                                linkedList = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 34) {\n                                pattern_matching_result_7 = 9;\n                                dict_1 = matchValue[0].fields[0];\n                                getTypes_5 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 29) {\n                                pattern_matching_result_7 = 12;\n                                dict_2 = matchValue[0].fields[0];\n                                getTypes_8 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 28) {\n                                pattern_matching_result_7 = 14;\n                                getTypes_9 = matchValue[1].fields[0];\n                                map = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[1].tag === 19) {\n                            pattern_matching_result_7 = 15;\n                            getType_1 = matchValue[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_7 = 16;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                const patternInput_4 = getTypes_3();\n                                const unionType_2 = patternInput_4[1];\n                                const caseTypes_1 = patternInput_4[0];\n                                let _arg5;\n                                _arg5 = tryFind_1((case$_8) => (case$_8.CaseName === caseName_5), caseTypes_1);\n                                if (_arg5 == null) {\n                                    const caseNames_3 = map_2((case$_9) => {\n                                        const clo1_19 = toText(printf(\" \\u0027%s\\u0027 \"));\n                                        return clo1_19(case$_9.CaseName);\n                                    }, caseTypes_1);\n                                    const expectedCases_3 = join(\", \", caseNames_3);\n                                    const arg20_12 = name_2(unionType_2);\n                                    const clo1_20 = toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"));\n                                    const clo2_12 = clo1_20(caseName_5);\n                                    const clo3_4 = clo2_12(arg20_12);\n                                    return clo3_4(expectedCases_3);\n                                }\n                                else {\n                                    const caseInfo_2 = _arg5.Info;\n                                    return makeUnion(caseInfo_2, []);\n                                }\n                            }\n                            case 1: {\n                                input_mut = SimpleJson_parse(serializedRecord);\n                                typeInfo_mut = typeInfo;\n                                continue Convert_fromJsonAs;\n                            }\n                            case 2: {\n                                const patternInput_5 = getTypes_4();\n                                const unionType_3 = patternInput_5[1];\n                                const cases_1 = patternInput_5[0];\n                                let pattern_matching_result_8, caseName_6, caseName_8, values_3, otherwise_6;\n                                if (caseValue.tail != null) {\n                                    if (caseValue.head.tag === 1) {\n                                        if (caseValue.tail.tail == null) {\n                                            pattern_matching_result_8 = 0;\n                                            caseName_6 = caseValue.head.fields[0];\n                                        }\n                                        else {\n                                            pattern_matching_result_8 = 1;\n                                            caseName_8 = caseValue.head.fields[0];\n                                            values_3 = caseValue.tail;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 2;\n                                        otherwise_6 = caseValue;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 2;\n                                    otherwise_6 = caseValue;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        let _arg6;\n                                        _arg6 = tryFind_1((case$_10) => (case$_10.CaseName === caseName_6), cases_1);\n                                        if (_arg6 == null) {\n                                            const caseNames_4 = map_2((case$_11) => {\n                                                const clo1_21 = toText(printf(\" \\u0027%s\\u0027 \"));\n                                                return clo1_21(case$_11.CaseName);\n                                            }, cases_1);\n                                            const expectedCases_4 = join(\", \", caseNames_4);\n                                            const arg20_13 = name_2(unionType_3);\n                                            const clo1_22 = toFail(printf(\"Case \\u0027%s\\u0027 was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"));\n                                            const clo2_13 = clo1_22(caseName_6);\n                                            const clo3_5 = clo2_13(arg20_13);\n                                            return clo3_5(expectedCases_4);\n                                        }\n                                        else {\n                                            const caseName_7 = _arg6.CaseName;\n                                            const caseInfoTypes = _arg6.CaseTypes;\n                                            const caseInfo_3 = _arg6.Info;\n                                            return makeUnion(caseInfo_3, []);\n                                        }\n                                    }\n                                    case 1: {\n                                        let _arg7;\n                                        _arg7 = tryFind_1((case$_12) => (case$_12.CaseName === caseName_8), cases_1);\n                                        if (_arg7 != null) {\n                                            const types = _arg7.CaseTypes;\n                                            const foundCaseName = _arg7.CaseName;\n                                            const caseInfo_4 = _arg7.Info;\n                                            if (types.length !== length(values_3)) {\n                                                const clo1_24 = toFail(printf(\"The number of union case parameters for \\u0027%s\\u0027 is different\"));\n                                                clo1_24(foundCaseName);\n                                            }\n                                            let parsedValues_1;\n                                            let array_8;\n                                            const array2_1 = Array.from(values_3);\n                                            array_8 = zip(types, array2_1);\n                                            parsedValues_1 = map_2((tupledArg_1) => {\n                                                const valueType_1 = tupledArg_1[0];\n                                                const value_40 = tupledArg_1[1];\n                                                return Convert_fromJsonAs(value_40, valueType_1);\n                                            }, array_8);\n                                            const value_41 = makeUnion(caseInfo_4, parsedValues_1);\n                                            return value_41;\n                                        }\n                                        else {\n                                            const caseNames_5 = map_2((_arg1_1) => {\n                                                const name = _arg1_1.CaseName;\n                                                return name;\n                                            }, cases_1);\n                                            const expectedCases_5 = join(\", \", caseNames_5);\n                                            const clo1_23 = toFail(printf(\"Case %s was not valid, expected one of [%s]\"));\n                                            const clo2_14 = clo1_23(caseName_8);\n                                            return clo2_14(expectedCases_5);\n                                        }\n                                    }\n                                    case 2: {\n                                        const unexpectedJson_1 = JSON.stringify(otherwise_6);\n                                        const expectedType_1 = JSON.stringify(cases_1);\n                                        const clo1_25 = toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"));\n                                        const clo2_15 = clo1_25(unexpectedJson_1);\n                                        return clo2_15(expectedType_1);\n                                    }\n                                }\n                            }\n                            case 3: {\n                                const elementType = elementTypeDelayed();\n                                let value_43;\n                                let list_4;\n                                list_4 = map_3((value_42) => Convert_fromJsonAs(value_42, elementType), values_4);\n                                value_43 = Array.from(list_4);\n                                return value_43;\n                            }\n                            case 4: {\n                                const elementType_1 = elementTypeDelayed_1();\n                                let value_45;\n                                value_45 = map_3((value_44) => Convert_fromJsonAs(value_44, elementType_1), values_5);\n                                return value_45;\n                            }\n                            case 5: {\n                                const elementType_2 = elementTypeDelayed_2();\n                                const flattenedList = Convert_flattenFable3Lists(linkedList);\n                                let value_47;\n                                value_47 = map_3((value_46) => Convert_fromJsonAs(value_46, elementType_2), flattenedList);\n                                return value_47;\n                            }\n                            case 6: {\n                                const elementType_3 = elementTypeDelayed_3();\n                                let value_49;\n                                let elements;\n                                elements = map_3((value_48) => Convert_fromJsonAs(value_48, elementType_3), values_6);\n                                value_49 = ofList_1(elements, {\n                                    Compare: compare,\n                                });\n                                return value_49;\n                            }\n                            case 7: {\n                                const elementType_4 = elementTypeDelayed_4();\n                                const converted = map_3((value_50) => Convert_fromJsonAs(value_50, elementType_4), values_7);\n                                return converted;\n                            }\n                            case 8: {\n                                const tupleTypes = tupleTypesDelayed();\n                                let value_51;\n                                let array_10;\n                                let array2_2;\n                                array2_2 = Array.from(array_9);\n                                array_10 = zip(tupleTypes, array2_2);\n                                value_51 = map_2((tupledArg_2) => {\n                                    const jsonType = tupledArg_2[0];\n                                    const jsonData = tupledArg_2[1];\n                                    return Convert_fromJsonAs(jsonData, jsonType);\n                                }, array_10);\n                                return value_51;\n                            }\n                            case 9: {\n                                const patternInput_6 = getTypes_5();\n                                const recordType = patternInput_6[1];\n                                const fields = patternInput_6[0];\n                                let recordValues;\n                                const values_8 = toList(dict_1);\n                                recordValues = map_2((_arg3_1) => {\n                                    const fieldType = _arg3_1.FieldType;\n                                    const fieldName = _arg3_1.FieldName;\n                                    let _arg8;\n                                    _arg8 = tryFind_2((tupledArg_3) => {\n                                        const key_1 = tupledArg_3[0];\n                                        const value_52 = tupledArg_3[1];\n                                        return fieldName === key_1;\n                                    }, values_8);\n                                    if (_arg8 == null) {\n                                        if (fieldType.tag === 22) {\n                                            return void 0;\n                                        }\n                                        else {\n                                            let dictKeys;\n                                            let arg10_27;\n                                            let strings;\n                                            const list_10 = toList(dict_1);\n                                            strings = map_3((arg) => {\n                                                let arg10_26;\n                                                arg10_26 = arg[0];\n                                                const clo1_26 = toText(printf(\"\\u0027%s\\u0027\"));\n                                                return clo1_26(arg10_26);\n                                            }, list_10);\n                                            arg10_27 = join(\", \", strings);\n                                            const clo1_27 = toText(printf(\"[ %s ]\"));\n                                            dictKeys = clo1_27(arg10_27);\n                                            let recordFields;\n                                            let arg10_30;\n                                            let strings_1;\n                                            strings_1 = map_2((_arg2_1) => {\n                                                const name_1 = _arg2_1.FieldName;\n                                                const innerFieldType = _arg2_1.FieldType;\n                                                if (innerFieldType.tag === 22) {\n                                                    const clo1_28 = toText(printf(\"optional(\\u0027%s\\u0027)\"));\n                                                    return clo1_28(name_1);\n                                                }\n                                                else {\n                                                    const clo1_29 = toText(printf(\"required(\\u0027%s\\u0027)\"));\n                                                    return clo1_29(name_1);\n                                                }\n                                            }, fields);\n                                            arg10_30 = join(\", \", strings_1);\n                                            const clo1_30 = toText(printf(\"[ %s ]\"));\n                                            recordFields = clo1_30(arg10_30);\n                                            const arg30_6 = name_2(recordType);\n                                            const clo1_31 = toFail(printf(\"Could not find the required key \\u0027%s\\u0027 in the JSON object literal with keys %s to match with record type \\u0027%s\\u0027 that has fields %s\"));\n                                            const clo2_16 = clo1_31(fieldName);\n                                            const clo3_6 = clo2_16(dictKeys);\n                                            const clo4 = clo3_6(arg30_6);\n                                            return clo4(recordFields);\n                                        }\n                                    }\n                                    else {\n                                        const value_53 = _arg8[1];\n                                        const key_2 = _arg8[0];\n                                        return Convert_fromJsonAs(value_53, fieldType);\n                                    }\n                                }, fields);\n                                return makeRecord(recordType, recordValues);\n                            }\n                            case 10: {\n                                const patternInput_7 = getTypes_6();\n                                const valueType_2 = patternInput_7[1];\n                                const keyType = patternInput_7[0];\n                                const pairs = ofSeq(delay(() => collect((keyValuePair) => {\n                                    let a;\n                                    const tuple_1 = Convert_fromJsonAs(keyValuePair, new TypeInfo(27, (a = [keyType, valueType_2], () => a)));\n                                    return singleton_1(tuple_1);\n                                }, tuples)));\n                                switch (keyType.tag) {\n                                    case 5:\n                                    case 1:\n                                    case 6: {\n                                        let value_55;\n                                        let elements_1;\n                                        elements_1 = pairs;\n                                        value_55 = ofList(elements_1);\n                                        return value_55;\n                                    }\n                                    default: {\n                                        let value_57;\n                                        let elements_2;\n                                        elements_2 = pairs;\n                                        value_57 = ofList(elements_2);\n                                        return value_57;\n                                    }\n                                }\n                            }\n                            case 11: {\n                                const patternInput_8 = getTypes_7();\n                                const valueType_3 = patternInput_8[1];\n                                const originalType_2 = patternInput_8[2];\n                                const keyType_1 = patternInput_8[0];\n                                const pairs_1 = ofSeq(delay(() => collect((keyValuePair_1) => {\n                                    const tuple_2 = Convert_fromJsonAs(keyValuePair_1, new TypeInfo(27, () => [keyType_1, valueType_3]));\n                                    return singleton_1(tuple_2);\n                                }, tuples_1)));\n                                let output;\n                                switch (keyType_1.tag) {\n                                    case 35: {\n                                        output = (new Dictionary([], {\n                                            Equals: equalsSafe,\n                                            GetHashCode: hashSafe,\n                                        }));\n                                        break;\n                                    }\n                                    case 34: {\n                                        const value_58 = new Dictionary([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        output = value_58;\n                                        break;\n                                    }\n                                    default: {\n                                        const value_59 = new Dictionary([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        output = value_59;\n                                    }\n                                }\n                                const enumerator = getEnumerator(pairs_1);\n                                try {\n                                    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                        const value_60 = forLoopVar[1];\n                                        const key_3 = forLoopVar[0];\n                                        addToDict(output, key_3, value_60);\n                                    }\n                                }\n                                finally {\n                                    enumerator.Dispose();\n                                }\n                                return output;\n                            }\n                            case 12: {\n                                const patternInput_9 = getTypes_8();\n                                const valueType_4 = patternInput_9[1];\n                                const originalType_3 = patternInput_9[2];\n                                const keyType_2 = patternInput_9[0];\n                                let pairs_2;\n                                let list_11;\n                                list_11 = toList(dict_2);\n                                pairs_2 = map_3((tupledArg_4) => {\n                                    const key_4 = tupledArg_4[0];\n                                    const value_61 = tupledArg_4[1];\n                                    return [Convert_fromJsonAs(new Json(1, key_4), keyType_2), Convert_fromJsonAs(value_61, valueType_4)];\n                                }, list_11);\n                                let output_1;\n                                switch (keyType_2.tag) {\n                                    case 35: {\n                                        output_1 = (new Dictionary([], {\n                                            Equals: equalsSafe,\n                                            GetHashCode: hashSafe,\n                                        }));\n                                        break;\n                                    }\n                                    case 34: {\n                                        const value_62 = new Dictionary([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        output_1 = value_62;\n                                        break;\n                                    }\n                                    default: {\n                                        const value_63 = new Dictionary([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        output_1 = value_63;\n                                    }\n                                }\n                                const enumerator_1 = getEnumerator(pairs_2);\n                                try {\n                                    while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const forLoopVar_1 = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                        const value_64 = forLoopVar_1[1];\n                                        const key_5 = forLoopVar_1[0];\n                                        addToDict(output_1, key_5, value_64);\n                                    }\n                                }\n                                finally {\n                                    enumerator_1.Dispose();\n                                }\n                                return output_1;\n                            }\n                            case 13: {\n                                const elemType_1 = getType();\n                                let hashset;\n                                switch (elemType_1.tag) {\n                                    case 35: {\n                                        hashset = (new HashSet([], {\n                                            Equals: equalsSafe,\n                                            GetHashCode: hashSafe,\n                                        }));\n                                        break;\n                                    }\n                                    case 34: {\n                                        const value_65 = new HashSet([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        hashset = value_65;\n                                        break;\n                                    }\n                                    default: {\n                                        const value_66 = new HashSet([], {\n                                            Equals: equals,\n                                            GetHashCode: structuralHash,\n                                        });\n                                        hashset = value_66;\n                                    }\n                                }\n                                const enumerator_2 = getEnumerator(items);\n                                try {\n                                    while (enumerator_2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const item = enumerator_2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                        const deserialized_1 = Convert_fromJsonAs(item, elemType_1);\n                                        const value_67 = addToSet(deserialized_1, hashset);\n                                        void value_67;\n                                    }\n                                }\n                                finally {\n                                    enumerator_2.Dispose();\n                                }\n                                return hashset;\n                            }\n                            case 14: {\n                                const patternInput_10 = getTypes_9();\n                                const valueType_5 = patternInput_10[1];\n                                const keyType_3 = patternInput_10[0];\n                                const matchValue_5 = [tryFind(\"comparer\", map), tryFind(\"tree\", map)];\n                                let pattern_matching_result_9, comparer_1, tree_1;\n                                if (matchValue_5[0] != null) {\n                                    if (matchValue_5[0].tag === 5) {\n                                        if (matchValue_5[1] != null) {\n                                            if (matchValue_5[1].tag === 4) {\n                                                if (tree = matchValue_5[1].fields[0], (comparer = matchValue_5[0].fields[0], isEmpty(comparer))) {\n                                                    pattern_matching_result_9 = 0;\n                                                    comparer_1 = matchValue_5[0].fields[0];\n                                                    tree_1 = matchValue_5[1].fields[0];\n                                                }\n                                                else {\n                                                    pattern_matching_result_9 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_9 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_9 = 1;\n                                }\n                                switch (pattern_matching_result_9) {\n                                    case 0: {\n                                        const matchValue_6 = Convert_generateMap(new Json(4, tree_1));\n                                        if (matchValue_6 == null) {\n                                            const inputJson = SimpleJson_toString(new Json(4, tree_1));\n                                            const clo1_32 = toFail(printf(\"Could not generate map from JSON\\n %s\"));\n                                            return clo1_32(inputJson);\n                                        }\n                                        else {\n                                            const internalMap = matchValue_6;\n                                            let pairs_3;\n                                            const list_12 = Convert_flattenMap(internalMap);\n                                            pairs_3 = map_3((tupledArg_5) => {\n                                                const key_6 = tupledArg_5[0];\n                                                const value_68 = tupledArg_5[1];\n                                                const nextKey = (!Convert_isQuoted(key_6)) ? Convert_fromJsonAs(new Json(1, key_6), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_6), keyType_3);\n                                                const nextValue = Convert_fromJsonAs(value_68, valueType_5);\n                                                return [nextKey, nextValue];\n                                            }, list_12);\n                                            switch (keyType_3.tag) {\n                                                case 5:\n                                                case 1:\n                                                case 6: {\n                                                    let value_70;\n                                                    let elements_3;\n                                                    elements_3 = pairs_3;\n                                                    value_70 = ofList(elements_3);\n                                                    return value_70;\n                                                }\n                                                default: {\n                                                    let value_72;\n                                                    let elements_4;\n                                                    elements_4 = pairs_3;\n                                                    value_72 = ofList(elements_4);\n                                                    return value_72;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_10, comparer_3, tree_3;\n                                        if (matchValue_5[0] != null) {\n                                            if (matchValue_5[0].tag === 5) {\n                                                if (matchValue_5[1] != null) {\n                                                    if (matchValue_5[1].tag === 5) {\n                                                        if (tree_2 = matchValue_5[1].fields[0], (comparer_2 = matchValue_5[0].fields[0], isEmpty(comparer_2))) {\n                                                            pattern_matching_result_10 = 0;\n                                                            comparer_3 = matchValue_5[0].fields[0];\n                                                            tree_3 = matchValue_5[1].fields[0];\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_10 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_10 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_10 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_10 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_10 = 1;\n                                        }\n                                        switch (pattern_matching_result_10) {\n                                            case 0: {\n                                                const flattenedMap = ofList(Convert_flatteFable3Map(tree_3));\n                                                input_mut = (new Json(5, flattenedMap));\n                                                typeInfo_mut = typeInfo;\n                                                continue Convert_fromJsonAs;\n                                            }\n                                            case 1: {\n                                                let pairs_4;\n                                                let list_13;\n                                                list_13 = toList(map);\n                                                pairs_4 = map_3((tupledArg_6) => {\n                                                    const key_7 = tupledArg_6[0];\n                                                    const value_73 = tupledArg_6[1];\n                                                    const nextKey_1 = (!Convert_isQuoted(key_7)) ? ((isPrimitive(keyType_3) ? true : enumUnion(keyType_3)) ? Convert_fromJsonAs(new Json(1, key_7), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3)) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3);\n                                                    const nextValue_1 = Convert_fromJsonAs(value_73, valueType_5);\n                                                    return [nextKey_1, nextValue_1];\n                                                }, list_13);\n                                                switch (keyType_3.tag) {\n                                                    case 5:\n                                                    case 1:\n                                                    case 6: {\n                                                        let value_75;\n                                                        let elements_5;\n                                                        elements_5 = pairs_4;\n                                                        value_75 = ofList(elements_5);\n                                                        return value_75;\n                                                    }\n                                                    default: {\n                                                        let value_77;\n                                                        let elements_6;\n                                                        elements_6 = pairs_4;\n                                                        value_77 = ofList(elements_6);\n                                                        return value_77;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            case 15: {\n                                const unknownType = getType_1();\n                                const arg10_33 = SimpleJson_toString(input);\n                                const arg20_17 = fullName(unknownType);\n                                const clo1_33 = toFail(printf(\"Cannot convert %s to %s\"));\n                                const clo2_17 = clo1_33(arg10_33);\n                                return clo2_17(arg20_17);\n                            }\n                            case 16: {\n                                const arg10_34 = SimpleJson_toString(input);\n                                const arg20_18 = JSON.stringify(typeInfo);\n                                const clo1_34 = toFail(printf(\"Cannot convert %s to %s\"));\n                                const clo2_18 = clo1_34(arg10_34);\n                                return clo2_18(arg20_18);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        break;\n    }\n}\n\nexport function Convert_fromJson(json, typeInfo) {\n    return Convert_fromJsonAs(json, typeInfo);\n}\n\nexport const Convert_quoteText = quote;\n\nexport function Convert_serialize(value_mut, typeInfo_mut) {\n    let copyOfStruct, copyOfStruct_1, copyOfStruct_2;\n    Convert_serialize:\n    while (true) {\n        const value = value_mut, typeInfo = typeInfo_mut;\n        switch (typeInfo.tag) {\n            case 1: {\n                const content = value;\n                if (content == null) {\n                    return \"null\";\n                }\n                else {\n                    return Convert_quoteText(content);\n                }\n            }\n            case 0: {\n                return \"null\";\n            }\n            case 8:\n            case 7: {\n                return value.toString();\n            }\n            case 12:\n            case 2:\n            case 3:\n            case 10:\n            case 33:\n            case 16:\n            case 5: {\n                return int32ToString(value);\n            }\n            case 4:\n            case 11: {\n                return Convert_betweenQuotes(toString(value));\n            }\n            case 15: {\n                return Convert_betweenQuotes(toString_1(value));\n            }\n            case 9: {\n                return Convert_betweenQuotes(toString_2(value));\n            }\n            case 6: {\n                if (value) {\n                    return \"true\";\n                }\n                else {\n                    return \"false\";\n                }\n            }\n            case 17: {\n                return Convert_betweenQuotes((copyOfStruct = value, copyOfStruct));\n            }\n            case 13: {\n                return Convert_betweenQuotes((copyOfStruct_1 = value, toString_3(copyOfStruct_1, \"O\")));\n            }\n            case 14: {\n                return Convert_betweenQuotes((copyOfStruct_2 = value, toString_3(copyOfStruct_2, \"O\")));\n            }\n            case 34: {\n                const getFields = typeInfo.fields[0];\n                const patternInput = getFields();\n                const recordType = patternInput[1];\n                const fieldTypes = patternInput[0];\n                let serializedFields;\n                serializedFields = map_2((field) => {\n                    const fieldValue = getRecordField(value, field.PropertyInfo);\n                    const arg20 = Convert_serialize(fieldValue, field.FieldType);\n                    const clo1 = toText(printf(\"\\\"%s\\\": %s\"));\n                    const clo2 = clo1(field.FieldName);\n                    return clo2(arg20);\n                }, fieldTypes);\n                return (\"{\" + join(\", \", serializedFields)) + \"}\";\n            }\n            case 30: {\n                const getElementType = typeInfo.fields[0];\n                const elementType = getElementType();\n                let values;\n                let strings;\n                let source;\n                source = value;\n                strings = map_4((element) => Convert_serialize(element, elementType), source);\n                values = join(\", \", strings);\n                return (\"[\" + values) + \"]\";\n            }\n            case 31: {\n                const getElementType_1 = typeInfo.fields[0];\n                const elementType_1 = getElementType_1();\n                let values_1;\n                let strings_1;\n                let source_1;\n                source_1 = value;\n                strings_1 = map_4((element_1) => Convert_serialize(element_1, elementType_1), source_1);\n                values_1 = join(\", \", strings_1);\n                return (\"[\" + values_1) + \"]\";\n            }\n            case 24: {\n                const getElementType_2 = typeInfo.fields[0];\n                const elementType_2 = getElementType_2();\n                let values_2;\n                let strings_2;\n                let source_2;\n                source_2 = value;\n                strings_2 = map_4((element_2) => Convert_serialize(element_2, elementType_2), source_2);\n                values_2 = join(\", \", strings_2);\n                return (\"[\" + values_2) + \"]\";\n            }\n            case 25: {\n                const getElementType_3 = typeInfo.fields[0];\n                const elementType_3 = getElementType_3();\n                let values_3;\n                let strings_3;\n                let array_1;\n                array_1 = value;\n                strings_3 = map_2((element_3) => Convert_serialize(element_3, elementType_3), array_1);\n                values_3 = join(\", \", strings_3);\n                return (\"[\" + values_3) + \"]\";\n            }\n            case 23: {\n                const getElementType_4 = typeInfo.fields[0];\n                const elementType_4 = getElementType_4();\n                let values_4;\n                let strings_4;\n                let list;\n                list = value;\n                strings_4 = map_3((element_4) => Convert_serialize(element_4, elementType_4), list);\n                values_4 = join(\", \", strings_4);\n                return (\"[\" + values_4) + \"]\";\n            }\n            case 26: {\n                const getElementType_5 = typeInfo.fields[0];\n                const elementType_5 = getElementType_5();\n                let values_5;\n                let strings_5;\n                let array_2;\n                let source_3;\n                source_3 = value;\n                array_2 = Array.from(source_3);\n                strings_5 = map_2((element_5) => Convert_serialize(element_5, elementType_5), array_2);\n                values_5 = join(\", \", strings_5);\n                return (\"[\" + values_5) + \"]\";\n            }\n            case 22: {\n                const getElementType_6 = typeInfo.fields[0];\n                const matchValue = value;\n                if (matchValue != null) {\n                    const existingValue = value_78(matchValue);\n                    value_mut = existingValue;\n                    typeInfo_mut = getElementType_6();\n                    continue Convert_serialize;\n                }\n                else {\n                    return \"null\";\n                }\n            }\n            case 35: {\n                const getCases = typeInfo.fields[0];\n                const patternInput_1 = getCases();\n                const unionType = patternInput_1[1];\n                const unionCases = patternInput_1[0];\n                const patternInput_2 = getUnionFields(value, unionType);\n                const usedCase = patternInput_2[0];\n                const fields = patternInput_2[1];\n                let caseTypes;\n                let case$_1;\n                case$_1 = unionCases.find((case$) => (case$.CaseName === name_2(usedCase)));\n                caseTypes = case$_1.CaseTypes;\n                if (enumUnion(typeInfo) ? true : (caseTypes.length === 0)) {\n                    return Convert_betweenQuotes(name_2(usedCase));\n                }\n                else if (caseTypes.length === 1) {\n                    return (((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + Convert_serialize(fields[0], caseTypes[0])) + \"}\";\n                }\n                else {\n                    let serializedFields_1;\n                    let strings_6;\n                    strings_6 = mapIndexed((index, caseType) => Convert_serialize(fields[index], caseType), caseTypes);\n                    serializedFields_1 = join(\", \", strings_6);\n                    return ((((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + \"[\") + serializedFields_1) + \"] }\";\n                }\n            }\n            case 28: {\n                const getPairTypes = typeInfo.fields[0];\n                const patternInput_3 = getPairTypes();\n                const valueType = patternInput_3[1];\n                const keyType = patternInput_3[0];\n                let serializedValues;\n                let strings_7;\n                let array_5;\n                let table;\n                table = value;\n                array_5 = toArray(table);\n                strings_7 = map_2((tupledArg) => {\n                    const key = tupledArg[0];\n                    const value_8 = tupledArg[1];\n                    const serializedKey = Convert_serialize(key, keyType);\n                    const serializedValue = Convert_serialize(value_8, valueType);\n                    if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\n                        if (!Convert_isQuoted(serializedKey)) {\n                            return (Convert_quoteText(serializedKey) + \": \") + serializedValue;\n                        }\n                        else {\n                            return (serializedKey + \": \") + serializedValue;\n                        }\n                    }\n                    else {\n                        return (((\"[\" + serializedKey) + \", \") + serializedValue) + \"]\";\n                    }\n                }, array_5);\n                serializedValues = join(\", \", strings_7);\n                if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\n                    return (\"{\" + serializedValues) + \"}\";\n                }\n                else {\n                    return (\"[\" + serializedValues) + \"]\";\n                }\n            }\n            case 29: {\n                const getPairTypes_1 = typeInfo.fields[0];\n                const patternInput_4 = getPairTypes_1();\n                const valueType_1 = patternInput_4[1];\n                const originalType = patternInput_4[2];\n                const keyType_1 = patternInput_4[0];\n                let serializedValues_1;\n                let strings_8;\n                let source_4;\n                source_4 = value;\n                strings_8 = map_4((pair) => {\n                    const patternInput_5 = [pair[0], pair[1]];\n                    const value_10 = patternInput_5[1];\n                    const key_1 = patternInput_5[0];\n                    const serializedKey_1 = Convert_serialize(key_1, keyType_1);\n                    const serializedValue_1 = Convert_serialize(value_10, valueType_1);\n                    if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\n                        if (!Convert_isQuoted(serializedKey_1)) {\n                            return (Convert_betweenQuotes(serializedKey_1) + \": \") + serializedValue_1;\n                        }\n                        else {\n                            return (serializedKey_1 + \": \") + serializedValue_1;\n                        }\n                    }\n                    else {\n                        return (((\"[\" + serializedKey_1) + \", \") + serializedValue_1) + \"]\";\n                    }\n                }, source_4);\n                serializedValues_1 = join(\", \", strings_8);\n                if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\n                    return (\"{\" + serializedValues_1) + \"}\";\n                }\n                else {\n                    return (\"[\" + serializedValues_1) + \"]\";\n                }\n            }\n            case 27: {\n                const getTupleTypes = typeInfo.fields[0];\n                const tupleTypes = getTupleTypes();\n                if (tupleTypes.length === 1) {\n                    return (\"[\" + Convert_serialize(value, tupleTypes[0])) + \"]\";\n                }\n                else {\n                    let serializedValues_2;\n                    let strings_9;\n                    let array_6;\n                    array_6 = value;\n                    strings_9 = mapIndexed((index_1, element_6) => Convert_serialize(element_6, tupleTypes[index_1]), array_6);\n                    serializedValues_2 = join(\", \", strings_9);\n                    return (\"[\" + serializedValues_2) + \"]\";\n                }\n            }\n            case 18: {\n                return SimpleJson_stringify(value);\n            }\n            case 19: {\n                const getType = typeInfo.fields[0];\n                return SimpleJson_stringify(value);\n            }\n            default: {\n                return \"null\";\n            }\n        }\n        break;\n    }\n}\n\nexport function Fable_SimpleJson_Json__Json_stringify_Static_4E60E31B(value) {\n    if (Convert_isUsingFable3) {\n        console.warn(some(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\"));\n    }\n    return SimpleJson_stringify(value);\n}\n\n","import { Union, Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { union_type, tuple_type, lambda_type, unit_type, array_type, record_type, class_type, string_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\n\nexport class RecordField extends Record {\n    constructor(FieldName, FieldType, PropertyInfo) {\n        super();\n        this.FieldName = FieldName;\n        this.FieldType = FieldType;\n        this.PropertyInfo = PropertyInfo;\n    }\n}\n\nexport function RecordField$reflection() {\n    return record_type(\"Fable.SimpleJson.RecordField\", [], RecordField, () => [[\"FieldName\", string_type], [\"FieldType\", TypeInfo$reflection()], [\"PropertyInfo\", class_type(\"System.Reflection.PropertyInfo\")]]);\n}\n\nexport class UnionCase extends Record {\n    constructor(CaseName, CaseTypes, Info) {\n        super();\n        this.CaseName = CaseName;\n        this.CaseTypes = CaseTypes;\n        this.Info = Info;\n    }\n}\n\nexport function UnionCase$reflection() {\n    return record_type(\"Fable.SimpleJson.UnionCase\", [], UnionCase, () => [[\"CaseName\", string_type], [\"CaseTypes\", array_type(TypeInfo$reflection())], [\"Info\", class_type(\"Microsoft.FSharp.Reflection.UnionCaseInfo\")]]);\n}\n\nexport class TypeInfo extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Unit\", \"String\", \"UInt16\", \"UInt32\", \"UInt64\", \"Int32\", \"Bool\", \"Float32\", \"Float\", \"Decimal\", \"Short\", \"Long\", \"Byte\", \"DateTime\", \"DateTimeOffset\", \"BigInt\", \"TimeSpan\", \"Guid\", \"Object\", \"Any\", \"Async\", \"Promise\", \"Option\", \"List\", \"Set\", \"Array\", \"Seq\", \"Tuple\", \"Map\", \"Dictionary\", \"ResizeArray\", \"HashSet\", \"Func\", \"Enum\", \"Record\", \"Union\"];\n    }\n}\n\nexport function TypeInfo$reflection() {\n    return union_type(\"Fable.SimpleJson.TypeInfo\", [], TypeInfo, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", lambda_type(unit_type, class_type(\"System.Type\"))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(RecordField$reflection()), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(UnionCase$reflection()), class_type(\"System.Type\")))]]]);\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { value as value_1, some } from \"./Option.js\";\nimport { toString, List, Record } from \"./Types.js\";\nimport { singleton as singleton_1, collect, empty as empty_1, delay, fold as fold_2, reduce, iterate as iterate_1, toIterator, map as map_1, getEnumerator } from \"./Seq.js\";\nimport { fold as fold_1 } from \"./Array.js\";\nimport { join } from \"./String.js\";\nimport { structuralHash, partialApply } from \"./Util.js\";\nimport { HashSet__Add_2B595, HashSet_$ctor_Z6150332D } from \"./MutableSet.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        const arg0 = SetTreeLeaf$1_$ctor_2B595(k);\n        return arg0;\n    }\n    else {\n        const arg0_1 = SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n        return arg0_1;\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = t2;\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = SetTreeNode$1__get_Left(matchValue);\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = t1;\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = SetTreeNode$1__get_Right(matchValue_2);\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                const arg0_1 = SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n                return arg0_1;\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                const arg0_2 = SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n                return arg0_2;\n            }\n        }\n    }\n    else {\n        const arg0 = SetTreeLeaf$1_$ctor_2B595(k);\n        return arg0;\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    let t_1;\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (t_1 = SetTreeNode$1__get_Left(t2), t_1 == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    let t_1, t_2;\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (t_1 = SetTreeNode$1__get_Left(t2), t_1 == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (t_2 = SetTreeNode$1__get_Right(t2), t_2 == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const x_1 = SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2));\n                const x_2 = f(x_1, SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                x_mut = x_2;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                let acc_2;\n                const t_1 = SetTreeNode$1__get_Right(t2);\n                acc_2 = SetTreeModule_partitionAux(comparer, f, t_1, acc[0], acc[1]);\n                let acc_3;\n                const k = SetTreeLeaf$1__get_Key(t2);\n                acc_3 = SetTreeModule_partition1(comparer, f, k, acc_2[0], acc_2[1]);\n                const t_2 = SetTreeNode$1__get_Left(t2);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = t_2;\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                const k_1 = SetTreeLeaf$1__get_Key(t2);\n                return SetTreeModule_partition1(comparer, f, k_1, acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        const k = value_1(matchValue);\n        return k;\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        const k = value_1(matchValue);\n        return k;\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    let arg0;\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const x = stack.head;\n            const rest = stack.tail;\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = (new List(SetTreeNode$1__get_Left(x2), new List((arg0 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), (arg0)), new List(SetTreeNode$1__get_Right(x2), rest))));\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(new List(s, new List())), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail == null) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (matchValue.head != null) {\n            const t = matchValue.head;\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const t = matchValue.head;\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    let t, t_1, arg0_8, arg0_9, arg0_10, arg0_11, arg0_12, arg0_13, arg0_14, arg0_15, t_2, arg0_16, arg0_17, arg0_18, arg0_19, arg0, arg0_1, arg0_2, arg0_3, arg0_4, arg0_5, arg0_6, arg0_7;\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[1].head != null) {\n                    if (matchValue[0].head != null) {\n                        const x1_3 = matchValue[0].head;\n                        const x2_3 = matchValue[1].head;\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (t = SetTreeNode$1__get_Left(x1_3), t == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (t_1 = SetTreeNode$1__get_Left(x2_3), t_1 == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                            l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (matchValue_3[0].tail != null) {\n                                            if (matchValue_3[0].head != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = matchValue_3[0].tail;\n                                                x1_4 = matchValue_3[0].head;\n                                            }\n                                            else if (matchValue_3[1].tail != null) {\n                                                if (matchValue_3[1].head != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = matchValue_3[1].tail;\n                                                    x2_4 = matchValue_3[1].head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (matchValue_3[1].tail != null) {\n                                            if (matchValue_3[1].head != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = matchValue_3[1].tail;\n                                                x2_4 = matchValue_3[1].head;\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1_4), new List((arg0_8 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0), (arg0_8)), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeModule_empty(), new List((arg0_9 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4)), (arg0_9)), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_4), new List((arg0_10 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0), (arg0_10)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeModule_empty(), new List((arg0_11 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4)), (arg0_11)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                        l2_mut = (new List(SetTreeModule_empty(), matchValue[1].tail));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (matchValue_4[0].tail != null) {\n                                    if (matchValue_4[0].head != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = matchValue_4[0].tail;\n                                        x1_5 = matchValue_4[0].head;\n                                    }\n                                    else if (matchValue_4[1].tail != null) {\n                                        if (matchValue_4[1].head != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = matchValue_4[1].tail;\n                                            x2_5 = matchValue_4[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (matchValue_4[1].tail != null) {\n                                    if (matchValue_4[1].head != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = matchValue_4[1].tail;\n                                        x2_5 = matchValue_4[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_5), new List((arg0_12 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0), (arg0_12)), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List((arg0_13 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5)), (arg0_13)), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_5), new List((arg0_14 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0), (arg0_14)), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List((arg0_15 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5)), (arg0_15)), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (t_2 = SetTreeNode$1__get_Left(x2_3), t_2 == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), matchValue[0].tail));\n                                    l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (matchValue_5[0].tail != null) {\n                                    if (matchValue_5[0].head != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = matchValue_5[0].tail;\n                                        x1_6 = matchValue_5[0].head;\n                                    }\n                                    else if (matchValue_5[1].tail != null) {\n                                        if (matchValue_5[1].head != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = matchValue_5[1].tail;\n                                            x2_6 = matchValue_5[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (matchValue_5[1].tail != null) {\n                                    if (matchValue_5[1].head != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = matchValue_5[1].tail;\n                                        x2_6 = matchValue_5[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_6), new List((arg0_16 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0), (arg0_16)), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List((arg0_17 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6)), (arg0_17)), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_6), new List((arg0_18 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0), (arg0_18)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List((arg0_19 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6)), (arg0_19)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = matchValue[0].tail;\n                                l2_mut = matchValue[1].tail;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = matchValue[1].head;\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (matchValue_1[0].tail != null) {\n                            if (matchValue_1[0].head != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = matchValue_1[0].tail;\n                                x1 = matchValue_1[0].head;\n                            }\n                            else if (matchValue_1[1].tail != null) {\n                                if (matchValue_1[1].head != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = matchValue_1[1].tail;\n                                    x2_1 = matchValue_1[1].head;\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (matchValue_1[1].tail != null) {\n                            if (matchValue_1[1].head != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = matchValue_1[1].tail;\n                                x2_1 = matchValue_1[1].head;\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1), new List((arg0 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0), (arg0)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), new List((arg0_1 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1)), (arg0_1)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_1), new List((arg0_2 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0), (arg0_2)), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeModule_empty(), new List((arg0_3 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1)), (arg0_3)), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[0].head != null) {\n                    const x1_1 = matchValue[0].head;\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (matchValue_2[0].tail != null) {\n                        if (matchValue_2[0].head != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = matchValue_2[0].tail;\n                            x1_2 = matchValue_2[0].head;\n                        }\n                        else if (matchValue_2[1].tail != null) {\n                            if (matchValue_2[1].head != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = matchValue_2[1].tail;\n                                x2_2 = matchValue_2[1].head;\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (matchValue_2[1].tail != null) {\n                        if (matchValue_2[1].head != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = matchValue_2[1].tail;\n                            x2_2 = matchValue_2[1].head;\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeNode$1__get_Left(x1_2), new List((arg0_4 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0), (arg0_4)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeModule_empty(), new List((arg0_5 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2)), (arg0_5)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeNode$1__get_Left(x2_2), new List((arg0_6 = SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0), (arg0_6)), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeModule_empty(), new List((arg0_7 = SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2)), (arg0_7)), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = matchValue[0].tail;\n                    l2_mut = matchValue[1].tail;\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, new List(t1, new List()), new List(t2, new List())) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = (new List(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, new List());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = (j + 1);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = new Array(n);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    const ie = getEnumerator(c);\n    try {\n        return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    }\n    finally {\n        ie.Dispose();\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        let str;\n        let strings;\n        strings = map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$);\n        str = join(\"; \", strings);\n        return (\"set [\" + str) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            const clo1 = partialApply(2, f, [x]);\n            const clo2 = clo1(x);\n            clo2(s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    const t = FSharpSet__get_Tree(s);\n    return t == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    let t;\n    if (t = FSharpSet__get_Tree(s), t == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    let t;\n    if (t = FSharpSet__get_Tree(s), t == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(set1), t == null) {\n        return set1;\n    }\n    else if (t_1 = FSharpSet__get_Tree(set2), t_1 == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(set2), t == null) {\n        return set1;\n    }\n    else if (t_1 = FSharpSet__get_Tree(set1), t_1 == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(b), t == null) {\n        return b;\n    }\n    else if (t_1 = FSharpSet__get_Tree(a), t_1 == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce(FSharpSet_Intersection, sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const x = res | 0;\n            const y = structuralHash(x_1) | 0;\n            res = (((x << 1) + y) + 631);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_2(FSharpSet_op_Addition, FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function createMutable(source, comparer) {\n    const set$ = HashSet_$ctor_Z6150332D(source, comparer);\n    return set$;\n}\n\nexport function distinct(xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, x) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, projection(x)) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function unionWith(s1, s2) {\n    return fold_2((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const inputSequence = s1.keys();\n    const enumerator = getEnumerator(inputSequence);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                const value = s1.delete(x);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const value = s1.delete(x);\n            void value;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","import { Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { union_type, class_type, list_type, bool_type, string_type, float64_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\n\nexport class Json extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"JNumber\", \"JString\", \"JBool\", \"JNull\", \"JArray\", \"JObject\"];\n    }\n}\n\nexport function Json$reflection() {\n    return union_type(\"Fable.SimpleJson.Json\", [], Json, () => [[[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [], [[\"Item\", list_type(Json$reflection())]], [[\"Item\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, Json$reflection()])]]]);\n}\n\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","export default function quote(inputText) {\r\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var meta = {\r\n        '\\b': '\\\\b',\r\n        '\\t': '\\\\t',\r\n        '\\n': '\\\\n',\r\n        '\\f': '\\\\f',\r\n        '\\r': '\\\\r',\r\n        '\"': '\\\\\"',\r\n        '\\\\': '\\\\\\\\'\r\n    }\r\n\r\n    escapable.lastIndex = 0;\r\n    return escapable.test(inputText) ?\r\n        '\"' + inputText.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string' ? c :\r\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' :\r\n        '\"' + inputText + '\"';\r\n}","const littleEndian = true;\nfunction utf16le_encode(str) {\n    const bytes = new Uint8Array(str.length * 2);\n    const view = new DataView(bytes.buffer);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        view.setUint16(i * 2, code, littleEndian);\n    }\n    return bytes;\n}\nfunction utf16le_decode(bytes) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const chars = new Array(view.byteLength / 2);\n    for (let i = 0; i < chars.length; i++) {\n        const code = view.getUint16(i * 2, littleEndian);\n        chars[i] = String.fromCharCode(code);\n    }\n    return chars.join(\"\");\n}\nfunction utf8_encode(str) {\n    let pos = 0;\n    let buf = new Uint8Array(str.length * 3);\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code >= 0xD800 && code <= 0xDBFF) {\n            const nextCode = (i < str.length) ? str.charCodeAt(i + 1) : 0;\n            if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n                i += 1;\n                code = (code - 0xD800) * 0x400 + nextCode - 0xDC00 + 0x10000;\n                if (code > 0xFFFF) {\n                    buf[pos++] = (0x1E << 3) | (code >>> 18);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 12) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | (code & 0x3F);\n                }\n            }\n            else {\n                buf[pos++] = 0xEF;\n                buf[pos++] = 0xBF;\n                buf[pos++] = 0xBD;\n            }\n        }\n        else if (code <= 0x007F) {\n            buf[pos++] = (0x0 << 7) | code;\n        }\n        else if (code <= 0x07FF) {\n            buf[pos++] = (0x6 << 5) | (code >>> 6);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n        else {\n            buf[pos++] = (0xE << 4) | (code >>> 12);\n            buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n    }\n    buf = new Uint8Array(buf.buffer.slice(0, pos));\n    return buf;\n}\nfunction utf8_decode(bytes) {\n    let pos = 0;\n    const decodeUtf8 = () => {\n        const i1 = bytes[pos++];\n        if ((i1 & 0x80) === 0) {\n            return i1;\n        }\n        else if ((i1 & 0xE0) === 0xC0) {\n            const i2 = bytes[pos++];\n            return ((i1 & 0x1F) << 6) | (i2 & 0x3F);\n        }\n        else if ((i1 & 0xF0) === 0xE0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            return ((i1 & 0x0F) << 12) | ((i2 & 0x3F) << 6) | (i3 & 0x3F);\n        }\n        else if ((i1 & 0xF8) === 0xF0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            const i4 = bytes[pos++];\n            return ((i1 & 0x07) << 18) | ((i2 & 0x3F) << 12) | ((i3 & 0x3F) << 6) | (i4 & 0x3F);\n        }\n        else {\n            throw new RangeError(\"Invalid UTF8 byte: \" + i1);\n        }\n    };\n    const chars = new Array();\n    while (pos < bytes.length) {\n        const code = decodeUtf8();\n        chars.push(String.fromCodePoint(code));\n    }\n    return chars.join(\"\");\n}\nclass UTF16LE {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf16le\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf16le_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder(\"utf-16le\").decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf16le\");\n        }\n        else {\n            return utf16le_decode(buffer); // polyfill\n        }\n    }\n}\nclass UTF8 {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof TextEncoder !== \"undefined\") {\n            return new TextEncoder().encode(str);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf8\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf8_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder().decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf8\");\n        }\n        else {\n            return utf8_decode(buffer); // polyfill\n        }\n    }\n}\nconst _UTF16 = new UTF16LE();\nconst _UTF8 = new UTF8();\nexport function get_Unicode() { return _UTF16; }\nexport function get_UTF8() { return _UTF8; }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"oU4nu9AlXQ4IrIsKMKUa0\"};","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { Union } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { string_type, union_type } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\n\nexport class DatabaseError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Unspecified\"];\n    }\n}\n\nexport function DatabaseError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.DatabaseError\", [], DatabaseError, () => [[]]);\n}\n\nexport function DatabaseErrorModule_explain(_arg1) {\n    return \"Unspecified Database error occured\";\n}\n\nexport class UserError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"UserAlreadyExists\"];\n    }\n}\n\nexport function UserError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.UserError\", [], UserError, () => [[[\"username\", string_type]]]);\n}\n\nexport function UserErrorModule_explain(_arg1) {\n    const username = _arg1.fields[0];\n    const clo1 = toText(printf(\"User with username \\u0027%s\\u0027 already exists\"));\n    return clo1(username);\n}\n\nexport class AuthenticationError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"InvalidUsernameOrPassword\"];\n    }\n}\n\nexport function AuthenticationError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.AuthenticationError\", [], AuthenticationError, () => [[]]);\n}\n\nexport function AuthenticationErrorModule_explain(_arg1) {\n    return \"Invalid username or password\";\n}\n\nexport class ApplicationError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AuthenticationError\", \"UserError\", \"DatabaseError\"];\n    }\n}\n\nexport function ApplicationError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.ApplicationError\", [], ApplicationError, () => [[[\"Item\", AuthenticationError$reflection()]], [[\"Item\", UserError$reflection()]], [[\"Item\", DatabaseError$reflection()]]]);\n}\n\nexport function ApplicationErrorModule_explain(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            const err_1 = _arg1.fields[0];\n            return UserErrorModule_explain(err_1);\n        }\n        case 2: {\n            const err_2 = _arg1.fields[0];\n            return DatabaseErrorModule_explain(err_2);\n        }\n        default: {\n            const err = _arg1.fields[0];\n            return AuthenticationErrorModule_explain(err);\n        }\n    }\n}\n\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { Record } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { list_type, unit_type, lambda_type, union_type, class_type, record_type, string_type } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { ApplicationError$reflection } from \"./Errors.js\";\nimport { FSharpResult$2 } from \"../.fable/fable-library.3.0.0-nagareyama-rc-008/Choice.js\";\n\nexport class Request_Login extends Record {\n    constructor(Username, Password) {\n        super();\n        this.Username = Username;\n        this.Password = Password;\n    }\n}\n\nexport function Request_Login$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Request.Login\", [], Request_Login, () => [[\"Username\", string_type], [\"Password\", string_type]]);\n}\n\nexport class Request_AddUser extends Record {\n    constructor(Username, Name, Password) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n        this.Password = Password;\n    }\n}\n\nexport function Request_AddUser$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Request.AddUser\", [], Request_AddUser, () => [[\"Username\", string_type], [\"Name\", string_type], [\"Password\", string_type]]);\n}\n\nexport class Response_Token extends Record {\n    constructor(Token, ExpiresUtc) {\n        super();\n        this.Token = Token;\n        this.ExpiresUtc = ExpiresUtc;\n    }\n}\n\nexport function Response_Token$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.Token\", [], Response_Token, () => [[\"Token\", string_type], [\"ExpiresUtc\", class_type(\"System.DateTimeOffset\")]]);\n}\n\nexport class Response_LoggedInUser extends Record {\n    constructor(Username, Name, Token, RefreshToken) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n        this.Token = Token;\n        this.RefreshToken = RefreshToken;\n    }\n}\n\nexport function Response_LoggedInUser$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.LoggedInUser\", [], Response_LoggedInUser, () => [[\"Username\", string_type], [\"Name\", string_type], [\"Token\", Response_Token$reflection()], [\"RefreshToken\", Response_Token$reflection()]]);\n}\n\nexport class Response_UserRow extends Record {\n    constructor(Username, Name) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n    }\n}\n\nexport function Response_UserRow$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.UserRow\", [], Response_UserRow, () => [[\"Username\", string_type], [\"Name\", string_type]]);\n}\n\nexport function Route_builder(_arg1, m) {\n    const clo1 = toText(printf(\"/api/users/%s\"));\n    return clo1(m);\n}\n\nexport class UsersService extends Record {\n    constructor(Login, GetUsers, SaveUser) {\n        super();\n        this.Login = Login;\n        this.GetUsers = GetUsers;\n        this.SaveUser = SaveUser;\n    }\n}\n\nexport function UsersService$reflection() {\n    return record_type(\"Cookbook.Shared.Users.UsersService\", [], UsersService, () => [[\"Login\", lambda_type(Request_Login$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Response_LoggedInUser$reflection(), ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", Response_LoggedInUser$reflection()]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))], [\"GetUsers\", lambda_type(unit_type, class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [list_type(Response_UserRow$reflection()), ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", list_type(Response_UserRow$reflection())]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))], [\"SaveUser\", lambda_type(Request_AddUser$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [unit_type, ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", unit_type]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))]]);\n}\n\n","import { Union, Record } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { union_type, bool_type, list_type, record_type, string_type } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { Response_LoggedInUser$reflection } from \"../../Shared/Users.js\";\nimport { ApplicationError$reflection } from \"../../Shared/Errors.js\";\nimport { FSharpResult$2 } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Choice.js\";\n\nexport class LoginForm extends Record {\n    constructor(Username, Password) {\n        super();\n        this.Username = Username;\n        this.Password = Password;\n    }\n}\n\nexport function LoginForm$reflection() {\n    return record_type(\"Cookbook.Client.Pages.Login.Domain.LoginForm\", [], LoginForm, () => [[\"Username\", string_type], [\"Password\", string_type]]);\n}\n\nexport class Model extends Record {\n    constructor(Form, Errors, IsLoading) {\n        super();\n        this.Form = Form;\n        this.Errors = Errors;\n        this.IsLoading = IsLoading;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Cookbook.Client.Pages.Login.Domain.Model\", [], Model, () => [[\"Form\", LoginForm$reflection()], [\"Errors\", list_type(string_type)], [\"IsLoading\", bool_type]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"UsernameChanged\", \"PasswordChanged\", \"Login\", \"LoggedIn\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Cookbook.Client.Pages.Login.Domain.Msg\", [], Msg, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [], [[\"Item\", union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Response_LoggedInUser$reflection(), ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", Response_LoggedInUser$reflection()]], [[\"ErrorValue\", ApplicationError$reflection()]]])]]]);\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { singleton, concat, map, empty, iterate } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { singleton as singleton_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    const bind = (dispatch) => {\n        try {\n            const arg_1 = task(arg);\n            return dispatch(ofSuccess(arg_1));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    const bind = (dispatch) => {\n        try {\n            const arg_1 = task(arg);\n            dispatch(ofSuccess(arg_1));\n        }\n        catch (x) {\n        }\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    const bind = (dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    const bind = (dispatch) => {\n        const builder$0040 = singleton_1;\n        return builder$0040.Delay(() => {\n            let arg00;\n            return builder$0040.Bind((arg00 = task(arg), (catchAsync(arg00))), (_arg1) => {\n                let x_1, x;\n                const r = _arg1;\n                dispatch((r.tag === 1) ? (x_1 = r.fields[0], ofError(x_1)) : (x = r.fields[0], ofSuccess(x)));\n                return builder$0040.Zero();\n            });\n        });\n    };\n    return singleton((arg_1) => {\n        start(bind(arg_1));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    const bind = (dispatch) => {\n        const builder$0040 = singleton_1;\n        return builder$0040.Delay(() => {\n            let arg00;\n            return builder$0040.Bind((arg00 = task(arg), (catchAsync(arg00))), (_arg1) => {\n                const r = _arg1;\n                if (r.tag === 0) {\n                    const x = r.fields[0];\n                    dispatch(ofSuccess(x));\n                    return builder$0040.Zero();\n                }\n                else {\n                    return builder$0040.Zero();\n                }\n            });\n        });\n    };\n    return singleton((arg_1) => {\n        start(bind(arg_1));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    const bind = (dispatch) => {\n        const builder$0040 = singleton_1;\n        return builder$0040.Delay(() => {\n            let arg00;\n            return builder$0040.Bind((arg00 = task(arg), (catchAsync(arg00))), (_arg1) => {\n                const r = _arg1;\n                if (r.tag === 1) {\n                    const x = r.fields[0];\n                    dispatch(ofError(x));\n                    return builder$0040.Zero();\n                }\n                else {\n                    return builder$0040.Zero();\n                }\n            });\n        });\n    };\n    return singleton((arg_1) => {\n        start(bind(arg_1));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    const bind = (dispatch) => {\n        const builder$0040 = singleton_1;\n        return builder$0040.Delay(() => builder$0040.Bind(task, (_arg1) => {\n            const r = _arg1;\n            dispatch(r);\n            return builder$0040.Zero();\n        }));\n    };\n    return singleton((arg) => {\n        start(bind(arg));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    const bind = (dispatch) => {\n        const value_1 = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch((ofError((arg_3)))));\n        void value_1;\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    const bind = (dispatch) => {\n        const value = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n        void value;\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    const bind = (dispatch) => {\n        const value_1 = task(arg).catch((arg_2) => {\n            dispatch((ofError((arg_2))));\n        });\n        void value_1;\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_OfPromise_result(task) {\n    const bind = (dispatch) => {\n        const value = task.then(dispatch);\n        void value;\n    };\n    return singleton(bind);\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { Exception, Record, Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { class_type, lambda_type, option_type, int32_type, record_type, bool_type, list_type, tuple_type, array_type, uint8_type, string_type, union_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\n\nexport class HttpMethod extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"GET\", \"POST\"];\n    }\n}\n\nexport function HttpMethod$reflection() {\n    return union_type(\"Fable.Remoting.Client.HttpMethod\", [], HttpMethod, () => [[], []]);\n}\n\nexport class RequestBody extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Empty\", \"Json\", \"Binary\"];\n    }\n}\n\nexport function RequestBody$reflection() {\n    return union_type(\"Fable.Remoting.Client.RequestBody\", [], RequestBody, () => [[], [[\"Item\", string_type]], [[\"Item\", array_type(uint8_type)]]]);\n}\n\nexport class SerializationType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Json\", \"MessagePack\"];\n    }\n}\n\nexport function SerializationType$reflection() {\n    return union_type(\"Fable.Remoting.Client.SerializationType\", [], SerializationType, () => [[], []]);\n}\n\nexport class HttpRequest extends Record {\n    constructor(HttpMethod, Url, Headers, RequestBody, WithCredentials) {\n        super();\n        this.HttpMethod = HttpMethod;\n        this.Url = Url;\n        this.Headers = Headers;\n        this.RequestBody = RequestBody;\n        this.WithCredentials = WithCredentials;\n    }\n}\n\nexport function HttpRequest$reflection() {\n    return record_type(\"Fable.Remoting.Client.HttpRequest\", [], HttpRequest, () => [[\"HttpMethod\", HttpMethod$reflection()], [\"Url\", string_type], [\"Headers\", list_type(tuple_type(string_type, string_type))], [\"RequestBody\", RequestBody$reflection()], [\"WithCredentials\", bool_type]]);\n}\n\nexport class HttpResponse extends Record {\n    constructor(StatusCode, ResponseBody) {\n        super();\n        this.StatusCode = (StatusCode | 0);\n        this.ResponseBody = ResponseBody;\n    }\n}\n\nexport function HttpResponse$reflection() {\n    return record_type(\"Fable.Remoting.Client.HttpResponse\", [], HttpResponse, () => [[\"StatusCode\", int32_type], [\"ResponseBody\", string_type]]);\n}\n\nexport class RemoteBuilderOptions extends Record {\n    constructor(CustomHeaders, BaseUrl, Authorization, WithCredentials, RouteBuilder, ResponseSerialization) {\n        super();\n        this.CustomHeaders = CustomHeaders;\n        this.BaseUrl = BaseUrl;\n        this.Authorization = Authorization;\n        this.WithCredentials = WithCredentials;\n        this.RouteBuilder = RouteBuilder;\n        this.ResponseSerialization = ResponseSerialization;\n    }\n}\n\nexport function RemoteBuilderOptions$reflection() {\n    return record_type(\"Fable.Remoting.Client.RemoteBuilderOptions\", [], RemoteBuilderOptions, () => [[\"CustomHeaders\", list_type(tuple_type(string_type, string_type))], [\"BaseUrl\", option_type(string_type)], [\"Authorization\", option_type(string_type)], [\"WithCredentials\", bool_type], [\"RouteBuilder\", lambda_type(string_type, lambda_type(string_type, string_type))], [\"ResponseSerialization\", SerializationType$reflection()]]);\n}\n\nexport class ProxyRequestException extends Exception {\n    constructor(response, errorMsg, reponseText) {\n        super(errorMsg);\n        this.response = response;\n        this.reponseText = reponseText;\n    }\n}\n\nexport function ProxyRequestException$reflection() {\n    return class_type(\"Fable.Remoting.Client.ProxyRequestException\", void 0, ProxyRequestException, class_type(\"System.Exception\"));\n}\n\nexport function ProxyRequestException_$ctor_76BC5104(response, errorMsg, reponseText) {\n    return new ProxyRequestException(response, errorMsg, reponseText);\n}\n\nexport function ProxyRequestException__get_Response(this$) {\n    return this$.response;\n}\n\nexport function ProxyRequestException__get_StatusCode(this$) {\n    return this$.response.StatusCode;\n}\n\nexport function ProxyRequestException__get_ResponseText(this$) {\n    return this$.reponseText;\n}\n\n","import { fromContinuations } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { isNullOrWhiteSpace } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\n\nexport function InternalUtilities_toUInt8Array(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else {\n        return new Uint8Array(data);\n    }\n}\n\nexport function Browser_Types_File__File_ReadAsByteArray(instance) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                resolve(new Uint8Array(reader.result));\n            }\n        });\n        reader.readAsArrayBuffer(instance);\n    });\n}\n\nexport function Browser_Types_File__File_ReadAsDataUrl(instance) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const reader = new FileReader();\n        reader.onload = ((_arg4) => {\n            if (reader.readyState === 2) {\n                resolve(reader.result);\n            }\n        });\n        reader.readAsDataURL(instance);\n    });\n}\n\nexport function Browser_Types_File__File_ReadAsText(instance) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const reader = new FileReader();\n        reader.onload = ((_arg7) => {\n            if (reader.readyState === 2) {\n                resolve(reader.result);\n            }\n        });\n        reader.readAsText(instance);\n    });\n}\n\nexport class ByteArrayExtensions {\n    constructor() {\n    }\n}\n\nexport function ByteArrayExtensions$reflection() {\n    return class_type(\"Fable.Remoting.Client.ByteArrayExtensions\", void 0, ByteArrayExtensions);\n}\n\nexport function ByteArrayExtensions_SaveFileAs_72B26259(content, fileName) {\n    if (isNullOrWhiteSpace(fileName)) {\n    }\n    else {\n        const mimeType = \"application/octet-stream\";\n        const binaryData = InternalUtilities_toUInt8Array(content);\n        const blob = new Blob([binaryData.buffer], { type: mimeType });\n        const dataUrl = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.style = \"display: none\";\n        anchor.href = dataUrl;\n        anchor.download = fileName;\n        anchor.rel = \"noopener\";\n        anchor.click();\n        anchor.remove();\n        const value = window.setTimeout(() => {\n            URL.revokeObjectURL(dataUrl);\n        }, 40 * 1000);\n        void value;\n    }\n}\n\nexport function ByteArrayExtensions_SaveFileAs_451DD142(content, fileName, mimeType) {\n    if (isNullOrWhiteSpace(fileName)) {\n    }\n    else {\n        const binaryData = InternalUtilities_toUInt8Array(content);\n        const blob = new Blob([binaryData.buffer], { type: mimeType });\n        const dataUrl = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.style = \"display: none\";\n        anchor.href = dataUrl;\n        anchor.download = fileName;\n        anchor.rel = \"noopener\";\n        anchor.click();\n        anchor.remove();\n        const value = window.setTimeout(() => {\n            URL.revokeObjectURL(dataUrl);\n        }, 40 * 1000);\n        void value;\n    }\n}\n\nexport function ByteArrayExtensions_AsDataUrl_6C95DA22(content) {\n    const binaryData = InternalUtilities_toUInt8Array(content);\n    const blob = new Blob([binaryData.buffer], { type: \"application/octet-stream\" });\n    const dataUrl = window.URL.createObjectURL(blob);\n    return dataUrl;\n}\n\nexport function ByteArrayExtensions_AsDataUrl_72B26259(content, mimeType) {\n    const binaryData = InternalUtilities_toUInt8Array(content);\n    const blob = new Blob([binaryData.buffer], { type: mimeType });\n    const dataUrl = window.URL.createObjectURL(blob);\n    return dataUrl;\n}\n\n","import { HttpResponse, HttpRequest, RequestBody, HttpMethod as HttpMethod_1 } from \"./Types.fs.js\";\nimport { empty } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { fromContinuations } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { getEnumerator } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { InternalUtilities_toUInt8Array } from \"./Extensions.fs.js\";\n\nconst defaultRequestConfig = new HttpRequest(new HttpMethod_1(0), \"/\", empty(), new RequestBody(0), false);\n\nexport function get$(url) {\n    return new HttpRequest(new HttpMethod_1(0), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function post(url) {\n    return new HttpRequest(new HttpMethod_1(1), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function request(method, url) {\n    return new HttpRequest(method, url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function withHeaders(headers, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, headers, req.RequestBody, req.WithCredentials);\n}\n\nexport function withCredentials(withCredentials_1, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, req.RequestBody, withCredentials_1);\n}\n\nexport function withBody(body, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, body, req.WithCredentials);\n}\n\nexport function send(req) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const xhr = new XMLHttpRequest();\n        if (req.HttpMethod.tag === 1) {\n            xhr.open(\"POST\", req.Url);\n        }\n        else {\n            xhr.open(\"GET\", req.Url);\n        }\n        const enumerator = getEnumerator(req.Headers);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                const value = forLoopVar[1];\n                const key = forLoopVar[0];\n                xhr.setRequestHeader(key, value);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        xhr.withCredentials = true;\n        xhr.onreadystatechange = (() => {\n            const matchValue_3 = xhr.readyState | 0;\n            if (matchValue_3 === 4) {\n                resolve(new HttpResponse(xhr.status, xhr.responseText));\n            }\n            else {\n                void undefined;\n            }\n        });\n        const matchValue_4 = req.RequestBody;\n        switch (matchValue_4.tag) {\n            case 1: {\n                const content = matchValue_4.fields[0];\n                xhr.send(some(content));\n                break;\n            }\n            case 2: {\n                const content_1 = matchValue_4.fields[0];\n                xhr.send(some(InternalUtilities_toUInt8Array(content_1)));\n                break;\n            }\n            default: {\n                xhr.send();\n            }\n        }\n    });\n}\n\nexport function sendAndReadBinary(req) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const xhr = new XMLHttpRequest();\n        if (req.HttpMethod.tag === 1) {\n            xhr.open(\"POST\", req.Url);\n        }\n        else {\n            xhr.open(\"GET\", req.Url);\n        }\n        xhr.responseType = \"arraybuffer\";\n        const enumerator = getEnumerator(req.Headers);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                const value = forLoopVar[1];\n                const key = forLoopVar[0];\n                xhr.setRequestHeader(key, value);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        xhr.withCredentials = req.WithCredentials;\n        xhr.onreadystatechange = (() => {\n            const matchValue_3 = xhr.readyState | 0;\n            if (matchValue_3 === 4) {\n                const bytes = new Uint8Array(xhr.response);\n                resolve([bytes, xhr.status]);\n            }\n            else {\n                void undefined;\n            }\n        });\n        const matchValue_4 = req.RequestBody;\n        switch (matchValue_4.tag) {\n            case 1: {\n                const content = matchValue_4.fields[0];\n                xhr.send(some(content));\n                break;\n            }\n            case 2: {\n                const content_1 = matchValue_4.fields[0];\n                xhr.send(some(InternalUtilities_toUInt8Array(content_1)));\n                break;\n            }\n            default: {\n                xhr.send();\n            }\n        }\n    });\n}\n\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { float64_type, float32_type, isEnum, int8_type, fullName, uint16_type, uint32_type, array_type, uint8_type, int16_type, getTupleElements, makeTuple, isTuple, getElementType, isArray, list_type, option_type, isGenericType, makeUnion, getUnionCaseFields, getUnionCases, int32_type, isUnion, makeRecord, getRecordElements, isRecord, obj_type, getGenericTypeDefinition, equals, name, getGenerics, class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { get_UTF8 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Encoding.js\";\nimport { isLittleEndian, toDouble, toSingle, toInt64, toUInt64, toInt32, toUInt32, toInt16, toUInt16 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/BitConverter.js\";\nimport { printf, toFail } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { head, map, fill } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { Dictionary } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MutableMap.js\";\nimport { compare, structuralHash, equals as equals_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { addToDict } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MapUtil.js\";\nimport { ofArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Map.js\";\nimport { FSharpSet__Add, empty } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Set.js\";\nimport { some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { ofSeq } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { rangeNumber, singleton, collect, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { fromTicks } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/DateOffset.js\";\nimport { fromTicks as fromTicks_2, fromMinutes } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/TimeSpan.js\";\nimport { arrayToGuid } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Guid.js\";\nimport { fromByteArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt.js\";\nimport { toNumber, fromValue, toInt, fromInteger } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Long.js\";\nimport { fromTicks as fromTicks_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Date.js\";\nimport Decimal from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Decimal.js\";\n\nexport function interpretStringAs(typ, str) {\n    return str;\n}\n\nexport class Reader {\n    constructor(data) {\n        this.data = data;\n        this.pos = 0;\n    }\n}\n\nexport function Reader$reflection() {\n    return class_type(\"Fable.Remoting.MsgPack.Read.Reader\", void 0, Reader);\n}\n\nexport function Reader_$ctor_6C95DA22(data) {\n    return new Reader(data);\n}\n\nexport function Reader__ReadByte(_) {\n    _.pos = (_.pos + 1);\n    return _.data[_.pos - 1];\n}\n\nexport function Reader__ReadRawBin_Z524259A4(_, len) {\n    _.pos = (_.pos + len);\n    return _.data.slice(_.pos - len, (_.pos - 1) + 1);\n}\n\nexport function Reader__ReadString_Z524259A4(_, len) {\n    _.pos = (_.pos + len);\n    return get_UTF8().getString(_.data, _.pos - len, len);\n}\n\nexport function Reader__ReadUInt8(x) {\n    return Reader__ReadByte(x);\n}\n\nexport function Reader__ReadInt8(x) {\n    const value = Reader__ReadByte(x);\n    return ((value + 0x80 & 0xFF) - 0x80) | 0;\n}\n\nexport function Reader__ReadUInt16(_) {\n    return Reader__readInt(_, 2, (tupledArg) => toUInt16(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt16(_) {\n    return Reader__readInt(_, 2, (tupledArg) => toInt16(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadUInt32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toUInt32(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toInt32(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadUInt64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toUInt64(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toInt64(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadFloat32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toSingle(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadFloat64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toDouble(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadMap_412036CA(x, len, t) {\n    let value;\n    const args = getGenerics(t);\n    if (args.length !== 2) {\n        const arg10 = name(t);\n        const clo1 = toFail(printf(\"Expecting %s, but the data contains a map.\"));\n        clo1(arg10);\n    }\n    let pairs;\n    const arr = fill(new Array(len), 0, len, null);\n    for (let i = 0; i <= (len - 1); i++) {\n        arr[i] = [(value = Reader__Read_24524716(x, args[0]), (value)), Reader__Read_24524716(x, args[1])];\n    }\n    pairs = arr;\n    if (equals(getGenericTypeDefinition(t), class_type(\"System.Collections.Generic.Dictionary`2\", [obj_type, obj_type]))) {\n        const dict = new Dictionary([], {\n            Equals: equals_1,\n            GetHashCode: structuralHash,\n        });\n        pairs.forEach((tupledArg) => {\n            addToDict(dict, tupledArg[0], tupledArg[1]);\n        });\n        return dict;\n    }\n    else {\n        const value_1 = ofArray(pairs);\n        return value_1;\n    }\n}\n\nexport function Reader__ReadSet_412036CA(x, len, t) {\n    let value;\n    const args = getGenerics(t);\n    if (args.length !== 1) {\n        const arg10 = name(t);\n        const clo1 = toFail(printf(\"Expecting %s, but the data contains a set.\"));\n        clo1(arg10);\n    }\n    let set$ = empty({\n        Compare: compare,\n    });\n    for (let forLoopVar = 0; forLoopVar <= (len - 1); forLoopVar++) {\n        set$ = FSharpSet__Add(set$, (value = Reader__Read_24524716(x, args[0]), (value)));\n    }\n    return set$;\n}\n\nexport function Reader__ReadRawArray_412036CA(x, len, elementType) {\n    const arr = fill(new Array(len), 0, len, null);\n    for (let i = 0; i <= (len - 1); i++) {\n        arr[i] = Reader__Read_24524716(x, elementType);\n    }\n    return arr;\n}\n\nexport function Reader__ReadArray_412036CA(x, len, t) {\n    let array_4, array_6;\n    if (isRecord(t)) {\n        const props = getRecordElements(t);\n        return makeRecord(t, (map((prop) => Reader__Read_24524716(x, prop[1]), props)));\n    }\n    else if (isUnion(t, true)) {\n        const tag = Reader__Read_24524716(x, int32_type);\n        let case$;\n        const array_1 = getUnionCases(t, true);\n        case$ = array_1.find((x_1) => (x_1.tag === tag));\n        let fieldTypes;\n        const array_2 = getUnionCaseFields(case$);\n        fieldTypes = map((x_2) => x_2[1], array_2);\n        let fields;\n        if (fieldTypes.length === 1) {\n            fields = [Reader__Read_24524716(x, fieldTypes[0])];\n        }\n        else {\n            const value = Reader__ReadByte(x);\n            void value;\n            fields = map((arg00) => Reader__Read_24524716(x, arg00), fieldTypes);\n        }\n        return makeUnion(case$, fields, true);\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), option_type(obj_type)) : false) {\n        const tag_1 = Reader__ReadByte(x);\n        if (tag_1 === 0) {\n            const value_1 = Reader__ReadByte(x);\n            void value_1;\n            return null;\n        }\n        else {\n            let value_2;\n            const arg0 = Reader__Read_24524716(x, (array_4 = getGenerics(t), (head(array_4))));\n            value_2 = some(arg0);\n            return value_2;\n        }\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), list_type(obj_type)) : false) {\n        let elementType;\n        const array_5 = getGenerics(t);\n        elementType = head(array_5);\n        const value_3 = ofSeq(delay(() => collect((matchValue) => singleton(Reader__Read_24524716(x, elementType)), rangeNumber(0, 1, len - 1))));\n        return value_3;\n    }\n    else if (isArray(t)) {\n        const value_4 = Reader__ReadRawArray_412036CA(x, len, getElementType(t));\n        return value_4;\n    }\n    else if (isTuple(t)) {\n        return makeTuple((array_6 = getTupleElements(t), (map((arg00_1) => Reader__Read_24524716(x, arg00_1), array_6))), t);\n    }\n    else if (equals(t, class_type(\"System.DateTimeOffset\"))) {\n        const dateTimeTicks = Reader__Read_24524716(x, class_type(\"System.Int64\"));\n        const timeSpanMinutes = Reader__Read_24524716(x, int16_type);\n        const value_5 = fromTicks(dateTimeTicks, fromMinutes(timeSpanMinutes));\n        return value_5;\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [obj_type])) : false) {\n        return Reader__ReadSet_412036CA(x, len, t);\n    }\n    else {\n        const arg10 = name(t);\n        const arg20 = x.pos | 0;\n        const clo1 = toFail(printf(\"Expecting %s at position %d, but the data contains an array.\"));\n        const clo2 = clo1(arg10);\n        return clo2(arg20);\n    }\n}\n\nexport function Reader__ReadBin_412036CA(x, len, t) {\n    if (equals(t, class_type(\"System.Guid\"))) {\n        let value;\n        const arg00 = Reader__ReadRawBin_Z524259A4(x, len);\n        value = arrayToGuid(arg00);\n        return value;\n    }\n    else if (equals(t, array_type(uint8_type))) {\n        const value_1 = Reader__ReadRawBin_Z524259A4(x, len);\n        return value_1;\n    }\n    else if (equals(t, class_type(\"System.Numerics.BigInteger\"))) {\n        let value_2;\n        const arg00_1 = Reader__ReadRawBin_Z524259A4(x, len);\n        value_2 = fromByteArray(arg00_1);\n        return value_2;\n    }\n    else {\n        const arg10 = name(t);\n        const arg20 = x.pos | 0;\n        const clo1 = toFail(printf(\"Expecting %s at position %d, but the data contains bin.\"));\n        const clo2 = clo1(arg10);\n        return clo2(arg20);\n    }\n}\n\nexport function Reader__Read_24524716(x, t) {\n    let b, b_2, b_4, b_6, value_156, b_8, value_159;\n    const matchValue = Reader__ReadByte(x);\n    if (b = matchValue, (b | 31) === 191) {\n        const b_1 = matchValue;\n        let str;\n        let arg00;\n        const value = b_1 & 31;\n        arg00 = (~(~value));\n        str = Reader__ReadString_Z524259A4(x, arg00);\n        return interpretStringAs(t, str);\n    }\n    else if (matchValue === 217) {\n        let str_1;\n        let arg00_1;\n        const value_1 = Reader__ReadByte(x);\n        arg00_1 = (~(~value_1));\n        str_1 = Reader__ReadString_Z524259A4(x, arg00_1);\n        return interpretStringAs(t, str_1);\n    }\n    else if (matchValue === 218) {\n        let str_2;\n        let arg00_2;\n        const value_2 = Reader__ReadUInt16(x);\n        arg00_2 = (~(~value_2));\n        str_2 = Reader__ReadString_Z524259A4(x, arg00_2);\n        return interpretStringAs(t, str_2);\n    }\n    else if (matchValue === 219) {\n        let str_3;\n        let arg00_3;\n        const value_3 = Reader__ReadUInt32(x);\n        arg00_3 = (~(~value_3));\n        str_3 = Reader__ReadString_Z524259A4(x, arg00_3);\n        return interpretStringAs(t, str_3);\n    }\n    else if (b_2 = matchValue, (b_2 | 127) === 127) {\n        const b_3 = matchValue;\n        const typ = t;\n        const n = b_3;\n        if (equals(typ, int32_type)) {\n            const value_4 = (~(~n)) | 0;\n            return value_4;\n        }\n        else if (equals(typ, class_type(\"System.Int64\"))) {\n            const value_5 = fromInteger(n, false, 4);\n            return value_5;\n        }\n        else if (equals(typ, int16_type)) {\n            const value_6 = ((n + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_6;\n        }\n        else if (equals(typ, class_type(\"System.DateTime\"))) {\n            const value_7 = fromTicks_1(fromInteger(n, false, 4));\n            return value_7;\n        }\n        else if (equals(typ, uint32_type)) {\n            return n;\n        }\n        else if (equals(typ, class_type(\"System.UInt64\"))) {\n            const value_9 = fromInteger(n, true, 4);\n            return value_9;\n        }\n        else if (equals(typ, uint16_type)) {\n            return n;\n        }\n        else if (equals(typ, class_type(\"System.TimeSpan\"))) {\n            const value_11 = fromTicks_2(fromInteger(n, false, 4));\n            return value_11;\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_12 = ((n + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_12;\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_13 = (~(~n)) | 0;\n            return value_13;\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_14 = fromInteger(n, false, 4);\n            return value_14;\n        }\n        else if (equals(typ, uint8_type)) {\n            return n;\n        }\n        else if (equals(typ, int8_type)) {\n            const value_16 = ((n + 0x80 & 0xFF) - 0x80) | 0;\n            return value_16;\n        }\n        else if (isEnum(typ)) {\n            return n;\n        }\n        else {\n            const arg20 = name(typ);\n            const clo1 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2 = clo1(n);\n            return clo2(arg20);\n        }\n    }\n    else if (b_4 = matchValue, (b_4 | 31) === 255) {\n        const b_5 = matchValue;\n        const n_1 = ((b_5 + 0x80 & 0xFF) - 0x80) | 0;\n        const typ_1 = t;\n        const n_2 = n_1 | 0;\n        if (equals(typ_1, int32_type)) {\n            return n_2;\n        }\n        else if (equals(typ_1, class_type(\"System.Int64\"))) {\n            const value_19 = fromInteger(n_2, false, 0);\n            return value_19;\n        }\n        else if (equals(typ_1, int16_type)) {\n            return n_2;\n        }\n        else if (equals(typ_1, class_type(\"System.DateTime\"))) {\n            const value_21 = fromTicks_1(fromInteger(n_2, false, 0));\n            return value_21;\n        }\n        else if (equals(typ_1, uint32_type)) {\n            const value_22 = n_2 >>> 0;\n            return value_22;\n        }\n        else if (equals(typ_1, class_type(\"System.UInt64\"))) {\n            const value_23 = fromInteger(n_2, true, 0);\n            return value_23;\n        }\n        else if (equals(typ_1, uint16_type)) {\n            const value_24 = n_2 & 0xFFFF;\n            return value_24;\n        }\n        else if (equals(typ_1, class_type(\"System.TimeSpan\"))) {\n            const value_25 = fromTicks_2(fromInteger(n_2, false, 0));\n            return value_25;\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_2;\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_2;\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_28 = fromInteger(n_2, false, 0);\n            return value_28;\n        }\n        else if (equals(typ_1, uint8_type)) {\n            const value_29 = n_2 & 0xFF;\n            return value_29;\n        }\n        else if (equals(typ_1, int8_type)) {\n            return n_2;\n        }\n        else if (isEnum(typ_1)) {\n            return n_2;\n        }\n        else {\n            const arg20_1 = name(typ_1);\n            const clo1_1 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_1 = clo1_1(n_2);\n            return clo2_1(arg20_1);\n        }\n    }\n    else if (matchValue === 192) {\n        return null;\n    }\n    else if (matchValue === 194) {\n        return false;\n    }\n    else if (matchValue === 195) {\n        return true;\n    }\n    else if (matchValue === 202) {\n        const n_19 = Reader__ReadFloat32(x);\n        const typ_10 = t;\n        const n_20 = n_19;\n        if (equals(typ_10, float32_type)) {\n            return n_20;\n        }\n        else if (equals(typ_10, float64_type)) {\n            return n_20;\n        }\n        else if (equals(typ_10, class_type(\"System.Decimal\"))) {\n            const value_146 = new Decimal(n_20);\n            return value_146;\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float32`1\") {\n            return n_20;\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float`1\") {\n            return n_20;\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.decimal`1\") {\n            const value_149 = new Decimal(n_20);\n            return value_149;\n        }\n        else {\n            const arg20_10 = name(typ_10);\n            const clo1_10 = toFail(printf(\"Cannot interpret float %A as %s.\"));\n            const clo2_10 = clo1_10(n_20);\n            return clo2_10(arg20_10);\n        }\n    }\n    else if (matchValue === 203) {\n        const n_21 = Reader__ReadFloat64(x);\n        const typ_11 = t;\n        const n_22 = n_21;\n        if (equals(typ_11, float32_type)) {\n            return n_22;\n        }\n        else if (equals(typ_11, float64_type)) {\n            return n_22;\n        }\n        else if (equals(typ_11, class_type(\"System.Decimal\"))) {\n            const value_152 = new Decimal(n_22);\n            return value_152;\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float32`1\") {\n            return n_22;\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float`1\") {\n            return n_22;\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.decimal`1\") {\n            const value_155 = new Decimal(n_22);\n            return value_155;\n        }\n        else {\n            const arg20_11 = name(typ_11);\n            const clo1_11 = toFail(printf(\"Cannot interpret float %A as %s.\"));\n            const clo2_11 = clo1_11(n_22);\n            return clo2_11(arg20_11);\n        }\n    }\n    else if (matchValue === 204) {\n        const n_11 = Reader__ReadUInt8(x);\n        const typ_6 = t;\n        const n_12 = n_11;\n        if (equals(typ_6, int32_type)) {\n            const value_88 = (~(~n_12)) | 0;\n            return value_88;\n        }\n        else if (equals(typ_6, class_type(\"System.Int64\"))) {\n            const value_89 = fromInteger(n_12, false, 4);\n            return value_89;\n        }\n        else if (equals(typ_6, int16_type)) {\n            const value_90 = ((n_12 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_90;\n        }\n        else if (equals(typ_6, class_type(\"System.DateTime\"))) {\n            const value_91 = fromTicks_1(fromInteger(n_12, false, 4));\n            return value_91;\n        }\n        else if (equals(typ_6, uint32_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, class_type(\"System.UInt64\"))) {\n            const value_93 = fromInteger(n_12, true, 4);\n            return value_93;\n        }\n        else if (equals(typ_6, uint16_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, class_type(\"System.TimeSpan\"))) {\n            const value_95 = fromTicks_2(fromInteger(n_12, false, 4));\n            return value_95;\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_96 = ((n_12 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_96;\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_97 = (~(~n_12)) | 0;\n            return value_97;\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_98 = fromInteger(n_12, false, 4);\n            return value_98;\n        }\n        else if (equals(typ_6, uint8_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, int8_type)) {\n            const value_100 = ((n_12 + 0x80 & 0xFF) - 0x80) | 0;\n            return value_100;\n        }\n        else if (isEnum(typ_6)) {\n            return n_12;\n        }\n        else {\n            const arg20_6 = name(typ_6);\n            const clo1_6 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_6 = clo1_6(n_12);\n            return clo2_6(arg20_6);\n        }\n    }\n    else if (matchValue === 205) {\n        const n_13 = Reader__ReadUInt16(x);\n        const typ_7 = t;\n        const n_14 = n_13;\n        if (equals(typ_7, int32_type)) {\n            const value_102 = (~(~n_14)) | 0;\n            return value_102;\n        }\n        else if (equals(typ_7, class_type(\"System.Int64\"))) {\n            const value_103 = fromInteger(n_14, false, 5);\n            return value_103;\n        }\n        else if (equals(typ_7, int16_type)) {\n            const value_104 = ((n_14 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_104;\n        }\n        else if (equals(typ_7, class_type(\"System.DateTime\"))) {\n            const value_105 = fromTicks_1(fromInteger(n_14, false, 5));\n            return value_105;\n        }\n        else if (equals(typ_7, uint32_type)) {\n            return n_14;\n        }\n        else if (equals(typ_7, class_type(\"System.UInt64\"))) {\n            const value_107 = fromInteger(n_14, true, 5);\n            return value_107;\n        }\n        else if (equals(typ_7, uint16_type)) {\n            return n_14;\n        }\n        else if (equals(typ_7, class_type(\"System.TimeSpan\"))) {\n            const value_109 = fromTicks_2(fromInteger(n_14, false, 5));\n            return value_109;\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_110 = ((n_14 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_110;\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_111 = (~(~n_14)) | 0;\n            return value_111;\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_112 = fromInteger(n_14, false, 5);\n            return value_112;\n        }\n        else if (equals(typ_7, uint8_type)) {\n            const value_113 = n_14 & 0xFF;\n            return value_113;\n        }\n        else if (equals(typ_7, int8_type)) {\n            const value_114 = ((n_14 + 0x80 & 0xFF) - 0x80) | 0;\n            return value_114;\n        }\n        else if (isEnum(typ_7)) {\n            return n_14;\n        }\n        else {\n            const arg20_7 = name(typ_7);\n            const clo1_7 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_7 = clo1_7(n_14);\n            return clo2_7(arg20_7);\n        }\n    }\n    else if (matchValue === 206) {\n        const n_15 = Reader__ReadUInt32(x);\n        const typ_8 = t;\n        const n_16 = n_15;\n        if (equals(typ_8, int32_type)) {\n            const value_116 = (~(~n_16)) | 0;\n            return value_116;\n        }\n        else if (equals(typ_8, class_type(\"System.Int64\"))) {\n            const value_117 = fromInteger(n_16, false, 6);\n            return value_117;\n        }\n        else if (equals(typ_8, int16_type)) {\n            const value_118 = ((n_16 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_118;\n        }\n        else if (equals(typ_8, class_type(\"System.DateTime\"))) {\n            const value_119 = fromTicks_1(fromInteger(n_16, false, 6));\n            return value_119;\n        }\n        else if (equals(typ_8, uint32_type)) {\n            return n_16;\n        }\n        else if (equals(typ_8, class_type(\"System.UInt64\"))) {\n            const value_121 = fromInteger(n_16, true, 6);\n            return value_121;\n        }\n        else if (equals(typ_8, uint16_type)) {\n            const value_122 = n_16 & 0xFFFF;\n            return value_122;\n        }\n        else if (equals(typ_8, class_type(\"System.TimeSpan\"))) {\n            const value_123 = fromTicks_2(fromInteger(n_16, false, 6));\n            return value_123;\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_124 = ((n_16 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_124;\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_125 = (~(~n_16)) | 0;\n            return value_125;\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_126 = fromInteger(n_16, false, 6);\n            return value_126;\n        }\n        else if (equals(typ_8, uint8_type)) {\n            const value_127 = n_16 & 0xFF;\n            return value_127;\n        }\n        else if (equals(typ_8, int8_type)) {\n            const value_128 = ((n_16 + 0x80 & 0xFF) - 0x80) | 0;\n            return value_128;\n        }\n        else if (isEnum(typ_8)) {\n            return n_16;\n        }\n        else {\n            const arg20_8 = name(typ_8);\n            const clo1_8 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_8 = clo1_8(n_16);\n            return clo2_8(arg20_8);\n        }\n    }\n    else if (matchValue === 207) {\n        const n_17 = Reader__ReadUInt64(x);\n        const typ_9 = t;\n        const n_18 = n_17;\n        if (equals(typ_9, int32_type)) {\n            const value_130 = (~(~toInt(n_18))) | 0;\n            return value_130;\n        }\n        else if (equals(typ_9, class_type(\"System.Int64\"))) {\n            const value_131 = fromValue(n_18, false);\n            return value_131;\n        }\n        else if (equals(typ_9, int16_type)) {\n            const value_132 = ((toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_132;\n        }\n        else if (equals(typ_9, class_type(\"System.DateTime\"))) {\n            const value_133 = fromTicks_1(fromValue(n_18, false));\n            return value_133;\n        }\n        else if (equals(typ_9, uint32_type)) {\n            const value_134 = toInt(n_18) >>> 0;\n            return value_134;\n        }\n        else if (equals(typ_9, class_type(\"System.UInt64\"))) {\n            const value_135 = fromValue(n_18, true);\n            return value_135;\n        }\n        else if (equals(typ_9, uint16_type)) {\n            const value_136 = toInt(n_18) & 0xFFFF;\n            return value_136;\n        }\n        else if (equals(typ_9, class_type(\"System.TimeSpan\"))) {\n            const value_137 = fromTicks_2(fromValue(n_18, false));\n            return value_137;\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_138 = ((toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_138;\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_139 = (~(~toInt(n_18))) | 0;\n            return value_139;\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_140 = fromValue(n_18, false);\n            return value_140;\n        }\n        else if (equals(typ_9, uint8_type)) {\n            const value_141 = toInt(n_18) & 0xFF;\n            return value_141;\n        }\n        else if (equals(typ_9, int8_type)) {\n            const value_142 = ((toInt(n_18) + 0x80 & 0xFF) - 0x80) | 0;\n            return value_142;\n        }\n        else if (isEnum(typ_9)) {\n            const value_143 = toNumber(n_18);\n            return value_143;\n        }\n        else {\n            const arg20_9 = name(typ_9);\n            const clo1_9 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_9 = clo1_9(n_18);\n            return clo2_9(arg20_9);\n        }\n    }\n    else if (matchValue === 208) {\n        const n_9 = Reader__ReadInt8(x) | 0;\n        const typ_5 = t;\n        const n_10 = n_9 | 0;\n        if (equals(typ_5, int32_type)) {\n            return n_10;\n        }\n        else if (equals(typ_5, class_type(\"System.Int64\"))) {\n            const value_75 = fromInteger(n_10, false, 0);\n            return value_75;\n        }\n        else if (equals(typ_5, int16_type)) {\n            return n_10;\n        }\n        else if (equals(typ_5, class_type(\"System.DateTime\"))) {\n            const value_77 = fromTicks_1(fromInteger(n_10, false, 0));\n            return value_77;\n        }\n        else if (equals(typ_5, uint32_type)) {\n            const value_78 = n_10 >>> 0;\n            return value_78;\n        }\n        else if (equals(typ_5, class_type(\"System.UInt64\"))) {\n            const value_79 = fromInteger(n_10, true, 0);\n            return value_79;\n        }\n        else if (equals(typ_5, uint16_type)) {\n            const value_80 = n_10 & 0xFFFF;\n            return value_80;\n        }\n        else if (equals(typ_5, class_type(\"System.TimeSpan\"))) {\n            const value_81 = fromTicks_2(fromInteger(n_10, false, 0));\n            return value_81;\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_10;\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_10;\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_84 = fromInteger(n_10, false, 0);\n            return value_84;\n        }\n        else if (equals(typ_5, uint8_type)) {\n            const value_85 = n_10 & 0xFF;\n            return value_85;\n        }\n        else if (equals(typ_5, int8_type)) {\n            return n_10;\n        }\n        else if (isEnum(typ_5)) {\n            return n_10;\n        }\n        else {\n            const arg20_5 = name(typ_5);\n            const clo1_5 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_5 = clo1_5(n_10);\n            return clo2_5(arg20_5);\n        }\n    }\n    else if (matchValue === 209) {\n        const n_7 = Reader__ReadInt16(x) | 0;\n        const typ_4 = t;\n        const n_8 = n_7 | 0;\n        if (equals(typ_4, int32_type)) {\n            return n_8;\n        }\n        else if (equals(typ_4, class_type(\"System.Int64\"))) {\n            const value_61 = fromInteger(n_8, false, 1);\n            return value_61;\n        }\n        else if (equals(typ_4, int16_type)) {\n            return n_8;\n        }\n        else if (equals(typ_4, class_type(\"System.DateTime\"))) {\n            const value_63 = fromTicks_1(fromInteger(n_8, false, 1));\n            return value_63;\n        }\n        else if (equals(typ_4, uint32_type)) {\n            const value_64 = n_8 >>> 0;\n            return value_64;\n        }\n        else if (equals(typ_4, class_type(\"System.UInt64\"))) {\n            const value_65 = fromInteger(n_8, true, 1);\n            return value_65;\n        }\n        else if (equals(typ_4, uint16_type)) {\n            const value_66 = n_8 & 0xFFFF;\n            return value_66;\n        }\n        else if (equals(typ_4, class_type(\"System.TimeSpan\"))) {\n            const value_67 = fromTicks_2(fromInteger(n_8, false, 1));\n            return value_67;\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_8;\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_8;\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_70 = fromInteger(n_8, false, 1);\n            return value_70;\n        }\n        else if (equals(typ_4, uint8_type)) {\n            const value_71 = n_8 & 0xFF;\n            return value_71;\n        }\n        else if (equals(typ_4, int8_type)) {\n            const value_72 = ((n_8 + 0x80 & 0xFF) - 0x80) | 0;\n            return value_72;\n        }\n        else if (isEnum(typ_4)) {\n            return n_8;\n        }\n        else {\n            const arg20_4 = name(typ_4);\n            const clo1_4 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_4 = clo1_4(n_8);\n            return clo2_4(arg20_4);\n        }\n    }\n    else if (matchValue === 210) {\n        const n_5 = Reader__ReadInt32(x) | 0;\n        const typ_3 = t;\n        const n_6 = n_5 | 0;\n        if (equals(typ_3, int32_type)) {\n            return n_6;\n        }\n        else if (equals(typ_3, class_type(\"System.Int64\"))) {\n            const value_47 = fromInteger(n_6, false, 2);\n            return value_47;\n        }\n        else if (equals(typ_3, int16_type)) {\n            const value_48 = ((n_6 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_48;\n        }\n        else if (equals(typ_3, class_type(\"System.DateTime\"))) {\n            const value_49 = fromTicks_1(fromInteger(n_6, false, 2));\n            return value_49;\n        }\n        else if (equals(typ_3, uint32_type)) {\n            const value_50 = n_6 >>> 0;\n            return value_50;\n        }\n        else if (equals(typ_3, class_type(\"System.UInt64\"))) {\n            const value_51 = fromInteger(n_6, true, 2);\n            return value_51;\n        }\n        else if (equals(typ_3, uint16_type)) {\n            const value_52 = n_6 & 0xFFFF;\n            return value_52;\n        }\n        else if (equals(typ_3, class_type(\"System.TimeSpan\"))) {\n            const value_53 = fromTicks_2(fromInteger(n_6, false, 2));\n            return value_53;\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_54 = ((n_6 + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_54;\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_6;\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_56 = fromInteger(n_6, false, 2);\n            return value_56;\n        }\n        else if (equals(typ_3, uint8_type)) {\n            const value_57 = n_6 & 0xFF;\n            return value_57;\n        }\n        else if (equals(typ_3, int8_type)) {\n            const value_58 = ((n_6 + 0x80 & 0xFF) - 0x80) | 0;\n            return value_58;\n        }\n        else if (isEnum(typ_3)) {\n            return n_6;\n        }\n        else {\n            const arg20_3 = name(typ_3);\n            const clo1_3 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_3 = clo1_3(n_6);\n            return clo2_3(arg20_3);\n        }\n    }\n    else if (matchValue === 211) {\n        const n_3 = Reader__ReadInt64(x);\n        const typ_2 = t;\n        const n_4 = n_3;\n        if (equals(typ_2, int32_type)) {\n            const value_32 = (~(~toInt(n_4))) | 0;\n            return value_32;\n        }\n        else if (equals(typ_2, class_type(\"System.Int64\"))) {\n            const value_33 = fromValue(n_4, false);\n            return value_33;\n        }\n        else if (equals(typ_2, int16_type)) {\n            const value_34 = ((toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_34;\n        }\n        else if (equals(typ_2, class_type(\"System.DateTime\"))) {\n            const value_35 = fromTicks_1(fromValue(n_4, false));\n            return value_35;\n        }\n        else if (equals(typ_2, uint32_type)) {\n            const value_36 = toInt(n_4) >>> 0;\n            return value_36;\n        }\n        else if (equals(typ_2, class_type(\"System.UInt64\"))) {\n            const value_37 = fromValue(n_4, true);\n            return value_37;\n        }\n        else if (equals(typ_2, uint16_type)) {\n            const value_38 = toInt(n_4) & 0xFFFF;\n            return value_38;\n        }\n        else if (equals(typ_2, class_type(\"System.TimeSpan\"))) {\n            const value_39 = fromTicks_2(fromValue(n_4, false));\n            return value_39;\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int16`1\") {\n            const value_40 = ((toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000) | 0;\n            return value_40;\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int32`1\") {\n            const value_41 = (~(~toInt(n_4))) | 0;\n            return value_41;\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int64`1\") {\n            const value_42 = fromValue(n_4, false);\n            return value_42;\n        }\n        else if (equals(typ_2, uint8_type)) {\n            const value_43 = toInt(n_4) & 0xFF;\n            return value_43;\n        }\n        else if (equals(typ_2, int8_type)) {\n            const value_44 = ((toInt(n_4) + 0x80 & 0xFF) - 0x80) | 0;\n            return value_44;\n        }\n        else if (isEnum(typ_2)) {\n            const value_45 = toNumber(n_4);\n            return value_45;\n        }\n        else {\n            const arg20_2 = name(typ_2);\n            const clo1_2 = toFail(printf(\"Cannot interpret integer %A as %s.\"));\n            const clo2_2 = clo1_2(n_4);\n            return clo2_2(arg20_2);\n        }\n    }\n    else if (b_6 = matchValue, (b_6 | 15) === 159) {\n        const b_7 = matchValue;\n        return Reader__ReadArray_412036CA(x, (value_156 = (b_7 & 15), (~(~value_156))), t);\n    }\n    else if (matchValue === 220) {\n        let len;\n        const value_157 = Reader__ReadUInt16(x);\n        len = (~(~value_157));\n        return Reader__ReadArray_412036CA(x, len, t);\n    }\n    else if (matchValue === 221) {\n        let len_1;\n        const value_158 = Reader__ReadUInt32(x);\n        len_1 = (~(~value_158));\n        return Reader__ReadArray_412036CA(x, len_1, t);\n    }\n    else if (b_8 = matchValue, (b_8 | 15) === 143) {\n        const b_9 = matchValue;\n        return Reader__ReadMap_412036CA(x, (value_159 = (b_9 & 15), (~(~value_159))), t);\n    }\n    else {\n        switch (matchValue) {\n            case 196: {\n                let len_4;\n                const value_162 = Reader__ReadByte(x);\n                len_4 = (~(~value_162));\n                return Reader__ReadBin_412036CA(x, len_4, t);\n            }\n            case 197: {\n                let len_5;\n                const value_163 = Reader__ReadUInt16(x);\n                len_5 = (~(~value_163));\n                return Reader__ReadBin_412036CA(x, len_5, t);\n            }\n            case 198: {\n                let len_6;\n                const value_164 = Reader__ReadUInt32(x);\n                len_6 = (~(~value_164));\n                return Reader__ReadBin_412036CA(x, len_6, t);\n            }\n            case 222: {\n                let len_2;\n                const value_160 = Reader__ReadUInt16(x);\n                len_2 = (~(~value_160));\n                return Reader__ReadMap_412036CA(x, len_2, t);\n            }\n            case 223: {\n                let len_3;\n                const value_161 = Reader__ReadUInt32(x);\n                len_3 = (~(~value_161));\n                return Reader__ReadMap_412036CA(x, len_3, t);\n            }\n            default: {\n                const b_10 = matchValue;\n                const arg10_12 = x.pos | 0;\n                const arg30 = name(t);\n                const clo1_12 = toFail(printf(\"Position %d, byte %d, expected type %s.\"));\n                const clo2_12 = clo1_12(arg10_12);\n                const clo3 = clo2_12(b_10);\n                return clo3(arg30);\n            }\n        }\n    }\n}\n\nfunction Reader__readInt(this$, len, m) {\n    if (isLittleEndian()) {\n        const arr = new Uint8Array(len);\n        for (let i = 0; i <= (len - 1); i++) {\n            arr[i] = this$.data[((this$.pos + len) - 1) - i];\n        }\n        this$.pos = (this$.pos + len);\n        return m([arr, 0]);\n    }\n    else {\n        this$.pos = (this$.pos + len);\n        return m([this$.data, this$.pos - len]);\n    }\n}\n\n","import { fromContinuations } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { toFail, printf, toText, trimEnd } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { isGenericType, getFunctionElements, isFunction, getGenerics } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { head, take, equalsWith, last } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { compareSafe } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { singleton } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/AsyncBuilder.js\";\nimport { ofSeq } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { empty, singleton as singleton_1, append, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { ProxyRequestException_$ctor_76BC5104, HttpResponse, RequestBody } from \"./Types.fs.js\";\nimport { TypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.fs.js\";\nimport { Convert_fromJsonAs, Convert_arrayLike, Convert_serialize } from \"../Fable.SimpleJson.3.17.0/Json.Converter.fs.js\";\nimport { send, get$, sendAndReadBinary, withHeaders, withBody, post } from \"./Http.fs.js\";\nimport { SimpleJson_parseNative } from \"../Fable.SimpleJson.3.17.0/SimpleJson.fs.js\";\nimport { Reader_$ctor_6C95DA22, Reader__Read_24524716 } from \"../Fable.Remoting.MsgPack.1.6.2/Read.fs.js\";\n\nexport function Blob_readBlobAsText(blob) {\n    return fromContinuations((tupledArg) => {\n        const resolve = tupledArg[0];\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                resolve(reader.result);\n            }\n        });\n        reader.readAsText(blob);\n    });\n}\n\nexport function Proxy_combineRouteWithBaseUrl(route, baseUrl) {\n    if (baseUrl != null) {\n        const url = baseUrl;\n        const arg10 = trimEnd(url, \"/\");\n        const clo1 = toText(printf(\"%s%s\"));\n        const clo2 = clo1(arg10);\n        return clo2(route);\n    }\n    else {\n        return route;\n    }\n}\n\nexport function Proxy_extractAsyncArg(asyncType) {\n    return getGenerics(asyncType)[0];\n}\n\nexport function Proxy_isByteArray(_arg1) {\n    if (_arg1.tag === 25) {\n        const getElemType = _arg1.fields[0];\n        const matchValue = getElemType();\n        if (matchValue.tag === 12) {\n            return true;\n        }\n        else {\n            const otherwise = matchValue;\n            return false;\n        }\n    }\n    else {\n        const otherwise_1 = _arg1;\n        return false;\n    }\n}\n\nexport function Proxy_isAsyncOfByteArray(_arg1) {\n    if (_arg1.tag === 20) {\n        const getAsyncType = _arg1.fields[0];\n        const matchValue = getAsyncType();\n        if (matchValue.tag === 25) {\n            const getElemType = matchValue.fields[0];\n            const matchValue_1 = getElemType();\n            if (matchValue_1.tag === 12) {\n                return true;\n            }\n            else {\n                const otherwise = matchValue_1;\n                return false;\n            }\n        }\n        else {\n            const otherwise_1 = matchValue;\n            return false;\n        }\n    }\n    else {\n        const otherwise_2 = _arg1;\n        return false;\n    }\n}\n\nexport function Proxy_proxyFetch(options, typeName, func, fieldType) {\n    let otherwise_2;\n    let funcArgs;\n    const matchValue = func.FieldType;\n    switch (matchValue.tag) {\n        case 20: {\n            const inner = matchValue.fields[0];\n            funcArgs = [func.FieldType];\n            break;\n        }\n        case 21: {\n            const inner_1 = matchValue.fields[0];\n            funcArgs = [func.FieldType];\n            break;\n        }\n        case 32: {\n            const getArgs = matchValue.fields[0];\n            funcArgs = getArgs();\n            break;\n        }\n        default: {\n            const clo1 = toFail(printf(\"Field %s does not have a valid definiton\"));\n            funcArgs = clo1(func.FieldName);\n        }\n    }\n    const argumentCount = (funcArgs.length - 1) | 0;\n    const returnTypeAsync = last(funcArgs);\n    let returnType;\n    switch (returnTypeAsync.tag) {\n        case 20: {\n            const getAsyncTypeArgument = returnTypeAsync.fields[0];\n            returnType = getAsyncTypeArgument();\n            break;\n        }\n        case 21: {\n            const getPromiseTypeArgument = returnTypeAsync.fields[0];\n            returnType = getPromiseTypeArgument();\n            break;\n        }\n        default: {\n            const clo1_1 = toFail(printf(\"Expected field %s to have a return type of Async\\u003c\\u0027t\\u003e\"));\n            returnType = clo1_1(func.FieldName);\n        }\n    }\n    const readAsBinary = Proxy_isAsyncOfByteArray(returnTypeAsync);\n    let binaryInput;\n    const matchValue_1 = func.FieldType;\n    if (matchValue_1.tag === 32) {\n        const getArgs_1 = matchValue_1.fields[0];\n        const matchValue_2 = getArgs_1();\n        if ((!equalsWith(compareSafe, matchValue_2, null)) ? (matchValue_2.length === 2) : false) {\n            const output = matchValue_2[1];\n            const input = matchValue_2[0];\n            binaryInput = Proxy_isByteArray(input);\n        }\n        else {\n            const otherwise = matchValue_2;\n            binaryInput = false;\n        }\n    }\n    else {\n        const otherwise_1 = matchValue_1;\n        binaryInput = false;\n    }\n    const route = options.RouteBuilder(typeName, func.FieldName);\n    const url = Proxy_combineRouteWithBaseUrl(route, options.BaseUrl);\n    const funcNeedParameters = ((!equalsWith(compareSafe, funcArgs, null)) ? (funcArgs.length === 1) : false) ? ((funcArgs[0].tag === 20) ? false : ((funcArgs[0].tag === 21) ? false : (otherwise_2 = funcArgs, true))) : (((!equalsWith(compareSafe, funcArgs, null)) ? (funcArgs.length === 2) : false) ? ((funcArgs[0].tag === 0) ? ((funcArgs[1].tag === 20) ? false : (otherwise_2 = funcArgs, true)) : (otherwise_2 = funcArgs, true)) : (otherwise_2 = funcArgs, true));\n    return (arg0) => ((arg1) => ((arg2) => ((arg3) => ((arg4) => ((arg5) => ((arg6) => ((arg7) => {\n        const inputArguments = funcNeedParameters ? take(argumentCount, [arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7]) : [];\n        const inputArgumentTypes = take(argumentCount, funcArgs);\n        const contentType = binaryInput ? \"application/octet-stream\" : \"application/json; charset=utf8\";\n        const builder$0040 = singleton;\n        return builder$0040.Delay(() => {\n            let req_7, req_6, req_5, req_9, req_8, req_12, req_11, req_10, req_14, req_13, req_2, req_1, req, req_4, req_3;\n            const headers = ofSeq(delay(() => append(singleton_1([\"Content-Type\", contentType]), delay(() => append(singleton_1([\"x-remoting-proxy\", \"true\"]), delay(() => append(options.CustomHeaders, delay(() => {\n                const matchValue_3 = options.Authorization;\n                if (matchValue_3 == null) {\n                    return empty();\n                }\n                else {\n                    const authToken = matchValue_3;\n                    return singleton_1([\"Authorization\", authToken]);\n                }\n            }))))))));\n            let requestBody;\n            if (binaryInput) {\n                requestBody = (new RequestBody(2, arg0));\n            }\n            else {\n                const matchValue_4 = inputArgumentTypes.length | 0;\n                let pattern_matching_result;\n                if (matchValue_4 === 1) {\n                    if (!Convert_arrayLike(inputArgumentTypes[0])) {\n                        pattern_matching_result = 0;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        const typeInfo = new TypeInfo(27, () => inputArgumentTypes);\n                        const requestBodyJson = Convert_serialize(inputArguments[0], typeInfo);\n                        requestBody = (new RequestBody(1, requestBodyJson));\n                        break;\n                    }\n                    case 1: {\n                        if (matchValue_4 === 1) {\n                            const requestBodyJson_1 = Convert_serialize([inputArguments[0]], new TypeInfo(25, () => inputArgumentTypes[0]));\n                            requestBody = (new RequestBody(1, requestBodyJson_1));\n                        }\n                        else {\n                            const n = matchValue_4 | 0;\n                            const typeInfo_1 = new TypeInfo(27, () => inputArgumentTypes);\n                            const requestBodyJson_2 = Convert_serialize(inputArguments, typeInfo_1);\n                            requestBody = (new RequestBody(1, requestBodyJson_2));\n                        }\n                        break;\n                    }\n                }\n            }\n            return (options.ResponseSerialization.tag === 0) ? (readAsBinary ? builder$0040.Bind(funcNeedParameters ? (req_7 = (req_6 = (req_5 = post(url), (withBody(requestBody, req_5))), (withHeaders(headers, req_6))), (sendAndReadBinary(req_7))) : (req_9 = (req_8 = get$(url), (withHeaders(headers, req_8))), (sendAndReadBinary(req_9))), (_arg4) => {\n                const statusCode_1 = _arg4[1] | 0;\n                const response_3 = _arg4[0];\n                switch (statusCode_1) {\n                    case 200: {\n                        return builder$0040.Return(response_3);\n                    }\n                    case 500: {\n                        const responseAsBlob_2 = new Blob([response_3.buffer], { type: 'text/plain' });\n                        return builder$0040.Bind(Blob_readBlobAsText(responseAsBlob_2), (_arg5) => {\n                            const responseText_2 = _arg5;\n                            const response_4 = new HttpResponse(statusCode_1, responseText_2);\n                            return builder$0040.ReturnFrom((() => {\n                                let clo1_4;\n                                throw ProxyRequestException_$ctor_76BC5104(response_4, (clo1_4 = toText(printf(\"Internal server error (500) while making request to %s\")), clo1_4(url)), response_4.ResponseBody);\n                            })());\n                        });\n                    }\n                    default: {\n                        const n_2 = statusCode_1 | 0;\n                        const responseAsBlob_3 = new Blob([response_3.buffer], { type: 'text/plain' });\n                        return builder$0040.Bind(Blob_readBlobAsText(responseAsBlob_3), (_arg6) => {\n                            const responseText_3 = _arg6;\n                            const response_5 = new HttpResponse(statusCode_1, responseText_3);\n                            return builder$0040.ReturnFrom((() => {\n                                let clo1_5, clo2_1;\n                                throw ProxyRequestException_$ctor_76BC5104(response_5, (clo1_5 = toText(printf(\"Http error (%d) while making request to %s\")), clo2_1 = clo1_5(n_2), clo2_1(url)), response_5.ResponseBody);\n                            })());\n                        });\n                    }\n                }\n            }) : builder$0040.Bind(funcNeedParameters ? (req_12 = (req_11 = (req_10 = post(url), (withBody(requestBody, req_10))), (withHeaders(headers, req_11))), (send(req_12))) : (req_14 = (req_13 = get$(url), (withHeaders(headers, req_13))), (send(req_14))), (_arg7) => {\n                const response_6 = _arg7;\n                const matchValue_6 = response_6.StatusCode | 0;\n                switch (matchValue_6) {\n                    case 200: {\n                        const parsedJson = SimpleJson_parseNative(response_6.ResponseBody);\n                        return builder$0040.Return(Convert_fromJsonAs(parsedJson, returnType));\n                    }\n                    case 500: {\n                        return builder$0040.ReturnFrom((() => {\n                            let clo1_6;\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, (clo1_6 = toText(printf(\"Internal server error (500) while making request to %s\")), clo1_6(url)), response_6.ResponseBody);\n                        })());\n                    }\n                    default: {\n                        const n_3 = matchValue_6 | 0;\n                        return builder$0040.ReturnFrom((() => {\n                            let clo1_7, clo2_2;\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, (clo1_7 = toText(printf(\"Http error (%d) from server occured while making request to %s\")), clo2_2 = clo1_7(n_3), clo2_2(url)), response_6.ResponseBody);\n                        })());\n                    }\n                }\n            })) : builder$0040.Bind(funcNeedParameters ? (req_2 = (req_1 = (req = post(url), (withBody(requestBody, req))), (withHeaders(headers, req_1))), (sendAndReadBinary(req_2))) : (req_4 = (req_3 = get$(url), (withHeaders(headers, req_3))), (sendAndReadBinary(req_4))), (_arg1_1) => {\n                const statusCode = _arg1_1[1] | 0;\n                const response = _arg1_1[0];\n                switch (statusCode) {\n                    case 200: {\n                        const getReturnType = (typ_mut) => {\n                            getReturnType:\n                            while (true) {\n                                const typ = typ_mut;\n                                if (isFunction(typ)) {\n                                    const patternInput = getFunctionElements(typ);\n                                    const res = patternInput[1];\n                                    typ_mut = res;\n                                    continue getReturnType;\n                                }\n                                else if (isGenericType(typ)) {\n                                    const array = getGenerics(typ);\n                                    return head(array);\n                                }\n                                else {\n                                    return typ;\n                                }\n                                break;\n                            }\n                        };\n                        return builder$0040.Return(Reader__Read_24524716(Reader_$ctor_6C95DA22(response), getReturnType(fieldType)));\n                    }\n                    case 500: {\n                        const responseAsBlob = new Blob([response.buffer], { type: 'text/plain' });\n                        return builder$0040.Bind(Blob_readBlobAsText(responseAsBlob), (_arg2_1) => {\n                            const responseText = _arg2_1;\n                            const response_1 = new HttpResponse(statusCode, responseText);\n                            return builder$0040.ReturnFrom((() => {\n                                let clo1_2;\n                                throw ProxyRequestException_$ctor_76BC5104(response_1, (clo1_2 = toText(printf(\"Internal server error (500) while making request to %s\")), clo1_2(url)), response_1.ResponseBody);\n                            })());\n                        });\n                    }\n                    default: {\n                        const n_1 = statusCode | 0;\n                        const responseAsBlob_1 = new Blob([response.buffer], { type: 'text/plain' });\n                        return builder$0040.Bind(Blob_readBlobAsText(responseAsBlob_1), (_arg3_1) => {\n                            const responseText_1 = _arg3_1;\n                            const response_2 = new HttpResponse(statusCode, responseText_1);\n                            return builder$0040.ReturnFrom((() => {\n                                let clo1_3, clo2;\n                                throw ProxyRequestException_$ctor_76BC5104(response_2, (clo1_3 = toText(printf(\"Http error (%d) while making request to %s\")), clo2 = clo1_3(n_1), clo2(url)), response_2.ResponseBody);\n                            })());\n                        });\n                    }\n                }\n            });\n        });\n    })))))));\n}\n\n","import { Remoting_buildProxy_Z15584635, RemotingModule_withBaseUrl, RemotingModule_withRouteBuilder, RemotingModule_createApi } from \"./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js\";\nimport { UsersService$reflection, Route_builder } from \"./Shared/Users.js\";\n\nexport const usersService = (() => {\n    let arg00;\n    let options_1;\n    const options = RemotingModule_createApi();\n    options_1 = RemotingModule_withRouteBuilder(Route_builder, options);\n    arg00 = RemotingModule_withBaseUrl(config.baseUrl, options_1);\n    return Remoting_buildProxy_Z15584635(arg00, {\n        ResolveType: UsersService$reflection,\n    });\n})();\n\n","import { empty } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { toFail, printf, toText } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { RemoteBuilderOptions, SerializationType } from \"./Types.fs.js\";\nimport { fullName, makeRecord, name as name_1, getRecordElements, class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { createTypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js\";\nimport { pick, map } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { singleton, collect, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { Proxy_proxyFetch } from \"./Proxy.fs.js\";\n\nexport function RemotingModule_createApi() {\n    let clo1;\n    return new RemoteBuilderOptions(empty(), void 0, void 0, false, uncurry(2, (clo1 = toText(printf(\"/%s/%s\")), (arg10) => {\n        const clo2 = clo1(arg10);\n        return clo2;\n    })), new SerializationType(0));\n}\n\nexport function RemotingModule_withRouteBuilder(builder, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, builder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withBaseUrl(url, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, url, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withCustomHeader(headers, options) {\n    return new RemoteBuilderOptions(headers, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withAuthorizationHeader(token, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, token, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withCredentials(withCredentials, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, withCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withBinarySerialization(options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, new SerializationType(1));\n}\n\nexport class Remoting {\n    constructor() {\n    }\n}\n\nexport function Remoting$reflection() {\n    return class_type(\"Fable.Remoting.Client.Remoting\", void 0, Remoting);\n}\n\nexport function Remoting_$ctor() {\n    return new Remoting();\n}\n\nexport function Remoting_buildProxy_Z15584635(options, resolver) {\n    const resolvedType = resolver.ResolveType();\n    const schemaType = createTypeInfo(resolvedType);\n    if (schemaType.tag === 34) {\n        const getFields = schemaType.fields[0];\n        const patternInput = getFields();\n        const recordType = patternInput[1];\n        const fields = patternInput[0];\n        let fieldTypes;\n        const array = getRecordElements(recordType);\n        fieldTypes = map((prop) => [name_1(prop), prop[1]], array);\n        const recordFields = Array.from(delay(() => collect((field) => {\n            const normalize = (n) => {\n                let fieldType;\n                fieldType = pick((tupledArg) => {\n                    const name = tupledArg[0];\n                    const typ = tupledArg[1];\n                    if (name === field.FieldName) {\n                        return typ;\n                    }\n                    else {\n                        return void 0;\n                    }\n                }, fieldTypes);\n                const fn = Proxy_proxyFetch(options, name_1(recordType), field, fieldType);\n                switch (n) {\n                    case 0: {\n                        return fn(null)(null)(null)(null)(null)(null)(null)(null);\n                    }\n                    case 1: {\n                        return (a) => fn(a)(null)(null)(null)(null)(null)(null)(null);\n                    }\n                    case 2: {\n                        const proxyF = (a_1, b) => fn(a_1)(b)(null)(null)(null)(null)(null)(null);\n                        return proxyF;\n                    }\n                    case 3: {\n                        const proxyF_1 = (a_2, b_1, c) => fn(a_2)(b_1)(c)(null)(null)(null)(null)(null);\n                        return proxyF_1;\n                    }\n                    case 4: {\n                        const proxyF_2 = (a_3, b_2, c_1, d) => fn(a_3)(b_2)(c_1)(d)(null)(null)(null)(null);\n                        return proxyF_2;\n                    }\n                    case 5: {\n                        const proxyF_3 = (a_4, b_3, c_2, d_1, e) => fn(a_4)(b_3)(c_2)(d_1)(e)(null)(null)(null);\n                        return proxyF_3;\n                    }\n                    case 6: {\n                        const proxyF_4 = (a_5, b_4, c_3, d_2, e_1, f) => fn(a_5)(b_4)(c_3)(d_2)(e_1)(f)(null)(null);\n                        return proxyF_4;\n                    }\n                    case 7: {\n                        const proxyF_5 = (a_6, b_5, c_4, d_3, e_2, f_1, g) => fn(a_6)(b_5)(c_4)(d_3)(e_2)(f_1)(g)(null);\n                        return proxyF_5;\n                    }\n                    case 8: {\n                        const proxyF_6 = (a_7, b_6, c_5, d_4, e_3, f_2, g_1, h) => fn(a_7)(b_6)(c_5)(d_4)(e_3)(f_2)(g_1)(h);\n                        return proxyF_6;\n                    }\n                    default: {\n                        const clo1 = toFail(printf(\"Cannot generate proxy function for %s. Only up to 8 arguments are supported. Consider using a record type as input\"));\n                        return clo1(field.FieldName);\n                    }\n                }\n            };\n            let argumentCount;\n            const matchValue = field.FieldType;\n            switch (matchValue.tag) {\n                case 20: {\n                    argumentCount = 0;\n                    break;\n                }\n                case 21: {\n                    argumentCount = 0;\n                    break;\n                }\n                case 32: {\n                    const getArgs = matchValue.fields[0];\n                    argumentCount = (getArgs().length - 1);\n                    break;\n                }\n                default: {\n                    argumentCount = 0;\n                }\n            }\n            return singleton(normalize(argumentCount));\n        }, fields)));\n        const proxy = makeRecord(recordType, recordFields);\n        return proxy;\n    }\n    else {\n        const arg10_1 = fullName(resolvedType);\n        const clo1_1 = toFail(printf(\"Cannot build proxy. Exepected type %s to be a valid protocol definition which is a record of functions\"));\n        return clo1_1(arg10_1);\n    }\n}\n\n","import { Msg, Model, LoginForm } from \"./Domain.js\";\nimport { cons, empty } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { Cmd_ofSub, Cmd_none } from \"../../.fable-build/.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { singleton } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/AsyncBuilder.js\";\nimport { usersService } from \"../../Server.js\";\nimport { Response_LoggedInUser$reflection, Request_Login } from \"../../Shared/Users.js\";\nimport { startImmediate } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { Record } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { record_type, lambda_type, unit_type, option_type } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { ApplicationErrorModule_explain } from \"../../Shared/Errors.js\";\n\nexport function stateInit() {\n    return new Model(new LoginForm(\"\", \"\"), empty(), false);\n}\n\nexport function init() {\n    return [stateInit(), Cmd_none()];\n}\n\nfunction handleLogin(state) {\n    const fn = (dispatch) => {\n        let arg00;\n        const builder$0040 = singleton;\n        arg00 = builder$0040.Delay(() => builder$0040.Bind(usersService.Login(new Request_Login(state.Username, state.Password)), (_arg1) => {\n            const res = _arg1;\n            dispatch(new Msg(3, res));\n            return builder$0040.Zero();\n        }));\n        startImmediate(arg00);\n    };\n    return Cmd_ofSub(fn);\n}\n\nexport class LoginPageProps extends Record {\n    constructor(handleNewToken) {\n        super();\n        this.handleNewToken = handleNewToken;\n    }\n}\n\nexport function LoginPageProps$reflection() {\n    return record_type(\"Cookbook.Client.Pages.Login.State.LoginPageProps\", [], LoginPageProps, () => [[\"handleNewToken\", lambda_type(option_type(Response_LoggedInUser$reflection()), unit_type)]]);\n}\n\nexport function update(props, msg, state) {\n    let Errors_1;\n    switch (msg.tag) {\n        case 1: {\n            const password = msg.fields[0];\n            return [new Model(new LoginForm(state.Form.Username, password), state.Errors, state.IsLoading), Cmd_none()];\n        }\n        case 2: {\n            const state$0027 = new Model(state.Form, empty(), true);\n            return [state$0027, handleLogin(state.Form)];\n        }\n        case 3: {\n            const res = msg.fields[0];\n            const state$0027_1 = new Model(state.Form, state.Errors, false);\n            if (res.tag === 1) {\n                const err = res.fields[0];\n                return [(Errors_1 = cons((ApplicationErrorModule_explain(err)), state$0027_1.Errors), new Model(state$0027_1.Form, Errors_1, state$0027_1.IsLoading)), Cmd_none()];\n            }\n            else {\n                const t = res.fields[0];\n                return [stateInit(), Cmd_ofSub((_arg1) => {\n                    props.handleNewToken((t));\n                })];\n            }\n        }\n        default: {\n            const username = msg.fields[0];\n            return [new Model(new LoginForm(username, state.Form.Password), state.Errors, state.IsLoading), Cmd_none()];\n        }\n    }\n}\n\n","import { createElement as createElement_1 } from \"react\";\nimport react from \"react\";\n\nexport const reactApi = react;\n\nexport const reactElement = createElement_1;\n\nexport function mkAttr(key, value) {\n    return [key, value];\n}\n\nexport function mkStyle(key, value) {\n    return [key, value];\n}\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"../../../.fable/Feliz.1.17.0/ReactInterop.js\";\nimport { class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { iterate } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { defaultArg, toArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n(() => {\n})();\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => {\n        let props_2;\n        props_2 = Internal_propsWithKey(withKey, props);\n        return reactApi.createElement(renderElement, props_2);\n    };\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => {\n        let props_2;\n        props_2 = Internal_propsWithKey(withKey, props);\n        return reactApi.createElement(memoElementType, props_2);\n    };\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    const arg00 = update;\n    return reactApi.useReducer(arg00, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    const arg10 = defaultArg(dependencies, []);\n    return reactApi.useCallback(callbackFunction, arg10);\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    const arg10 = defaultArg(dependencies, []);\n    return reactApi.useMemo(createFunction, arg10);\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => {\n        const arg00 = render(arg);\n        return react.createElement(react.Fragment, {}, ...arg00);\n    }, void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => {\n        const arg00 = render(arg);\n        return react.createElement(react.Fragment, {}, ...arg00);\n    }, name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => {\n        const arg00 = render(arg);\n        return react.createElement(react.Fragment, {}, ...arg00);\n    }, void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => {\n        const arg00 = render(arg);\n        return react.createElement(react.Fragment, {}, ...arg00);\n    }, name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return reactApi.createElement(contextObject.Consumer, null, (arg) => {\n        const arg00 = render(arg);\n        return react.createElement(react.Fragment, {}, ...arg00);\n    });\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        let o;\n        const props_1 = tupledArg[0];\n        const ref_1 = tupledArg[1];\n        return reactApi.createElement(forwardRefType, (o = {\n            props: props_1,\n            ref: ref_1,\n        }, (Object.assign({}, o))));\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        let o;\n        const props_1 = tupledArg[0];\n        const ref_1 = tupledArg[1];\n        return reactApi.createElement(forwardRefType, (o = {\n            props: props_1,\n            ref: ref_1,\n        }, (Object.assign({}, o))));\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return reactApi.createElement(reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return reactApi.createElement(reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return reactApi.createElement(reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return reactApi.createElement(reactApi.Suspense, (o = {\n        fallback: null,\n    }, (Object.assign({}, o))), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return reactApi.createElement(reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, (Object.assign({}, o))), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return reactApi.useState(initial);\n}\n\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Choice.js\";\nimport { class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { getEnumerator } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { equals } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => {\n        let arg0;\n        arg0 = (new FSharpResult$2(0, arg));\n        return arg0;\n    }),((arg_1) => {\n        let arg0_2;\n        arg0_2 = (new FSharpResult$2(1, arg_1));\n        return arg0_2;\n    }));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            const e = a_1.fields[0];\n            return Promise.resolve((new FSharpResult$2(1, e)));\n        }\n        else {\n            const a_2 = a_1.fields[0];\n            return result(fn(a_2));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const x_1 = p.then((() => body(a)));\n            p = x_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    const x_6 = {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    const x_1 = Promise.reject(er);\n                    return x_1;\n                }\n                else {\n                    try {\n                        const x_2 = Promise.resolve(f2(er));\n                        return x_2;\n                    }\n                    catch (er_1) {\n                        const x_3 = Promise.reject(er_1);\n                        return x_3;\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    const x_4 = Promise.resolve(f(er_2));\n                    return x_4;\n                }\n                catch (er_3) {\n                    const x_5 = Promise.reject(er_3);\n                    return x_5;\n                }\n            }\n        },\n    };\n    return x_6;\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            let p_1;\n            const x_1 = Promise.resolve(p);\n            p_1 = x_1;\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { PromiseBuilder_$ctor } from \"./Promise.fs.js\";\n\nexport const promise = PromiseBuilder_$ctor();\n\n","import { Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { fill } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { isDisposable, comparePrimitives, max } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { toArray, value as value_1, some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { iterate as iterate_1, rangeNumber, singleton, collect, take, skip, append, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { useReact_useMemo_CF4EA67, useReact_useEffect_3A5B6456, useReact_useEffect_Z101E1A95, useReact_useEffect_Z5234A374, useReact_useCallbackRef_7C4B0DD6, React_createDisposable_3A5B6456, useReact_useEffectOnce_Z5ECA432F, useFeliz_React__React_useState_Static_1505, useReact_useRef_1505 } from \"../Feliz.1.17.0/React.fs.js\";\nimport { isCancellationRequested, cancel, createCancellationToken } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Async.js\";\nimport { promise } from \"../Fable.Promise.2.1.0/PromiseImpl.fs.js\";\nimport { PromiseBuilder__While_2044D34, PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../Fable.Promise.2.1.0/Promise.fs.js\";\nimport { iterate } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Feliz.UseElmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max(comparePrimitives, size, 10)), 0, max(comparePrimitives, size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Feliz.UseElmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(_) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        const matchValue_1 = rix$0027 === wix;\n        if (matchValue_1) {\n            _.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            _.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(_, item) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        const matchValue_1 = wix$0027 === rix;\n        if (matchValue_1) {\n            _.state = (new RingState$1(1, (RingBuffer$1__doubleSize(_, rix, items_1)), items_1.length, 0));\n        }\n        else {\n            _.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        _.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    const source_2 = delay(() => append((skip(ix, items)), delay(() => append((take(ix, items)), delay(() => collect((matchValue) => singleton(null), rangeNumber(0, 1, items.length)))))));\n    return Array.from(source_2);\n}\n\nexport function useFeliz_React__React_useElmish_Static_17DC4F1D(init, update, dependencies) {\n    const state = useReact_useRef_1505(init[0]);\n    const ring = useReact_useRef_1505(RingBuffer$1_$ctor_Z524259A4(10));\n    const patternInput = useFeliz_React__React_useState_Static_1505(init[0]);\n    const setChildState = patternInput[1];\n    const childState = patternInput[0];\n    let token_1;\n    const cts = useReact_useRef_1505(createCancellationToken());\n    const token = useReact_useRef_1505(cts.current);\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cts.current);\n    }));\n    token_1 = token;\n    const setChildState_1 = () => {\n        const value = setTimeout(() => {\n            let copyOfStruct;\n            if (!(copyOfStruct = token_1.current, isCancellationRequested(copyOfStruct))) {\n                setChildState(state.current);\n            }\n        }, 0) | 0;\n        void value;\n    };\n    const dispatch = (msg) => {\n        let pr;\n        const builder$0040 = promise;\n        pr = PromiseBuilder__Run_212F1D4B(builder$0040, PromiseBuilder__Delay_62FBFDE1(builder$0040, () => {\n            let nextMsg = some(msg);\n            return PromiseBuilder__While_2044D34(builder$0040, () => {\n                let copyOfStruct_1;\n                return (nextMsg != null) ? (!(copyOfStruct_1 = token_1.current, isCancellationRequested(copyOfStruct_1))) : false;\n            }, PromiseBuilder__Delay_62FBFDE1(builder$0040, () => {\n                const msg_1 = value_1(nextMsg);\n                const patternInput_1 = update(msg_1, state.current);\n                const state$0027 = patternInput_1[0];\n                const cmd$0027 = patternInput_1[1];\n                iterate((sub) => {\n                    sub(dispatch);\n                }, cmd$0027);\n                nextMsg = RingBuffer$1__Pop(ring.current);\n                state.current = state$0027;\n                setChildState_1();\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    };\n    const dispatch_1 = useReact_useCallbackRef_7C4B0DD6(dispatch);\n    useReact_useEffect_Z5234A374(() => React_createDisposable_3A5B6456(() => {\n        let disposable;\n        let option;\n        const record = state.current;\n        const matchValue = record;\n        option = (isDisposable(matchValue) ? (disposable = matchValue, disposable) : (void 0));\n        iterate_1((o) => {\n            o.Dispose();\n        }, toArray(option));\n    }), dependencies);\n    useReact_useEffect_Z101E1A95(() => {\n        state.current = init[0];\n        setChildState_1();\n        iterate((sub_1) => {\n            sub_1(dispatch_1);\n        }, init[1]);\n    }, dependencies);\n    useReact_useEffect_3A5B6456(() => {\n        const option_1 = RingBuffer$1__Pop(ring.current);\n        iterate_1(dispatch_1, toArray(option_1));\n    });\n    return [childState, dispatch_1];\n}\n\nexport function useFeliz_React__React_useElmish_Static_645B1FB7(init, update, dependencies) {\n    const init_1 = useReact_useMemo_CF4EA67(init, dependencies);\n    return useFeliz_React__React_useElmish_Static_17DC4F1D(init_1, update, dependencies);\n}\n\n","import { empty, cons, fold, reverse } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { mkAttr } from \"../Feliz.1.17.0/Interop.fs.js\";\nimport { join } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    let list_1;\n    list_1 = reverse(xs);\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            let v, k;\n            const matchValue = x;\n            if (v = matchValue[1], (k = matchValue[0], k === \"className\")) {\n                const v_1 = matchValue[1];\n                const k_1 = matchValue[0];\n                return [cons(toString(v_1), classes), props];\n            }\n            else {\n                return [classes, cons(x, props)];\n            }\n        };\n    }), [empty(), empty()], list_1);\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    let tupledArg;\n    tupledArg = Helpers_extractClasses(xs);\n    const classes = tupledArg[0];\n    const props = tupledArg[1];\n    return cons((mkAttr(\"className\", join(\" \", cons(cn, classes)))), props);\n}\n\n","import styles$002Emodule from \"../../../src/Client/Pages/Login/styles.module.scss\";\nimport { useFeliz_React__React_useElmish_Static_645B1FB7 } from \"../../.fable-build/.fable/Feliz.UseElmish.1.5.0/UseElmish.fs.js\";\nimport { update, init } from \"./State.js\";\nimport { join, printf, toConsole } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { reactApi, reactElement, mkAttr } from \"../../.fable-build/.fable/Feliz.1.17.0/Interop.fs.js\";\nimport { ofSeq, cons, singleton, ofArray, map } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { createObj } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { Helpers_combineClasses } from \"../../.fable-build/.fable/Feliz.Bulma.2.4.0/ElementBuilders.fs.js\";\nimport { Msg } from \"./Domain.js\";\nimport { empty, singleton as singleton_1, append, delay } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\n\nconst stylesheet = (null, styles$002Emodule);\n\nexport function Render(props) {\n    let elems_7, props_6, names, elems_6, xs_3, elems_1, xs_16, elems_5, elms, xs_4, props_2, typ, xs_6, xs_7, elms_1, xs_8, props_3, typ_1, xs_10, xs_11, props_5, elems_4, props_4, typ_2, xs_13, xs_15, xs_18;\n    const patternInput = useFeliz_React__React_useElmish_Static_645B1FB7(init, (msg, state) => update(props, msg, state), []);\n    const state_1 = patternInput[0];\n    const dispatch = patternInput[1];\n    const arg10 = stylesheet[\"test\"];\n    const clo1 = toConsole(printf(\"class: %s\"));\n    clo1(arg10);\n    const props_7 = singleton((elems_7 = [(props_6 = ofArray([(names = [stylesheet[\"test\"]], mkAttr(\"className\", join(\" \", names))), (elems_6 = [(xs_3 = singleton((elems_1 = (map((err) => {\n        let elems, xs;\n        const props_1 = ofArray([mkAttr(\"className\", \"is-danger\"), (elems = [(xs = ofArray([mkAttr(\"className\", \"message-body\"), mkAttr(\"children\", err)]), reactElement(\"div\", createObj(xs)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]);\n        const xs_2 = Helpers_combineClasses(\"message\", props_1);\n        return reactElement(\"article\", createObj(xs_2));\n    }, state_1.Errors)), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_1))))), reactElement(\"div\", createObj(xs_3))), (xs_16 = ofArray([mkAttr(\"onSubmit\", (e) => {\n        e.preventDefault();\n        dispatch(new Msg(2));\n    }), (elems_5 = [(elms = ofArray([(xs_4 = ofArray([mkAttr(\"className\", \"label\"), mkAttr(\"children\", \"Username\")]), reactElement(\"label\", createObj(xs_4))), (props_2 = ofArray([mkAttr(\"onChange\", (ev) => {\n        const arg = ev.target.value;\n        dispatch((new Msg(0, arg)));\n    }), mkAttr(\"value\", state_1.Form.Username), mkAttr(\"autoFocus\", true), mkAttr(\"name\", \"username\"), mkAttr(\"required\", true)]), (typ = mkAttr(\"type\", \"text\"), (xs_6 = cons(typ, Helpers_combineClasses(\"input\", props_2)), reactElement(\"input\", createObj(xs_6)))))]), (xs_7 = ofArray([mkAttr(\"className\", \"field\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms)))]), reactElement(\"div\", createObj(xs_7)))), (elms_1 = ofArray([(xs_8 = ofArray([mkAttr(\"className\", \"label\"), mkAttr(\"children\", \"Password\")]), reactElement(\"label\", createObj(xs_8))), (props_3 = ofArray([mkAttr(\"onChange\", (ev_1) => {\n        const arg_1 = ev_1.target.value;\n        dispatch((new Msg(1, arg_1)));\n    }), mkAttr(\"name\", \"password\"), mkAttr(\"required\", true), mkAttr(\"value\", state_1.Form.Password)]), (typ_1 = mkAttr(\"type\", \"password\"), (xs_10 = cons(typ_1, Helpers_combineClasses(\"input\", props_3)), reactElement(\"input\", createObj(xs_10)))))]), (xs_11 = ofArray([mkAttr(\"className\", \"field\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms_1)))]), reactElement(\"div\", createObj(xs_11)))), (props_5 = singleton((elems_4 = [(props_4 = ofSeq(delay(() => append(state_1.IsLoading ? singleton_1(mkAttr(\"className\", \"is-loading\")) : empty(), delay(() => singleton_1(mkAttr(\"value\", \"Login\")))))), (typ_2 = mkAttr(\"type\", \"submit\"), (xs_13 = cons(typ_2, Helpers_combineClasses(\"button\", props_4)), reactElement(\"input\", createObj(xs_13)))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_4))))), (xs_15 = Helpers_combineClasses(\"field\", props_5), reactElement(\"div\", createObj(xs_15))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_5))))]), reactElement(\"form\", createObj(xs_16)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_6))))]), (xs_18 = Helpers_combineClasses(\"box\", props_6), reactElement(\"div\", createObj(xs_18))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_7)))));\n    const xs_20 = Helpers_combineClasses(\"container\", props_7);\n    return reactElement(\"div\", createObj(xs_20));\n}\n\n","import { initStyles } from \"./AppStyles.js\";\nimport { LoginPageProps } from \"./Pages/Login/State.js\";\nimport { render } from \"react-dom\";\nimport { createElement } from \"react\";\nimport { Render } from \"./Pages/Login/View.js\";\n\ninitStyles();\n\nexport const props = new LoginPageProps((value) => {\n    void value;\n});\n\nrender(createElement(Render, props), document.getElementById(\"elmish-app\"));\n\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\nexport { ObjectRef };\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else if (x instanceof Date) {\n                return x.getTime();\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function hashSafe(x) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.GetHashCode()) !== null && _a !== void 0 ? _a : 0;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalsSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.Equals(y)) !== null && _a !== void 0 ? _a : y == null;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compareSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.CompareTo(y)) !== null && _a !== void 0 ? _a : (y == null ? 0 : -1);\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { partialApply, equals } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        const elems = concat(this$.hashMap.values());\n        return getEnumerator(elems);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        let p;\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (p = matchValue, equals(p[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            const pair = matchValue;\n            if (equals(pair[1], item[1])) {\n                const value = Dictionary__Remove_2B595(this$, item[0]);\n                void value;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            const clo1 = partialApply(2, f, [p[1]]);\n            const clo2 = clo1(p[0]);\n            clo2(this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    const source = this$.hashMap.values();\n    return sumBy((pairs) => pairs.length, source, {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    }) | 0;\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        const pair = matchValue;\n        return pair[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { partialApply } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const item = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                const value = HashSet__Add_2B595(this$.contents, item);\n                void value;\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        const elems = concat(this$.hashMap.values());\n        return getEnumerator(elems);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, item);\n        void value;\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, k);\n        void value;\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            const clo1 = partialApply(2, f, [x]);\n            const clo2 = clo1(x);\n            clo2(this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    const source = this$.hashMap.values();\n    return sumBy((pairs) => pairs.length, source, {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    }) | 0;\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                void undefined;\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { string_type, record_type, int32_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { seq, noneOf, optWhitespace, whitespace, oneOf, string, takeWhile, test, fail, all, any, digit, lookahead, succeed, eof, letters, letter, lazy, index } from \"../../../.fable/Fable.Parsimmon.4.1.0/Parsimmon.js\";\nimport { join } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { reduce } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\n\nexport class TokenPosition extends Record {\n    constructor(offset, line, column) {\n        super();\n        this.offset = (offset | 0);\n        this.line = (line | 0);\n        this.column = (column | 0);\n    }\n}\n\nexport function TokenPosition$reflection() {\n    return record_type(\"Fable.Parsimmon.TokenPosition\", [], TokenPosition, () => [[\"offset\", int32_type], [\"line\", int32_type], [\"column\", int32_type]]);\n}\n\nexport class NodeResult$1 extends Record {\n    constructor(name, value, start, end) {\n        super();\n        this.name = name;\n        this.value = value;\n        this.start = start;\n        this.end = end;\n    }\n}\n\nexport function NodeResult$1$reflection(gen0) {\n    return record_type(\"Fable.Parsimmon.NodeResult`1\", [gen0], NodeResult$1, () => [[\"name\", string_type], [\"value\", gen0], [\"start\", TokenPosition$reflection()], [\"end\", TokenPosition$reflection()]]);\n}\n\nexport function Parsimmon_parseRaw(input, parser) {\n    return parser.parse(input);\n}\n\nexport function Parsimmon_parse(input, parser) {\n    const result = parser.parse(input);\n    const matchValue = result.status;\n    if (matchValue) {\n        return some(result.value);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport const Parsimmon_index = index;\n\nexport function Parsimmon_orTry(otherParser, parser) {\n    return parser.or(otherParser);\n}\n\nexport function Parsimmon_times(n, parser) {\n    return parser.times(n);\n}\n\nexport function Parsimmon_atLeast(n, parser) {\n    return parser.atLeast(n);\n}\n\nexport function Parsimmon_atMost(n, parser) {\n    return parser.atMost(n);\n}\n\nexport function Parsimmon_skip(skipped, keep) {\n    return keep.skip(skipped);\n}\n\nexport function Parsimmon_many(parser) {\n    return parser.many();\n}\n\nexport const Parsimmon_ofLazy = lazy;\n\nexport function Parsimmon_seperateByAtLeastOne(seperator, parser) {\n    return parser.sepBy1(seperator);\n}\n\nexport function Parsimmon_chain(after, before) {\n    return before.then(after);\n}\n\nexport function Parsimmon_bind(f, p) {\n    return p.chain(f);\n}\n\nexport const Parsimmon_letter = letter;\n\nexport function Parsimmon_timesBetween(min, max, parser) {\n    return parser.times(min, max);\n}\n\nexport const Parsimmon_letters = letters;\n\nexport const Parsimmon_endOfFile = eof;\n\nexport function Parsimmon_notFollowedBy(p, before) {\n    return before.notFollowedBy(p);\n}\n\nexport const Parsimmon_succeed = succeed;\n\nexport const Parsimmon_lookahead = lookahead;\n\nexport const Parsimmon_digit = digit;\n\nexport const Parsimmon_digits = (() => Parsimmon_many(Parsimmon_digit))();\n\nexport function Parsimmon_fallback(value, parser) {\n    return parser.fallback(value);\n}\n\nexport function Parsimmon_seperateBy(content, others) {\n    return others.sepBy(content);\n}\n\nexport function Parsimmon_between(left, right, middle) {\n    let keep;\n    keep = Parsimmon_chain(middle, left);\n    return Parsimmon_skip(right, keep);\n}\n\nexport function Parsimmon_map(f, parser) {\n    return parser.map(f);\n}\n\nexport function Parsimmon_tie(parser) {\n    return Parsimmon_map((strings) => join(\"\", strings), parser);\n}\n\nexport const Parsimmon_any = any;\n\nexport function Parsimmon_choose(ps) {\n    return reduce((acc, parser) => (acc.or(parser)), ps);\n}\n\nexport const Parsimmon_all = all;\n\nexport const Parsimmon_fail = fail;\n\nexport const Parsimmon_satisfy = test;\n\nexport const Parsimmon_takeWhile = takeWhile;\n\nexport const Parsimmon_str = string;\n\nexport const Parsimmon_oneOf = oneOf;\n\nexport const Parsimmon_whitespace = whitespace;\n\nexport const Parsimmon_optionalWhitespace = optWhitespace;\n\nexport function Parsimmon_atLeastOneOrMany(parser) {\n    return Parsimmon_atLeast(1, parser);\n}\n\nexport function Parsimmon_stringReturn(input, value) {\n    const parser = Parsimmon_str(input);\n    return Parsimmon_map((_arg1) => value, parser);\n}\n\nexport const Parsimmon_noneOf = noneOf;\n\nexport const Parsimmon_seq2 = seq;\n\nexport function Parsimmon_trim(trimmed, p) {\n    return p.trim(trimmed);\n}\n\nexport function Parsimmon_concat(parser) {\n    return parser.map((strings) => join(\"\", strings));\n}\n\nexport const Parsimmon_seq3 = seq;\n\nexport const Parsimmon_seq4 = seq;\n\nexport const Parsimmon_seq5 = seq;\n\nexport function Parsimmon_node(description, p) {\n    return p.node(description);\n}\n\n","import { Parsimmon_seperateBy, Parsimmon_ofLazy, Parsimmon_optionalWhitespace, Parsimmon_between, Parsimmon_orTry, Parsimmon_satisfy, Parsimmon_oneOf, Parsimmon_stringReturn, Parsimmon_choose, Parsimmon_seq3, Parsimmon_many, Parsimmon_str, Parsimmon_seq2, Parsimmon_map, Parsimmon_concat, Parsimmon_digit, Parsimmon_atLeastOneOrMany } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\nimport { parse } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Double.js\";\nimport { join } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { map, ofArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { Json } from \"./Json.fs.js\";\nimport { ofList } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Map.js\";\nimport { Lazy } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\n\nexport const digits = (() => {\n    let parser_1;\n    parser_1 = Parsimmon_atLeastOneOrMany(Parsimmon_digit);\n    return Parsimmon_concat(parser_1);\n})();\n\nexport const jint = (() => Parsimmon_map(parse, digits))();\n\nexport const negJint = (() => {\n    const parser = Parsimmon_seq2(Parsimmon_str(\"-\"), jint);\n    return Parsimmon_map((tupledArg) => {\n        const sign = tupledArg[0];\n        const number = tupledArg[1];\n        return -number;\n    }, parser);\n})();\n\nexport const jfloat = (() => {\n    let digits_1;\n    let parser_1;\n    parser_1 = Parsimmon_many(Parsimmon_digit);\n    digits_1 = Parsimmon_concat(parser_1);\n    const dot = Parsimmon_str(\".\");\n    let decimals;\n    let parser_3;\n    parser_3 = Parsimmon_atLeastOneOrMany(Parsimmon_digit);\n    decimals = Parsimmon_concat(parser_3);\n    const parser_4 = Parsimmon_seq3(digits_1, dot, decimals);\n    return Parsimmon_map((tupledArg) => {\n        const digitsLeft = tupledArg[0];\n        const dot_1 = tupledArg[1];\n        const digitsRight = tupledArg[2];\n        let digitsLeft_1;\n        if (digitsLeft === \"\") {\n            digitsLeft_1 = \"0\";\n        }\n        else {\n            const other = digitsLeft;\n            digitsLeft_1 = other;\n        }\n        let value;\n        value = join(\"\", [digitsLeft_1, dot_1, digitsRight]);\n        return parse(value);\n    }, parser_4);\n})();\n\nexport const negativeJFloat = (() => {\n    const parser = Parsimmon_seq2(Parsimmon_str(\"-\"), jfloat);\n    return Parsimmon_map((tupledArg) => {\n        const sign = tupledArg[0];\n        const number = tupledArg[1];\n        return -number;\n    }, parser);\n})();\n\nexport const jnumber = (() => {\n    let parser;\n    parser = Parsimmon_choose(ofArray([jfloat, negativeJFloat, jint, negJint]));\n    return Parsimmon_map((arg0) => (new Json(0, arg0)), parser);\n})();\n\nexport const jbool = (() => {\n    const ps = ofArray([Parsimmon_stringReturn(\"true\", new Json(2, true)), Parsimmon_stringReturn(\"false\", new Json(2, false))]);\n    return Parsimmon_choose(ps);\n})();\n\nexport const jnull = Parsimmon_stringReturn(\"null\", new Json(3));\n\nexport const stringLiteral = (() => {\n    let escape;\n    const parser = Parsimmon_oneOf(\"\\\"\\\\/bfnrt\");\n    escape = Parsimmon_map((_arg1) => {\n        switch (_arg1) {\n            case \"b\": {\n                return \"\\b\";\n            }\n            case \"f\": {\n                return \"\\f\";\n            }\n            case \"n\": {\n                return \"\\n\";\n            }\n            case \"r\": {\n                return \"\\r\";\n            }\n            case \"t\": {\n                return \"\\t\";\n            }\n            default: {\n                const c = _arg1;\n                return c;\n            }\n        }\n    }, parser);\n    let escapedCharSnippet;\n    const parser_1 = Parsimmon_seq2(Parsimmon_str(\"\\\\\"), escape);\n    escapedCharSnippet = Parsimmon_map((tuple) => tuple[1], parser_1);\n    const normalCharSnippet = Parsimmon_satisfy((c_1) => ((c_1 !== \"\\\"\") ? (c_1 !== \"\\\\\") : false));\n    let anyCharSnippet;\n    let parser_4;\n    let parser_3;\n    parser_3 = Parsimmon_orTry(escapedCharSnippet, normalCharSnippet);\n    parser_4 = Parsimmon_many(parser_3);\n    anyCharSnippet = Parsimmon_concat(parser_4);\n    const left = Parsimmon_str(\"\\\"\");\n    const right = Parsimmon_str(\"\\\"\");\n    return Parsimmon_between(left, right, anyCharSnippet);\n})();\n\nexport const jstring = stringLiteral.map((arg0) => (new Json(1, arg0)));\n\nexport function withWhitespace(p) {\n    return Parsimmon_between(Parsimmon_optionalWhitespace, Parsimmon_optionalWhitespace, p);\n}\n\nexport const jvalue = (() => {\n    let ps;\n    ps = map(withWhitespace, ofArray([jnull, jbool, jnumber, jstring]));\n    return Parsimmon_choose(ps);\n})();\n\nexport const comma = withWhitespace(Parsimmon_str(\",\"));\n\nfunction json$004099() {\n    return Parsimmon_ofLazy(() => {\n        const leftBracket = withWhitespace(Parsimmon_str(\"[\"));\n        const rightBracket = withWhitespace(Parsimmon_str(\"]\"));\n        const arrayValue = Parsimmon_seperateBy(comma, json$004099$002D1.Value);\n        let jarray;\n        let parser;\n        parser = Parsimmon_between(leftBracket, rightBracket, arrayValue);\n        jarray = Parsimmon_map((arg) => {\n            let arg0;\n            arg0 = ofArray(arg);\n            return new Json(4, arg0);\n        }, parser);\n        const leftBrace = withWhitespace(Parsimmon_str(\"{\"));\n        const rightBrace = withWhitespace(Parsimmon_str(\"}\"));\n        let keyValues;\n        let others;\n        const parser_1 = Parsimmon_seq3(withWhitespace(stringLiteral), withWhitespace(Parsimmon_str(\":\")), withWhitespace(json$004099$002D1.Value));\n        others = Parsimmon_map((tupledArg) => {\n            const key = tupledArg[0];\n            const value = tupledArg[2];\n            return [key, value];\n        }, parser_1);\n        keyValues = Parsimmon_seperateBy(comma, others);\n        let jobject;\n        let parser_2;\n        parser_2 = Parsimmon_between(leftBrace, rightBrace, keyValues);\n        jobject = Parsimmon_map((arg_2) => {\n            let arg0_1;\n            let elements;\n            elements = ofArray(arg_2);\n            arg0_1 = ofList(elements);\n            return new Json(5, arg0_1);\n        }, parser_2);\n        return Parsimmon_choose(ofArray([jvalue, jarray, jobject]));\n    });\n}\n\nconst json$004099$002D1 = new Lazy(json$004099);\n\nexport const json = json$004099$002D1.Value;\n\nexport const jsonParser = withWhitespace(json);\n\n","import { Parsimmon_parse } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\nimport { jsonParser } from \"./Parser.fs.js\";\nimport { join, toText, printf, toFail } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\nimport { empty, singleton, concat, ofSeq, ofArray, map as map_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/List.js\";\nimport { tryFind, ofList, toList } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Map.js\";\nimport { map as map_3, delay, getEnumerator } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Decimal.js\";\nimport { toDecimal } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/BigInt.js\";\nimport { toString as toString_1 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Date.js\";\nimport { partialApply, isIterable } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { value as value_5, some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\nimport { $007CNativeObject$007C_$007C, $007CNativeArray$007C_$007C, $007CNull$007C_$007C, $007CNativeBool$007C_$007C, $007CNativeNumber$007C_$007C, $007CNativeString$007C_$007C } from \"./TypeCheck.fs.js\";\nimport { Json } from \"./Json.fs.js\";\nimport { map as map_2 } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\n\nexport function InteropUtil_isDateOffset(x) {\n    if (x instanceof Date) {\n        return \"offset\" in x;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function InteropUtil_isObjectLiteral(x) {\n    return (typeof x) === \"object\";\n}\n\nexport function InteropUtil_isBigInt(x) {\n    if (((((!(x == null)) ? InteropUtil_isObjectLiteral(x) : false) ? (\"signInt\" in x) : false) ? (\"v\" in x) : false) ? (\"digits\" in (x[\"v\"])) : false) {\n        return \"bound\" in (x[\"v\"]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SimpleJson_tryParse(input) {\n    return Parsimmon_parse(input, jsonParser);\n}\n\nexport function SimpleJson_parse(input) {\n    const matchValue = SimpleJson_tryParse(input);\n    if (matchValue == null) {\n        const clo1 = toFail(printf(\"Could not parse the JSON input: %s\"));\n        return clo1(input);\n    }\n    else {\n        const result = matchValue;\n        return result;\n    }\n}\n\nexport function SimpleJson_toString(_arg1) {\n    if (_arg1.tag === 2) {\n        if (_arg1.fields[0]) {\n            return \"true\";\n        }\n        else {\n            return \"false\";\n        }\n    }\n    else if (_arg1.tag === 0) {\n        const number = _arg1.fields[0];\n        return number.toString();\n    }\n    else if (_arg1.tag === 1) {\n        const text = _arg1.fields[0];\n        const clo1 = toText(printf(\"\\\"%s\\\"\"));\n        return clo1(text);\n    }\n    else if (_arg1.tag === 4) {\n        const elements = _arg1.fields[0];\n        let arg10_1;\n        let strings;\n        strings = map_1(SimpleJson_toString, elements);\n        arg10_1 = join(\",\", strings);\n        const clo1_1 = toText(printf(\"[%s]\"));\n        return clo1_1(arg10_1);\n    }\n    else if (_arg1.tag === 5) {\n        const map = _arg1.fields[0];\n        let arg10_3;\n        let strings_1;\n        let list_1;\n        list_1 = toList(map);\n        strings_1 = map_1((tupledArg) => {\n            const key = tupledArg[0];\n            const value = tupledArg[1];\n            const arg20 = SimpleJson_toString(value);\n            const clo1_2 = toText(printf(\"\\\"%s\\\":%s\"));\n            const clo2 = clo1_2(key);\n            return clo2(arg20);\n        }, list_1);\n        arg10_3 = join(\",\", strings_1);\n        const clo1_3 = toText(printf(\"{%s}\"));\n        return clo1_3(arg10_3);\n    }\n    else {\n        return \"null\";\n    }\n}\n\nexport function SimpleJson_toPlainObject(input) {\n    switch (input.tag) {\n        case 2: {\n            const value = input.fields[0];\n            return value;\n        }\n        case 0: {\n            const value_1 = input.fields[0];\n            return value_1;\n        }\n        case 1: {\n            const value_2 = input.fields[0];\n            return value_2;\n        }\n        case 4: {\n            const values = input.fields[0];\n            const array = [];\n            const enumerator = getEnumerator(values);\n            try {\n                while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    const value_3 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    void (array.push(SimpleJson_toPlainObject(value_3)));\n                }\n            }\n            finally {\n                enumerator.Dispose();\n            }\n            return array;\n        }\n        case 5: {\n            const map = input.fields[0];\n            const jsObject = ({});\n            const inputSequence = toList(map);\n            const enumerator_1 = getEnumerator(inputSequence);\n            try {\n                while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    const forLoopVar = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    const value_4 = forLoopVar[1];\n                    const key = forLoopVar[0];\n                    jsObject[key] = SimpleJson_toPlainObject(value_4);\n                }\n            }\n            finally {\n                enumerator_1.Dispose();\n            }\n            return jsObject;\n        }\n        default: {\n            return null;\n        }\n    }\n}\n\nexport function SimpleJson_stringify(value) {\n    if (value == null) {\n        return JSON.stringify(null);\n    }\n    else {\n        return JSON.stringify(value, (key, jsonValue) => {\n            let copyOfStruct;\n            if (InteropUtil_isBigInt(jsonValue)) {\n                const bigInt = jsonValue;\n                return toString(toDecimal(bigInt));\n            }\n            else if (jsonValue instanceof Date) {\n                const dateOffset = jsonValue;\n                return toString_1(dateOffset, \"o\");\n            }\n            else {\n                return ((typeof jsonValue) === \"string\") ? jsonValue : (isIterable(jsonValue) ? (Array.isArray(jsonValue) ? jsonValue : (Array.from(jsonValue))) : (InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : (InteropUtil_isDateOffset(jsonValue) ? (copyOfStruct = jsonValue, toString_1(copyOfStruct, \"O\")) : jsonValue)));\n            }\n        }, some(0));\n    }\n}\n\nexport function SimpleJson_parseNative$0027(x) {\n    const activePatternResult3257 = $007CNativeString$007C_$007C(x);\n    if (activePatternResult3257 != null) {\n        const str = activePatternResult3257;\n        return new Json(1, str);\n    }\n    else {\n        const activePatternResult3256 = $007CNativeNumber$007C_$007C(x);\n        if (activePatternResult3256 != null) {\n            const number = activePatternResult3256;\n            return new Json(0, number);\n        }\n        else {\n            const activePatternResult3255 = $007CNativeBool$007C_$007C(x);\n            if (activePatternResult3255 != null) {\n                const value = activePatternResult3255;\n                return new Json(2, value);\n            }\n            else {\n                const activePatternResult3254 = $007CNull$007C_$007C(x);\n                if (activePatternResult3254 != null) {\n                    return new Json(3);\n                }\n                else {\n                    const activePatternResult3253 = $007CNativeArray$007C_$007C(x);\n                    if (activePatternResult3253 != null) {\n                        const arr = activePatternResult3253;\n                        return new Json(4, ofArray(map_2(SimpleJson_parseNative$0027, arr)));\n                    }\n                    else {\n                        const activePatternResult3252 = $007CNativeObject$007C_$007C(x);\n                        if (activePatternResult3252 != null) {\n                            const object = value_5(activePatternResult3252);\n                            let arg0;\n                            const elements = ofSeq(delay(() => map_3((key) => [key, SimpleJson_parseNative$0027(object[key])], Object.keys(object))));\n                            arg0 = ofList(elements);\n                            return new Json(5, arg0);\n                        }\n                        else {\n                            return new Json(3);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function SimpleJson_parseNative(input) {\n    const parsed = JSON.parse(input);\n    return SimpleJson_parseNative$0027(parsed);\n}\n\nexport function SimpleJson_tryParseNative(input) {\n    try {\n        return SimpleJson_parseNative(input);\n    }\n    catch (ex) {\n        return void 0;\n    }\n}\n\nexport function SimpleJson_fromObjectLiteral(x) {\n    try {\n        return SimpleJson_parseNative$0027(x);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function SimpleJson_mapKeys(f, _arg1) {\n    switch (_arg1.tag) {\n        case 5: {\n            const dictionary = _arg1.fields[0];\n            let arg0;\n            let elements;\n            let list;\n            list = toList(dictionary);\n            elements = map_1((tupledArg) => {\n                const key = tupledArg[0];\n                const value = tupledArg[1];\n                return [f(key), SimpleJson_mapKeys(f, value)];\n            }, list);\n            arg0 = ofList(elements);\n            return new Json(5, arg0);\n        }\n        case 4: {\n            const values = _arg1.fields[0];\n            let arg0_1;\n            arg0_1 = map_1((_arg1_1) => SimpleJson_mapKeys(f, _arg1_1), values);\n            return new Json(4, arg0_1);\n        }\n        default: {\n            const otherJsonValue = _arg1;\n            return otherJsonValue;\n        }\n    }\n}\n\nexport function SimpleJson_mapbyKey(f, _arg1) {\n    switch (_arg1.tag) {\n        case 5: {\n            const dictionary = _arg1.fields[0];\n            let arg0;\n            let elements;\n            let list;\n            list = toList(dictionary);\n            elements = map_1((tupledArg) => {\n                const key = tupledArg[0];\n                const value = tupledArg[1];\n                return [key, f(key, value)];\n            }, list);\n            arg0 = ofList(elements);\n            return new Json(5, arg0);\n        }\n        case 4: {\n            const values = _arg1.fields[0];\n            let arg0_1;\n            arg0_1 = map_1((_arg1_1) => SimpleJson_mapbyKey(f, _arg1_1), values);\n            return new Json(4, arg0_1);\n        }\n        default: {\n            const otherJsonValue = _arg1;\n            return otherJsonValue;\n        }\n    }\n}\n\nexport function SimpleJson_mapKeysByPath(f, json) {\n    const mapKey = (xs, _arg1) => {\n        switch (_arg1.tag) {\n            case 5: {\n                const dictionary = _arg1.fields[0];\n                let arg0;\n                let elements;\n                let list;\n                list = toList(dictionary);\n                elements = map_1((tupledArg) => {\n                    const key = tupledArg[0];\n                    const value = tupledArg[1];\n                    const keyPath = concat([xs, singleton(key)]);\n                    const matchValue = f(keyPath);\n                    if (matchValue == null) {\n                        return [key, mapKey(keyPath, value)];\n                    }\n                    else {\n                        const nextKey = matchValue;\n                        return [nextKey, mapKey(keyPath, value)];\n                    }\n                }, list);\n                arg0 = ofList(elements);\n                return new Json(5, arg0);\n            }\n            case 4: {\n                const values = _arg1.fields[0];\n                let arg0_1;\n                const mapping_1 = partialApply(1, mapKey, [xs]);\n                arg0_1 = map_1(mapping_1, values);\n                return new Json(4, arg0_1);\n            }\n            default: {\n                const otherJsonValue = _arg1;\n                return otherJsonValue;\n            }\n        }\n    };\n    return mapKey(empty(), json);\n}\n\nexport function SimpleJson_readPath(keys_mut, input_mut) {\n    SimpleJson_readPath:\n    while (true) {\n        const keys = keys_mut, input = input_mut;\n        const matchValue = [keys, input];\n        let pattern_matching_result, dict, key, dict_1, firstKey, rest;\n        if (matchValue[0].tail != null) {\n            if (matchValue[0].tail.tail == null) {\n                if (matchValue[1].tag === 5) {\n                    pattern_matching_result = 1;\n                    dict = matchValue[1].fields[0];\n                    key = matchValue[0].head;\n                }\n                else {\n                    pattern_matching_result = 3;\n                }\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 2;\n                dict_1 = matchValue[1].fields[0];\n                firstKey = matchValue[0].head;\n                rest = matchValue[0].tail;\n            }\n            else {\n                pattern_matching_result = 3;\n            }\n        }\n        else {\n            pattern_matching_result = 0;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return void 0;\n            }\n            case 1: {\n                return tryFind(key, dict);\n            }\n            case 2: {\n                const matchValue_1 = tryFind(firstKey, dict_1);\n                let pattern_matching_result_1, nextDict;\n                if (matchValue_1 != null) {\n                    if (matchValue_1.tag === 5) {\n                        pattern_matching_result_1 = 0;\n                        nextDict = matchValue_1.fields[0];\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 1;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        keys_mut = rest;\n                        input_mut = (new Json(5, nextDict));\n                        continue SimpleJson_readPath;\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            }\n            case 3: {\n                return void 0;\n            }\n        }\n        break;\n    }\n}\n\n","import { some } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Option.js\";\n\nexport function $007CNativeString$007C_$007C(x) {\n    if (typeof (x) === 'string') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeBool$007C_$007C(x) {\n    if (typeof (x) === 'boolean') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeNumber$007C_$007C(x) {\n    if (typeof (x) === 'number') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeObject$007C_$007C(x) {\n    if (typeof (x) === 'object') {\n        return some(x);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNull$007C_$007C(x) {\n    if (x == null) {\n        return some(x);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeArray$007C_$007C(x) {\n    if (Array.isArray(x)) {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport Decimal from \"./Decimal.js\";\nimport Long, * as _Long from \"./Long.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","import { getHashCode, equals, getEnumUnderlyingType, isEnum, getTupleElements, isTuple, getElementType, isArray, getFunctionElements, isFunction, getUnionCaseFields, getUnionCases, isUnion, getGenerics, name, getRecordElements, isRecord, fullName } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Reflection.js\";\nimport { UnionCase, RecordField, TypeInfo } from \"./TypeInfo.fs.js\";\nimport { map } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Array.js\";\nimport { collect, singleton, append, delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Seq.js\";\nimport { Lazy } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Util.js\";\nimport { Dictionary } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MutableMap.js\";\nimport { tryGetValue } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/MapUtil.js\";\nimport { FSharpRef } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/Types.js\";\nimport { endsWith, isNullOrEmpty } from \"../../../.fable/fable-library.3.0.0-nagareyama-rc-008/String.js\";\n\nexport function $007CPrimitiveType$007C_$007C(primType) {\n    const matchValue = fullName(primType);\n    switch (matchValue) {\n        case \"System.String\": {\n            return new TypeInfo(1);\n        }\n        case \"System.Int16\": {\n            return new TypeInfo(10);\n        }\n        case \"System.Int32\": {\n            return new TypeInfo(5);\n        }\n        case \"Microsoft.FSharp.Core.int64`1\":\n        case \"System.Int64\": {\n            return new TypeInfo(11);\n        }\n        case \"System.UInt16\": {\n            return new TypeInfo(2);\n        }\n        case \"System.UInt32\": {\n            return new TypeInfo(3);\n        }\n        case \"System.UInt64\": {\n            return new TypeInfo(4);\n        }\n        case \"System.DateTime\": {\n            return new TypeInfo(13);\n        }\n        case \"System.TimeSpan\": {\n            return new TypeInfo(16);\n        }\n        case \"System.DateTimeOffset\": {\n            return new TypeInfo(14);\n        }\n        case \"System.Boolean\": {\n            return new TypeInfo(6);\n        }\n        case \"System.Single\": {\n            return new TypeInfo(7);\n        }\n        case \"System.Double\": {\n            return new TypeInfo(8);\n        }\n        case \"Microsoft.FSharp.Core.decimal`1\":\n        case \"System.Decimal\": {\n            return new TypeInfo(9);\n        }\n        case \"System.Numerics.BigInteger\": {\n            return new TypeInfo(15);\n        }\n        case \"Microsoft.FSharp.Core.Unit\": {\n            return new TypeInfo(0);\n        }\n        case \"System.Guid\": {\n            return new TypeInfo(17);\n        }\n        case \"System.Byte\": {\n            return new TypeInfo(12);\n        }\n        case \"System.Object\": {\n            return new TypeInfo(18);\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function $007CRecordType$007C_$007C(t) {\n    if (isRecord(t)) {\n        let arg0;\n        const array = getRecordElements(t);\n        arg0 = map((field) => [field, name(field), field[1]], array);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CSetType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpSet`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNullable$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Nullable`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CUnionType$007C_$007C(t) {\n    if (isUnion(t)) {\n        let arg0;\n        const array_1 = getUnionCases(t);\n        arg0 = map((info) => {\n            const caseName = name(info);\n            let caseTypes;\n            const array = getUnionCaseFields(info);\n            caseTypes = map((prop) => prop[1], array);\n            return [caseName, info, caseTypes];\n        }, array_1);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CMapType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpMap`2\") === 0) {\n        const genArgs = getGenerics(t);\n        return [genArgs[0], genArgs[1]];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CListType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpList`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function flattenFuncTypes(typeDef) {\n    return Array.from(delay(() => {\n        if (isFunction(typeDef)) {\n            const patternInput = getFunctionElements(typeDef);\n            const range = patternInput[1];\n            const domain = patternInput[0];\n            return append(flattenFuncTypes(domain), delay(() => flattenFuncTypes(range)));\n        }\n        else {\n            return singleton(typeDef);\n        }\n    }));\n}\n\nexport function $007CFuncType$007C_$007C(t) {\n    if (isFunction(t)) {\n        const arg0 = flattenFuncTypes(t);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CArrayType$007C_$007C(t) {\n    if (isArray(t)) {\n        const arg0 = getElementType(t);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007COptionType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Core.FSharpOption`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CTupleType$007C_$007C(t) {\n    if (isTuple(t)) {\n        const arg0 = getTupleElements(t);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CSeqType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.IEnumerable`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CDictionaryType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.Dictionary\") === 0) {\n        const genArgs = getGenerics(t);\n        return [genArgs[0], genArgs[1]];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CResizeArrayType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.List\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CHashSetType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.HashSet\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CAsyncType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Control.FSharpAsync`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CPromiseType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Fable.Core.JS.Promise`1\") === 0) {\n        const arg0 = getGenerics(t)[0];\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nfunction lazyToDelayed(l, unitVar0) {\n    return l.Value;\n}\n\nexport function $007CEnumType$007C_$007C(t) {\n    if (isEnum(t)) {\n        const arg0 = getEnumUnderlyingType(t);\n        return arg0;\n    }\n    else {\n        return void 0;\n    }\n}\n\nfunction _createTypeInfo(resolvedType) {\n    let l_3, l_4, l_5, l_6, l_7, l_8, l_9, l_10, l_11, l_12, l_13, l_14, l_15, l_16, l_17;\n    const activePatternResult3172 = $007CPrimitiveType$007C_$007C(resolvedType);\n    if (activePatternResult3172 != null) {\n        const typeInfo = activePatternResult3172;\n        return typeInfo;\n    }\n    else {\n        const activePatternResult3171 = $007CFuncType$007C_$007C(resolvedType);\n        if (activePatternResult3171 != null) {\n            const types = activePatternResult3171;\n            let arg0;\n            const l = new Lazy(() => map(createTypeInfo, types));\n            arg0 = (() => lazyToDelayed(l, void 0));\n            return new TypeInfo(32, arg0);\n        }\n        else {\n            const activePatternResult3170 = $007CRecordType$007C_$007C(resolvedType);\n            if (activePatternResult3170 != null) {\n                const fields = activePatternResult3170;\n                const l_1 = new Lazy(() => {\n                    const fields_1 = Array.from(delay(() => collect((matchValue) => {\n                        const fieldType = matchValue[2];\n                        const fieldName = matchValue[1];\n                        const field = matchValue[0];\n                        return singleton(new RecordField(fieldName, createTypeInfo(fieldType), field));\n                    }, fields)));\n                    return [fields_1, resolvedType];\n                });\n                return new TypeInfo(34, () => lazyToDelayed(l_1, void 0));\n            }\n            else {\n                const activePatternResult3169 = $007CUnionType$007C_$007C(resolvedType);\n                if (activePatternResult3169 != null) {\n                    const cases = activePatternResult3169;\n                    const l_2 = new Lazy(() => [Array.from(delay(() => collect((matchValue_1) => {\n                        const caseTypes = matchValue_1[2];\n                        const caseName = matchValue_1[0];\n                        const caseInfo = matchValue_1[1];\n                        return singleton(new UnionCase(caseName, map(createTypeInfo, caseTypes), caseInfo));\n                    }, cases))), resolvedType]);\n                    return new TypeInfo(35, () => lazyToDelayed(l_2, void 0));\n                }\n                else {\n                    const activePatternResult3168 = $007CEnumType$007C_$007C(resolvedType);\n                    if (activePatternResult3168 != null) {\n                        const elemType = activePatternResult3168;\n                        return new TypeInfo(33, (l_3 = (new Lazy(() => [createTypeInfo(elemType), resolvedType])), () => lazyToDelayed(l_3, void 0)));\n                    }\n                    else {\n                        const activePatternResult3167 = $007CListType$007C_$007C(resolvedType);\n                        if (activePatternResult3167 != null) {\n                            const elemType_1 = activePatternResult3167;\n                            return new TypeInfo(23, (l_4 = (new Lazy(() => createTypeInfo(elemType_1))), () => lazyToDelayed(l_4, void 0)));\n                        }\n                        else {\n                            const activePatternResult3166 = $007CResizeArrayType$007C_$007C(resolvedType);\n                            if (activePatternResult3166 != null) {\n                                const elemType_2 = activePatternResult3166;\n                                return new TypeInfo(30, (l_5 = (new Lazy(() => createTypeInfo(elemType_2))), () => lazyToDelayed(l_5, void 0)));\n                            }\n                            else {\n                                const activePatternResult3165 = $007CHashSetType$007C_$007C(resolvedType);\n                                if (activePatternResult3165 != null) {\n                                    const elemType_3 = activePatternResult3165;\n                                    return new TypeInfo(31, (l_6 = (new Lazy(() => createTypeInfo(elemType_3))), () => lazyToDelayed(l_6, void 0)));\n                                }\n                                else {\n                                    const activePatternResult3164 = $007CArrayType$007C_$007C(resolvedType);\n                                    if (activePatternResult3164 != null) {\n                                        const elemType_4 = activePatternResult3164;\n                                        return new TypeInfo(25, (l_7 = (new Lazy(() => createTypeInfo(elemType_4))), () => lazyToDelayed(l_7, void 0)));\n                                    }\n                                    else {\n                                        const activePatternResult3163 = $007CTupleType$007C_$007C(resolvedType);\n                                        if (activePatternResult3163 != null) {\n                                            const types_1 = activePatternResult3163;\n                                            return new TypeInfo(27, (l_8 = (new Lazy(() => map(createTypeInfo, types_1))), () => lazyToDelayed(l_8, void 0)));\n                                        }\n                                        else {\n                                            const activePatternResult3162 = $007COptionType$007C_$007C(resolvedType);\n                                            if (activePatternResult3162 != null) {\n                                                const elemType_5 = activePatternResult3162;\n                                                return new TypeInfo(22, (l_9 = (new Lazy(() => createTypeInfo(elemType_5))), () => lazyToDelayed(l_9, void 0)));\n                                            }\n                                            else {\n                                                const activePatternResult3161 = $007CNullable$007C_$007C(resolvedType);\n                                                if (activePatternResult3161 != null) {\n                                                    const elemType_6 = activePatternResult3161;\n                                                    return new TypeInfo(22, (l_10 = (new Lazy(() => createTypeInfo(elemType_6))), () => lazyToDelayed(l_10, void 0)));\n                                                }\n                                                else {\n                                                    const activePatternResult3160 = $007CSetType$007C_$007C(resolvedType);\n                                                    if (activePatternResult3160 != null) {\n                                                        const elemType_7 = activePatternResult3160;\n                                                        return new TypeInfo(24, (l_11 = (new Lazy(() => createTypeInfo(elemType_7))), () => lazyToDelayed(l_11, void 0)));\n                                                    }\n                                                    else {\n                                                        const activePatternResult3159 = $007CMapType$007C_$007C(resolvedType);\n                                                        if (activePatternResult3159 != null) {\n                                                            const keyType = activePatternResult3159[0];\n                                                            const valueType = activePatternResult3159[1];\n                                                            return new TypeInfo(28, (l_12 = (new Lazy(() => [createTypeInfo(keyType), createTypeInfo(valueType)])), () => lazyToDelayed(l_12, void 0)));\n                                                        }\n                                                        else {\n                                                            const activePatternResult3158 = $007CDictionaryType$007C_$007C(resolvedType);\n                                                            if (activePatternResult3158 != null) {\n                                                                const keyType_1 = activePatternResult3158[0];\n                                                                const valueType_1 = activePatternResult3158[1];\n                                                                return new TypeInfo(29, (l_13 = (new Lazy(() => [createTypeInfo(keyType_1), createTypeInfo(valueType_1), valueType_1])), () => lazyToDelayed(l_13, void 0)));\n                                                            }\n                                                            else {\n                                                                const activePatternResult3157 = $007CSeqType$007C_$007C(resolvedType);\n                                                                if (activePatternResult3157 != null) {\n                                                                    const elemType_8 = activePatternResult3157;\n                                                                    return new TypeInfo(26, (l_14 = (new Lazy(() => createTypeInfo(elemType_8))), () => lazyToDelayed(l_14, void 0)));\n                                                                }\n                                                                else {\n                                                                    const activePatternResult3156 = $007CAsyncType$007C_$007C(resolvedType);\n                                                                    if (activePatternResult3156 != null) {\n                                                                        const elemType_9 = activePatternResult3156;\n                                                                        return new TypeInfo(20, (l_15 = (new Lazy(() => createTypeInfo(elemType_9))), () => lazyToDelayed(l_15, void 0)));\n                                                                    }\n                                                                    else {\n                                                                        const activePatternResult3155 = $007CPromiseType$007C_$007C(resolvedType);\n                                                                        if (activePatternResult3155 != null) {\n                                                                            const elemType_10 = activePatternResult3155;\n                                                                            return new TypeInfo(21, (l_16 = (new Lazy(() => createTypeInfo(elemType_10))), () => lazyToDelayed(l_16, void 0)));\n                                                                        }\n                                                                        else {\n                                                                            return new TypeInfo(19, (l_17 = (new Lazy(() => resolvedType)), () => lazyToDelayed(l_17, void 0)));\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nconst typeInfoCache = new Dictionary([], {\n    Equals: equals,\n    GetHashCode: getHashCode,\n});\n\nexport function createTypeInfo(resolvedType) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(typeInfoCache, resolvedType, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        const ti = matchValue[1];\n        return ti;\n    }\n    else {\n        const ti_1 = _createTypeInfo(resolvedType);\n        const notAnonymousRecord = ((!isNullOrEmpty(fullName(resolvedType))) ? (!endsWith(fullName(resolvedType), \"`1[]\")) : false) ? (!endsWith(fullName(resolvedType), \"`2[]\")) : false;\n        if (notAnonymousRecord) {\n            typeInfoCache.set(resolvedType, ti_1);\n            return ti_1;\n        }\n        else {\n            return ti_1;\n        }\n    }\n}\n\nexport function isPrimitive(_arg1) {\n    switch (_arg1.tag) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 17:\n        case 22: {\n            return true;\n        }\n        default: {\n            const otherwise = _arg1;\n            return false;\n        }\n    }\n}\n\nexport function enumUnion(_arg1) {\n    if (_arg1.tag === 35) {\n        const getCases = _arg1.fields[0];\n        let array;\n        const tuple = getCases();\n        array = tuple[0];\n        return array.every((case$) => (case$.CaseTypes.length === 0));\n    }\n    else {\n        const otherwise = _arg1;\n        return false;\n    }\n}\n\n","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long.js\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (offset != null && count != null) {\n        buffer = buffer.subarray(offset, offset + count);\n    }\n    else if (offset != null) {\n        buffer = buffer.subarray(offset);\n    }\n    return Array.from(buffer).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    const xs_1 = fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function concat(lists) {\n    const xs_1 = fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists);\n    return reverse(xs_1);\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const state_2 = matchValue[1];\n                acc_mut = (new List_1(x, acc));\n                state_1_mut = state_2;\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    const xs_1 = scan_1(f, state, xs);\n    return ofSeq(xs_1);\n}\n\nexport function scanBack(f, xs, state) {\n    const xs_1 = scanBack_1(f, xs, state);\n    return ofSeq(xs_1);\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    const xs_1 = collect_1(f, xs);\n    return ofSeq(xs_1);\n}\n\nexport function map(f, xs) {\n    const xs_1 = fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed(f, xs) {\n    const xs_1 = foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    const xs_1 = fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    const xs_1 = foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function map3(f, xs, ys, zs) {\n    const xs_1 = fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    const xs_1 = foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        const x = value_1(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        const x = value_1(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return find(f, xs_2);\n}\n\nexport function tryFindBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return tryFind(f, xs_2);\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return tryFindIndexBack_1(f, array);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        const x = matchValue | 0;\n        return x | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return findIndexBack_1(f, array) | 0;\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    const xs_1 = fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    const xs_1 = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const y = value_1(matchValue);\n            return new List_1(y, acc);\n        }\n    }, new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortWith(comparer, xs) {\n    let xs_2;\n    const comparer_1 = comparer;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(comparer_1);\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function permute(f, xs) {\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = permute_1(f, array);\n    return ofArray(xs_1);\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    let xs_3;\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = chunkBySize_1(chunkSize, array);\n    xs_3 = ofArray(xs_1);\n    return map(ofArray, xs_3);\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(true, i_3, new List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(false, i_3, new List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (upper < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        let res;\n        res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= upper)) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (upper > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return addToSet(arg00, hashSet);\n    }, xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, xs_2);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, xs_2);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    const xs = pairwise_1(source);\n    return ofSeq(xs);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    let xs_2;\n    let xs;\n    let array;\n    array = Array.from(source);\n    xs = splitInto_1(chunks, array);\n    xs_2 = ofArray(xs);\n    return map(ofArray, xs_2);\n}\n\nexport function transpose(lists) {\n    let xs_1;\n    let source_1;\n    source_1 = transpose_1(lists);\n    xs_1 = map_1(ofSeq, source_1);\n    return ofSeq(xs_1);\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new (cons || Array)((len1 + len2));\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return new (cons || Array)(0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = new (cons || Array)(totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    const mapped = map(mapping, array, null);\n    return concat(mapped, cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const value = array[idx];\n        const key = projection(value);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            const value_1 = keys.push(key);\n            void value_1;\n        }\n    }\n    const result = map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n    return result;\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return addToSet(arg00, hashSet);\n    }, array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            const value = keys.push(key);\n            void value;\n        }\n    }\n    const result = map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n    return result;\n}\n\nexport function empty(cons) {\n    return new (cons || Array)(0);\n}\n\nexport function singleton(value, cons) {\n    const ar = new (cons || Array)(1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    const value = array.push(x);\n    void value;\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        const value = array.push(x);\n        void value;\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        const value = array.splice(i, 1);\n        void value;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            const value = array.splice(i, 1);\n            void value;\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + count)) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = new (cons || Array)(len);\n    const res2 = new (cons || Array)(len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        const res = value_2(matchValue);\n        return res;\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound() | 0;\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    const res = value_2(matchValue);\n                    return res;\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound() | 0;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const arr = array.filter(((x) => {\n        const option = chooser(x);\n        return option != null;\n    }));\n    return map((x_1) => {\n        const option_1 = chooser(x_1);\n        return value_2(option_1);\n    }, arr, cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce((folder), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    let isValid;\n    isValid = (checkFlags.every(((y) => (1 === y))));\n    if (!isValid) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                const value = res.push(x);\n                void value;\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            const start = (x * chunkSize) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith(compare, array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1(comparePrimitives, 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            const start = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    let value;\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const firstArray = arrays_1[0];\n        const lenInner = firstArray.length | 0;\n        if (value = (forAll((a) => (a.length === lenInner), arrays_1)), (!value)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = (new (cons || Array)(len));\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { List, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            let y_2;\n            const x_1 = wj;\n            y_2 = (toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            res[offset + j] = ((even + y_2) % BigNatModule_FFT_Fp_p);\n            let y_4;\n            const x_3 = wj;\n            y_4 = (toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - y_4) % BigNatModule_FFT_Fp_p);\n            const y_5 = wj;\n            wj = (toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    const rT = initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array);\n    const r = BigNatModule_FFT_computeInverseFftInPlace(n, w, rT);\n    return r;\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const deguv = (degu + degv) | 0;\n    const bound = (deguv + 1) | 0;\n    const patternInput = BigNatModule_FFT_leastBounding2Power(bound);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    const rT = initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array);\n    const r = BigNatModule_FFT_computeInverseFftInPlace(n, w, rT);\n    return map(BigNatModule_FFT_Fp_toInt, r, Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = v;\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = v;\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = (n.digits[i] + (res << 3));\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = bound;\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = x_1;\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = ((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = (~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64))));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = (n.digits[i] + (BigNatModule_baseN * acc));\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = n.digits[i];\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = n.digits[i + d];\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = BigNatModule_modbase(x);\n            const c_1 = BigNatModule_divbase(x) | 0;\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = c_1;\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = BigNatModule_modbase(x);\n                const c_1 = BigNatModule_divbase(x) | 0;\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = c_1;\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = BigNatModule_modbase(x_1);\n                const c_2 = (BigNatModule_divbase(x_1) - 1) | 0;\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = c_2;\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            const underflow = c !== 0;\n            return underflow;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    const underflow = BigNatModule_subP(0, rbound, 0, p, q, r);\n    if (underflow) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        let x_3;\n        const value = op_BitwiseAnd(x, BigNatModule_baseMaski64);\n        x_3 = (~(~toInt(value)));\n        a[i] = x_3;\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const rbound = (p.bound + BigNatModule_boundInt) | 0;\n    const r = BigNatModule_createN(rbound);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const kpi = op_Multiply(k_1, fromInteger(p.digits[i], false, 2));\n        BigNatModule_contributeArr(r.digits, i, kpi);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    let value;\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, (value = op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~toInt(value)))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    let value;\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, (value = op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~toInt(value)))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    let value;\n    const bp = BigNatModule_bound(p) | 0;\n    const rbound = (bp + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, (value = op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~toInt(value)))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    let value;\n    const rbound = (p.bound + q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = (value = op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~toInt(value))));\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = (k + 1);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    const N = op_Multiply(bigK, fromInteger(bigL, false, 2));\n    return [bigL, k, bigK, N];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    const bj = ((bi + enc.bigL) - 1) | 0;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(bj / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        let x;\n        const z = n;\n        const i = biw | 0;\n        x = ((i < z.bound) ? z.digits[i] : 0);\n        let y;\n        const z_1 = n;\n        const i_1 = bjw | 0;\n        y = ((i_1 < z_1.bound) ? z_1.digits[i_1] : 0);\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        const nxbits = (BigNatModule_baseBits - xbit) | 0;\n        const x_1 = (x >> xbit) | 0;\n        const y_1 = (y << nxbits) | 0;\n        const x_2 = (x_1 | y_1) | 0;\n        const x_3 = (x_2 & BigNatModule_bitmask[enc.bigL]) | 0;\n        return x_3 | 0;\n    }\n    else {\n        let x_4;\n        const z_2 = n;\n        const i_2 = biw | 0;\n        x_4 = ((i_2 < z_2.bound) ? z_2.digits[i_2] : 0);\n        const xbit_1 = (bi % BigNatModule_baseBits) | 0;\n        const x_5 = (x_4 >> xbit_1) | 0;\n        const x_6 = (x_5 & BigNatModule_bitmask[enc.bigL]) | 0;\n        return x_6 | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                const i_1 = (i + 1) | 0;\n                const bi_1 = (bi + enc.bigL) | 0;\n                i_mut = i_1;\n                bi_mut = bi_1;\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = i;\n        }\n    }\n    const rbits = ((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) | 0;\n    return (rbits + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    const x = op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]);\n                    BigNatModule_contributeArr(r.digits, j, x);\n                }\n                const i_2 = (i + 1) | 0;\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = i_2;\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const bitsRes = (BigNatModule_bits(u) + BigNatModule_bits(v)) | 0;\n    const enc = BigNatModule_encodingGivenResultBits(bitsRes);\n    const upoly = BigNatModule_encodePoly(enc, u);\n    const vpoly = BigNatModule_encodePoly(enc, v);\n    const rpoly = BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, upoly, vpoly);\n    const r = BigNatModule_decodePoly(enc, rpoly);\n    return BigNatModule_normN(r);\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bp = p.bound | 0;\n    const bq = q.bound | 0;\n    const bmax = BigNatModule_maxInt(bp, bq) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        const p1 = BigNatModule_sub(q1, BigNatModule_add(q0, q2));\n        const r = BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(p1, BigNatModule_shiftUp(k, q2))));\n        return r;\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo;\n        let value_1;\n        const x_2 = z;\n        const value = op_BitwiseAnd(x_2, BigNatModule_baseMaski64);\n        value_1 = (~(~toInt(value)));\n        zLo = value_1;\n        let zHi;\n        const x_3 = z;\n        zHi = op_Division(x_3, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = (x_1[j + n] - zLo);\n        }\n        else {\n            x_1[j + n] = (x_1[j + n] + (BigNatModule_baseN - zLo));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo;\n        let value_1;\n        const x_2 = z;\n        const value = op_BitwiseAnd(x_2, BigNatModule_baseMaski64);\n        value_1 = (~(~toInt(value)));\n        zLo = value_1;\n        let zHi;\n        const x_3 = z;\n        zHi = op_Division(x_3, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = (x_1[j + n] + zLo);\n        }\n        else {\n            x_1[j + n] = (zLo - (BigNatModule_baseN - x_1[j + n]));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        let f;\n        if (dega === 0) {\n            if (degx === n) {\n                f = (~(~(xa[n] / aa[0])));\n            }\n            else {\n                const f64 = op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2));\n                f = (~(~toInt(f64)));\n            }\n        }\n        else if (degx === (dega + n)) {\n            f = (~(~(xa[degx] / (aa[dega] + 1))));\n        }\n        else {\n            const f64_1 = op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)));\n            f = (~(~toInt(f64_1)));\n        }\n        if (f === 0) {\n            const lte = BigNatModule_shiftCompare(a, n, x, 0) !== 1;\n            if (lte) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = (n - 1);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = (n - 1);\n                        p = (p - 1);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const rbound = BigNatModule_minInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = (a.digits[i] & b.digits[i]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const rbound = BigNatModule_maxInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] | a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] | b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const rbound = BigNatModule_maxInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] ^ a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] ^ b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(b_1, a_1);\n                a_1_mut = patternInput[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return fromInteger(value, true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return new List([k, ten2k], prior);\n            }\n            else {\n                prior_mut = (new List([k, ten2k], prior));\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const kten2ks = route(new List(), 0, BigNatModule_embed(10));\n    const collect = (isLeading, digits, n_1, _arg1) => {\n        if (_arg1.tail != null) {\n            const prior_1 = _arg1.tail;\n            const patternInput = BigNatModule_divmod(n_1, _arg1.head[1]);\n            const nL = patternInput[1];\n            const nH = patternInput[0];\n            if (isLeading ? BigNatModule_isZero(nH) : false) {\n                const digits_1 = collect(isLeading, digits, nL, prior_1);\n                return digits_1;\n            }\n            else {\n                const digits_2 = collect(false, digits, nL, prior_1);\n                const digits_3 = collect(isLeading, digits_2, nH, prior_1);\n                return digits_3;\n            }\n        }\n        else {\n            const n_2 = BigNatModule_eval32(n_1) | 0;\n            if (isLeading ? (n_2 === 0) : false) {\n                return digits;\n            }\n            else {\n                return new List(int32ToString(n_2), digits);\n            }\n        }\n    };\n    const digits_4 = collect(true, new List(), n, kten2ks);\n    if (digits_4.tail == null) {\n        return \"0\";\n    }\n    else {\n        let arg00;\n        arg00 = Array.from(digits_4);\n        return join(\"\", arg00);\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const c = str[i];\n                const d = (c.charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { toString, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = signInt;\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule_ofInt32);\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    const tuple = BigInteger_DivRem_56F059C0(x, y);\n    return tuple[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    const tuple = BigInteger_DivRem_56F059C0(x, y);\n    return tuple[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compareSafe, equalsSafe, hashSafe } from \"./Util.js\";\nimport { List, toString as toString_1 } from \"./Types.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { unfold, delay, rangeNumber } from \"./Seq.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1((fromInteger(i, false, 6)));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return hashSafe(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equalsSafe(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        let firstBitIndex;\n        const list = ofSeq(rangeNumber(0, 1, 7));\n        firstBitIndex = find((i) => ((currByte & (1 << i)) > 0), list);\n        return [(currByte ^ (254 << firstBitIndex)) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equalsSafe(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compareSafe(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        let mask32;\n        let i;\n        i = fromInteger(4294967295, false, 6);\n        mask32 = fromInt64(i);\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compareSafe(consumeValue, zero) <= 0) {\n                    let accumBytes_1;\n                    if (isPositive) {\n                        accumBytes_1 = skipWhile((b) => (b === 0), accumBytes);\n                    }\n                    else {\n                        accumBytes_1 = skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    }\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    const accumBytes_2 = (isPositive ? isHighBitOne : false) ? (new List(0, accumBytes_1)) : (((!isPositive) ? (!isHighBitOne) : false) ? (new List(255, accumBytes_1)) : accumBytes_1);\n                    let array;\n                    array = Uint8Array.from(accumBytes_2);\n                    return reverse(array);\n                }\n                else {\n                    let currValue;\n                    const x = BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32);\n                    currValue = toUInt32(x);\n                    if (isPositive) {\n                        let b0;\n                        b0 = (currValue & 0xFF);\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        let b3;\n                        const value_6 = currValue >>> 24;\n                        b3 = (value_6 & 0xFF);\n                        accumBytes_mut = (new List(b3, new List(b2, new List(b1, new List(b0, accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), (value_8 & 0xFF)), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), (value_9 & 0xFF)), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), (value_10 & 0xFF)), patternInput_2[1]);\n                        accumBytes_mut = (new List(patternInput_3[0], new List(patternInput_2[0], new List(patternInput_1[0], new List(patternInput[0], accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    let value_2;\n                    value_2 = fold((acc, value) => {\n                        let i;\n                        return BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), (i = (fromInteger(value, false, 6)), (fromInt64(i))));\n                    }, zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        const value_3 = (((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0;\n                        accumUInt32_mut = (new List(value_3, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        const value_4 = (((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0;\n                        accumUInt32_mut = (new List(value_4, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), 0, bytes.length, false);\n    }\n}\n\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = compareSafe(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compareSafe(x, last) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, BigInteger_op_Addition_56F059C0(x, step)] : (void 0);\n    };\n}\n\nexport function range(first, step, last) {\n    const stepFn = makeRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\n\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions(structuralHash, equals);\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions(physicalHash, (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction(compare);\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { sumBy } from \"./Seq.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    }) | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    const str = toString(x);\n    return substring(str, firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        const value = StringBuilder__Append_Z721C83C5(builder, s);\n        void value;\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n        void undefined;\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { value as value_2, some } from \"./Option.js\";\nimport { Record, List } from \"./Types.js\";\nimport { fold as fold_1 } from \"./List.js\";\nimport { structuralHash, partialApply, compare, equals, isArrayLike } from \"./Util.js\";\nimport { empty as empty_1, tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, toIterator, map as map_2, unfold, getEnumerator } from \"./Seq.js\";\nimport { join, format } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        return arg0;\n    }\n    else {\n        const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n        return arg0_1;\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = t2;\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = MapTreeNode$2__get_Left(matchValue);\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = t1;\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = MapTreeNode$2__get_Right(matchValue_2);\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                return arg0_1;\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            const arg0_2 = MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n            return arg0_2;\n        }\n        else if (c === 0) {\n            const arg0_3 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n            return arg0_3;\n        }\n        else {\n            const arg0_4 = MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n            return arg0_4;\n        }\n    }\n    else {\n        const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        return arg0;\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        const v = value_2(matchValue);\n        return v;\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                let acc_2;\n                const m_1 = MapTreeNode$2__get_Right(m2);\n                acc_2 = MapTreeModule_partitionAux(comparer, f, m_1, acc[0], acc[1]);\n                let acc_3;\n                const k = MapTreeLeaf$2__get_Key(m2);\n                const v = MapTreeLeaf$2__get_Value(m2);\n                acc_3 = MapTreeModule_partition1(comparer, f, k, v, acc_2[0], acc_2[1]);\n                const m_2 = MapTreeNode$2__get_Left(m2);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = m_2;\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                const k_1 = MapTreeLeaf$2__get_Key(m2);\n                const v_1 = MapTreeLeaf$2__get_Value(m2);\n                return MapTreeModule_partition1(comparer, f, k_1, v_1, acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    let m_1;\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    let m_1, m_2;\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (m_2 = MapTreeNode$2__get_Right(m2), m_2 == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    let m_1, m_2;\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    const v_1 = value_2(matchValue_1);\n                    const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v_1, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                    return arg0_1;\n                }\n                else if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (m_2 = MapTreeNode$2__get_Right(m2), m_2 == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    const v_2 = value_2(matchValue_2);\n                    const arg0_2 = MapTreeNode$2_$ctor_499A11FD(k, v_2, MapTreeModule_empty(), m, 2);\n                    return arg0_2;\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    const v_3 = value_2(matchValue_3);\n                    const arg0_3 = MapTreeLeaf$2_$ctor_5BDDA1(k, v_3);\n                    return arg0_3;\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    const v_4 = value_2(matchValue_4);\n                    const arg0_4 = MapTreeNode$2_$ctor_499A11FD(k, v_4, m, MapTreeModule_empty(), 2);\n                    return arg0_4;\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            const v = value_2(matchValue);\n            const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n            return arg0;\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            const arg0 = MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n            return arg0;\n        }\n        else {\n            const arg0_1 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n            return arg0_1;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            const arg0 = MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n            return arg0;\n        }\n        else {\n            const arg0_1 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n            return arg0_1;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2));\n                const x_2 = f(x_1, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                x_mut = x_2;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1, m_1, x_1) => {\n        if (m_1 != null) {\n            const m2 = m_1;\n            if (m2 instanceof MapTreeNode$2) {\n                const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                const x_4 = (cKeyHi < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Right(m2), x_3) : x_3;\n                return x_4;\n            }\n            else {\n                const cLoKey_1 = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                const cKeyHi_1 = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                const x_5 = ((cLoKey_1 <= 0) ? (cKeyHi_1 <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1) : x_1;\n                return x_5;\n            }\n        }\n        else {\n            return x_1;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = (new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, new List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    let list;\n    list = MapTreeModule_toList(m);\n    return Array.from(list);\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    let arg0;\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = (new List(MapTreeNode$2__get_Left(m2), new List((arg0 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), (arg0)), new List(MapTreeNode$2__get_Right(m2), rest))));\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new List(m, new List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    const en = MapTreeModule_mkIEnumerator(s);\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, en);\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        const m2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === m2) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        let str;\n        let strings;\n        strings = map_2((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$);\n        str = join(\"; \", strings);\n        return (\"map [\" + str) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_2((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_2((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_2((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            const clo1 = partialApply(2, f, [p[1]]);\n            const clo2 = clo1(p[0]);\n            clo2(m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    FSharpMap.empty = FSharpMap_$ctor(comparer, MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_2(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const activePatternResult4281 = forLoopVar;\n            res = combineHash(res, structuralHash(activePatternResult4281[0]));\n            res = combineHash(res, structuralHash(activePatternResult4281[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        const res = value_2(matchValue);\n        return res;\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_2((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    const map_1 = Dictionary_$ctor_6623D9B3(source, comparer);\n    return map_1;\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                const value = dict.set(key, [v]);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    const source = dict.entries();\n    return map_2((tupledArg) => [tupledArg[0], tupledArg[1]], source);\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const value = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(value);\n            const value_1 = dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1);\n            void value_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return dict.entries();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n"],"sourceRoot":""}