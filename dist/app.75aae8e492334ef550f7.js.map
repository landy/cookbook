{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Reflection.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/lib/long.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Long.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/FSharp.Collections.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/System.Text.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/FSharp.Core.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Map.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Double.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Set.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/Json.Converter.fs.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeInfo.fs.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/Json.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/MapUtil.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Date.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/lib/big.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Decimal.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Util.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/quote.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Encoding.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Int32.js","webpack:///./.fable-build/.fable/Fable.Parsimmon.4.1.0/Parsimmon.js","webpack:///./.fable-build/.fable/Feliz.1.20.0/Interop.fs.js","webpack:///./.fable-build/.fable/Feliz.1.20.0/React.fs.js","webpack:///./.fable-build/.fable/Feliz.1.20.0/ReactInterop.js","webpack:///./.fable-build/.fable/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./.fable-build/.fable/Feliz.Router.3.2.0/Router.fs.js","webpack:///./.fable-build/Router.js","webpack:///./.fable-build/.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js","webpack:///./.fable-build/Shared/Errors.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Choice.js","webpack:///./.fable-build/Shared/Users.js","webpack:///./.fable-build/Auth/Domain.js","webpack:///./.fable-build/Auth/Context.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js","webpack:///./.fable-build/.fable/FsToolkit.ErrorHandling.2.0.0/Result.fs.js","webpack:///./.fable-build/.fable/FsToolkit.ErrorHandling.2.0.0/AsyncResult.fs.js","webpack:///./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Types.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Async.js","webpack:///./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Extensions.fs.js","webpack:///./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Http.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/TimeSpan.js","webpack:///./.fable-build/.fable/Fable.Remoting.MsgPack.1.6.2/Read.fs.js","webpack:///./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Proxy.fs.js","webpack:///./.fable-build/Server.js","webpack:///./.fable-build/.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js","webpack:///./.fable-build/.fable/Feliz.UseDeferred.1.4.0/UseDeferred.fs.js","webpack:///./.fable-build/Pages/Login/View.js","webpack:///./.fable-build/.fable/Thoth.Json.5.0.0/Types.fs.js","webpack:///./.fable-build/.fable/Thoth.Json.5.0.0/Decode.fs.js","webpack:///./.fable-build/.fable/Thoth.Json.5.0.0/Encode.fs.js","webpack:///./.fable-build/Auth/AuthStorage.js","webpack:///./.fable-build/App/View.js","webpack:///./.fable-build/Application.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Types.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/MutableMap.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Seq.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/MutableSet.js","webpack:///./.fable-build/.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/Parser.fs.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/SimpleJson.fs.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeCheck.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/BigInt/n.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/BigInt/z.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/BigInt.js","webpack:///./.fable-build/.fable/Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/BitConverter.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/String.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/List.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Option.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Array.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/DateOffset.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/Guid.js","webpack:///./.fable-build/.fable/fable-library.3.0.0-nagareyama-rc-011/RegExp.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CaseInfo","declaringType","tag","fields","this","TypeInfo","fullname","generics","construct","parent","cases","enumCases","fullName","getHashCode","other","equals","getGenerics","fullnameHash","stringHash","genHashes","map","combineHashCodes","t1","t2","equalArraysWith","getRecordElements","k1","v1","k2","v2","class_type","record_type","undefined","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","array_type","obj_type","unit_type","string_type","bool_type","int8_type","uint8_type","int16_type","uint16_type","int32_type","uint32_type","float32_type","float64_type","info","Array","isArray","lastIndexOf","substr","gen","x","join","endsWith","getElementType","_a","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getEnumValues","kv","Error","getEnumCase","v","parseEnum","str","parseInt","isNaN","getUnionCases","getTupleElements","isTuple","getFunctionElements","isFunction","isUnion","Union","isRecord","Record","startsWith","getUnionFields","case_","getUnionCaseFields","uci","getRecordField","field","getTupleFields","makeUnion","values","expectedLength","makeRecord","reduce","obj","makeTuple","_t","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","isLong","GetHashCode","h1","Equals","CompareTo","compare","toString","radix","toJSON","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","indexOf","substring","radixToPower","size","min","add","multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","LongLib","op_Addition","op_Subtraction","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_LeftShift","op_BitwiseAnd","fromBytes","bytes","le","fromBytesLE","fromBytesBE","toBytes","hi","lo","toBytesLE","toBytesBE","getLowBits","getHighBits","getLowBitsUnsigned","getHighBitsUnsigned","fromInteger","kind","xh","parse","style","_bitsize","y","len","isValid","sign","maxValue","getMaxValue","toUpperCase","padStart","tryParse","bitsize","defValue","contents","unixEpochMillisecondsToTicks","ms","offset","ticksToUnixEpochMilliseconds","ticks","makeRangeStepFunction","step","last","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","ComparisonIdentity_Structural","comparer","Compare","x_1","structuralHash","LanguagePrimitives_FastGenericComparer","MapTreeLeaf$2","k","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","_","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","h","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","acc_mut","m_mut","acc","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue","matchValue_1","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","some","MapTreeModule_spliceOutSuccessor","patternInput","MapTreeModule_iter","f","MapTreeModule_iterOpt","f_mut","MapTreeModule_mapi","MapTreeModule_mapiOpt","l2","r2","MapTreeModule_toList","loop","m_1_mut","List","MapTreeModule_ofArray","arr","idx","forLoopVar","MapTreeModule_ofSeq","isArrayLike","fold_1","tupledArg","MapTreeModule_ofList","ie","getEnumerator","e_mut","MapTreeModule_mkFromEnumerator","Dispose","MapTreeModule_MapIterator$2","stack","started","MapTreeModule_collapseLHS","stack_mut","tail","rest","head","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","enumerator","activePatternResult4281","FSharpMap__ComputeHashCode","that","e1","e2","m1","e1c","e2c","map_2","format","iterator","toIterator","GetEnumerator","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","_arg1","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","value_2","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","MapTreeModule_remove","FSharpMap__ToArray","from","MapTreeModule_toArray","isEmpty","table","FSharpMap__Add","find","tryFind","FSharpMap__TryFind","remove","containsKey","mapping","ofList","elements","ofSeq","ofArray","toList","toArray","empty","count","test","replace","Number","FSharpRef","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t_2","t2_3","t_3","t2_4","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofSeq","SetTreeModule_mkFromEnumerator","FSharpSet","abs","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","map_1","copyOfStruct","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","Convert_insideBrowser","Function","Convert_isDefined","JSON","stringify","Convert_InternalMap","Convert_$007CMapKey$007C_$007C","Convert_generateMap","json","Convert_$007CMapEmpty$007C_$007C","activePatternResult3325","activePatternResult3320","Convert_$007CMapOne$007C_$007C","activePatternResult3324","activePatternResult3322","Convert_$007CMapNode$007C_$007C","leftMap","rightMap","key_1","value_1","Convert_flattenFable3Lists","linkedList","delay","append","empty_1","singleton_1","Convert_arrayLike","Convert_isQuoted","input","Convert_betweenQuotes","Convert_fromJsonAs","input_mut","typeInfo_mut","foundCase","foundCase_2","testExpr","values_8","value_38","input_1","typeInfo","value_3","value_4","value_5","value_6","value_7","value_8","value_9","value_10","value_11","value_12","value_13","value_14","value_15","value_16","value_17","value_18","getlElemType","value_19","getElemType","value_20","getElemType_1","value_21","genericJson","value_22","value_23","value_24","value_25","value_26","value_27","value_28","value_29","getTypes","jsonValue_5","optionalTypeDelayed_5","equalsSafe","Json","parse_1","Decimal","parse_2","underlyingType","originalType","outArg","arg20","name_2","toFail","printf","outArg_1","tryParse_1","v_1","arg20_1","arg20_2","elemType","WorkerGlobalScope","self","fromBase64String","Buffer","SimpleJson_toPlainObject","parse_3","fromInt32","parse_4","parse_5","DateOffset","caseName","values_1","caseName_1","patternInput_2","unionType","activePatternResult3354","Convert_$007CNonArray$007C_$007C","foundCase_3","tryFind_1","case$","CaseName","expectedCases","case$_1","toText","arg20_4","CaseTypes","foundCase_1","Info","Convert_optional","foundCase_4","arg30_1","arg20_5","zip","caseInfo","caseType","_arg2","case$_2","equalsWith","compareSafe","typeInfo_1","expectedCases_1","case$_3","arg20_7","forAll","Convert_isRecord","Convert_unionOfRecords","foundDiscriminatorKey","tryFind_2","keyword","discriminatorValueJson","discriminatorValue","foundUnionCase","tryFind_3","case$_4","case$_5","arg10_12","arg10_13","arg10_11","unexpectedJson","expectedType","caseIndex","fieldValues","foundCase_5","mapIndexed","index","value_35","arg20_8","arg10_10","SimpleJson_toString","pattern_matching_result_5","value_36","value_37","dict","caseName_4","getTypes_2","parse_6","pattern_matching_result_6","get$","_arg3","choose","toInt64","concat","getBytesInt32","patternInput_3","caseTypes","_arg4","case$_6","Convert_removeQuotes","expectedCases_2","case$_7","arg20_11","pattern_matching_result_7","caseName_5","getTypes_3","serializedRecord","caseValue","getTypes_4","elementTypeDelayed","values_4","elementTypeDelayed_1","values_5","elementTypeDelayed_2","elementTypeDelayed_3","values_6","elementTypeDelayed_4","values_7","array_9","tupleTypesDelayed","dict_1","getTypes_5","getTypes_6","tuples","getTypes_7","tuples_1","dict_2","getTypes_8","getType","items","getTypes_9","getType_1","patternInput_4","caseTypes_1","_arg5","case$_8","expectedCases_3","case$_9","arg20_12","SimpleJson_parse","pattern_matching_result_8","caseName_6","caseName_8","values_3","otherwise_6","patternInput_5","cases_1","_arg6","case$_10","expectedCases_4","case$_11","arg20_13","_arg7","case$_12","types","foundCaseName","caseInfo_4","tupledArg_1","expectedCases_5","_arg1_1","unexpectedJson_1","expectedType_1","elementType","map_3","value_42","elementType_1","value_44","elementType_2","value_46","elementType_3","ofList_1","value_48","elementType_4","value_50","tupledArg_2","patternInput_6","recordType","_arg3_1","fieldType","FieldType","fieldName","FieldName","_arg8","tupledArg_3","dictKeys","recordFields","arg10_27","arg","arg10_30","_arg2_1","name_1","arg30_6","patternInput_7","keyType","pairs","collect","keyValuePair","a","patternInput_8","keyType_1","pairs_1","keyValuePair_1","output","Dictionary","safeHash","addToDict","patternInput_9","keyType_2","pairs_2","tupledArg_4","output_1","enumerator_1","forLoopVar_1","elemType_1","hashset","HashSet","enumerator_2","addToSet","pattern_matching_result_9","tree_1","patternInput_10","valueType_5","keyType_3","matchValue_6","inputJson","pairs_3","tupledArg_5","key_6","SimpleJson_parseNative","Convert_flattenMap","singleton","pattern_matching_result_10","tree_3","Convert_flatteFable3Map","pairs_4","tupledArg_6","key_7","isPrimitive","enumUnion","arg20_17","arg10_33","arg20_18","arg10_34","Convert_quoteText","quote","Convert_serialize","value_mut","copyOfStruct_1","copyOfStruct_2","int32ToString","toString_1","toString_2","toString_3","PropertyInfo","map_4","element","element_1","element_2","element_3","element_4","elementType_5","element_5","value_78","patternInput_1","usedCase","serializedFields_1","serializedValues","serializedKey","serializedValue","serializedValues_1","pair","serializedKey_1","serializedValue_1","tupleTypes","index_1","element_6","SimpleJson_stringify","RecordField","UnionCase","Json$reflection","tryGetValue","defaultValue","has","set","getItemFromDict","offsetRegex","dateOffsetToString","isMinus","hours","minutes","padWithZeros","dateToHalfUTCString","date","half","toISOString","dateToStringWithCustomFormat","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","Date","getTime","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","getTimezoneOffset","dateToISOString","_provider","DateTime","fromTicks","dateOffset","minValue","parseRaw","trim","exec","baseDate","timeInSeconds","timeParts","split","parseFloat","offsetParts","offsetInMinutes","detectUTC","_err","year","month","day","dateValue","UTC","setFullYear","daysInMonth","isLeapYear","toUniversalTime","compareDates","P","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","charAt","search","round","Big","DP","RM","dp","rm","more","xc","unshift","pop","id","constructor","z","NE","PE","isneg","yc","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","one","sqrt","toExponential","toFixed","toPrecision","sd","valueOf","_Big_","findIndex","normalize","version","get_Zero","isIterable","ArrayBuffer","isView","isHashable","sameConstructor","getPrototypeOf","Lazy","factory","isValueCreated","createdValue","padLeftAndRightWithZeros","lengthLeft","lengthRight","date1","int16ToString","ObjectRef","idMap","WeakMap","charCodeAt","numberHash","hashes","h2","physicalHash","arrayHash","dateHash","equalArrays","isEquatable","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","isComparable","compareObjects","createObj","col","clear","uncurry","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","mapCurriedArgs","fn","mappings","mapArg","expectedArity","actualArity","inputText","escapable","meta","lastIndex","UTF16LE","buffer","byteOffset","byteLength","view","DataView","code","setUint16","utf16le_encode","array","subarray","TextDecoder","decode","chars","getUint16","String","fromCharCode","utf16le_decode","UTF8","TextEncoder","encode","pos","buf","nextCode","utf8_encode","decodeUtf8","i1","fromCodePoint","utf8_decode","_UTF8","get_UTF8","NumberStyles","getRange","prefix","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","validResponse","umin","umax","op_UnaryNegation_Int32","Parsimmon","action","seed","forEach","elem","bufferExists","isParser","isBuffer","makeSuccess","status","furthest","expected","makeFailure","mergeReplies","xs","ys","union","makeLineColumnIndex","line","column","lines","assertParser","assertNumber","assertRegexp","RegExp","flags","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkSize","chunks","chunkIndex","toChunks","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","re","anchoredRegexp","source","seq","parsers","arguments","numParsers","accum","seqMap","mapper","results","alt","fail","sepBy1","parser","separator","then","many","rs","regexp","group","anchored","fullMatch","groupMatch","succeed","lookahead","predicate","oneOf","ch","desc","noneOf","takeWhile","lazy","skip","eof","msg","err","type","or","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","next","tieWith","assertArray","tie","prevResult","atMost","atLeast","init","contramap","promap","g","mark","start","end","node","sepBy","notFollowedBy","text","reply","fallback","ap","chain","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","reactApi","react","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","defaultArg","iterate","displayName","props","createElement","Internal_propsWithKey","React_createDisposable_3A5B6456","dispose","useReact_useEffect_Z5ECA432F","effect","useReact_useEffect_Z5234A374","dependencies","useReact_useEffectOnce_Z5ECA432F","useReact_useEffect_Z101E1A95","useReact_useCallback_93353E","callbackFunction","useCallback","useReact_useRef_1505","initialValue","useRef","useReact_useMemo_CF4EA67","createFunction","useMemo","useReact_useContext_37FA55CF","contextObject","useContext","useReact_useCallbackRef_7C4B0DD6","callback","lastRenderCallbackRef","callbackRef","current","useState","useFeliz_React__React_useState_Static_1505","initial","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","options","capture","once","Impl_createRemoveOptions","RouterModule_String_$007CPrefix$007C","RouterModule_String_$007CSuffix$007C","suffix","RouterModule_encodeParts","routeMode","activePatternResult11624","activePatternResult11625","activePatternResult11626","path_2","activePatternResult11629","RouterModule_normalizeRoute","part","encodeURIComponent","RouterModule_nav","history","pushState","replaceState","ev","document","createEvent","initEvent","dispatchEvent","RouterModule_urlSegments","path","segment","isNullOrWhiteSpace","segment_1","trimEnd","decodeURIComponent","query","RouterModule_router","onChange","urlChanged","onUrlChanged","location","pathname","hash","RouterModule_onUrlChange","hashMode","navigator","userAgent","action_1","arg00","addOptions","removeOptions","action_3","addOptions_1","removeOptions_1","fn_1","arg_1","eventType_2","action_4","addOptions_2","removeOptions_2","fn_2","arg_2","application","Page","basicMapping","PageModule_parseFromUrlSegments","tuple","PageModule_toUrlSegments","Router_goToUrl","preventDefault","currentTarget","attributes","href","Helpers_combineClasses","cn","fold","classes","cons","Helpers_extractClasses","DatabaseError","UserError","AuthenticationError","ApplicationError","ApplicationError$reflection","FSharpResult$2","Result_Map","Result_Bind","binder","Request_Login","Username","Password","Request_AddUser","Name","Response_Token","Token","ExpiresUtc","Response_Token$reflection","Response_UserSession","RefreshToken","Response_UserSession$reflection","Response_UserRow","Response_UserRow$reflection","Route_builder","UsersService","Login","GetUsers","SaveUser","AuthContext","CurrentUser","SetUser","Logout","authContext","AuthContext_1","createContext","AuthContextProps","contextValue","child","Provider","React_contextProvider_34D9BBBD","ctx","children","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","delete","state","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","iter","cur","While","done","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","onOk","teeIf","teeErrorIf","tee","asyncResult","tee_1","teeError","teeError_1","HttpMethod","RequestBody","SerializationType","HttpRequest","Url","Headers","WithCredentials","HttpResponse","StatusCode","ResponseBody","RemoteBuilderOptions","CustomHeaders","BaseUrl","Authorization","RouteBuilder","ResponseSerialization","ProxyRequestException","response","errorMsg","reponseText","Exception","ProxyRequestException_$ctor_76BC5104","emptyContinuation","_x","createCancellationToken","token","cancel","defaultCancellationToken","fromContinuations","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","Async","InternalUtilities_toUInt8Array","defaultRequestConfig","HttpMethod_1","url","post","withHeaders","headers","req","withBody","send","xhr","XMLHttpRequest","open","setRequestHeader","withCredentials","onreadystatechange","readyState","responseText","sendAndReadBinary","responseType","signedRound","days","ts","seconds","milliseconds","firstDot","firstColon","interpretStringAs","typ","Reader","Reader__ReadByte","Reader__ReadRawBin_Z524259A4","Reader__ReadString_Z524259A4","getString","Reader__ReadUInt16","Reader__readInt","toUInt16","Reader__ReadUInt32","toUInt32","Reader__ReadMap_412036CA","arg10","fill","Reader__Read_24524716","equals_1","Reader__ReadArray_412036CA","prop","fieldTypes","x_2","rangeNumber","Reader__ReadRawArray_412036CA","arg00_1","Reader__ReadSet_412036CA","Reader__ReadBin_412036CA","arrayToGuid","fromByteArray","fromTicks_1","fromTicks_2","typ_1","n_2","typ_10","n_20","toSingle","arg20_10","typ_11","n_22","toDouble","Reader__ReadFloat64","typ_6","n_12","Reader__ReadUInt8","arg20_6","typ_7","n_14","typ_8","n_16","typ_9","n_18","toUInt64","Reader__ReadUInt64","arg20_9","typ_5","n_10","Reader__ReadInt8","typ_4","n_8","toInt16","Reader__ReadInt16","typ_3","n_6","toInt32","Reader__ReadInt32","arg20_3","typ_2","n_4","Reader__ReadInt64","arg30","isLittleEndian","Blob_readBlobAsText","blob","reader","FileReader","onload","readAsText","Proxy_proxyFetch","typeName","func","funcArgs","binaryInput","argumentCount","returnTypeAsync","readAsBinary","Proxy_isAsyncOfByteArray","route","baseUrl","Proxy_combineRouteWithBaseUrl","funcNeedParameters","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","inputArguments","take","inputArgumentTypes","contentType","requestBody","statusCode_1","response_3","Blob","response_4","ReturnFrom","response_5","response_6","statusCode","typ_mut","getReturnType","response_1","response_2","builder","clo1","options_1","usersService","resolver","resolvedType","ResolveType","schemaType","createTypeInfo","pick","delegateArg0","delegateArg1","delegateArg0_1","delegateArg1_1","delegateArg2","delegateArg0_2","delegateArg1_2","delegateArg2_1","delegateArg3","delegateArg0_3","delegateArg1_3","delegateArg2_2","delegateArg3_1","delegateArg4","delegateArg0_4","delegateArg1_4","delegateArg2_3","delegateArg3_2","delegateArg4_1","delegateArg5","delegateArg0_5","delegateArg1_5","delegateArg2_4","delegateArg3_3","delegateArg4_2","delegateArg5_1","delegateArg6","delegateArg0_6","delegateArg1_6","delegateArg2_5","delegateArg3_4","delegateArg4_3","delegateArg5_2","delegateArg6_1","delegateArg7","arg10_1","Remoting_buildProxy_Z15584635","RemotingModule_withBaseUrl","config","Deferred$1","Render","renderProps","props_21","props_9","elms","elms_1","props_18","props_16","operation","setDeferred","handleNewUser","username","password","handleLogin","startLogin","TryWith","Zero","props_23","Children","err_1","props_1","className","onSubmit","target","ev_1","singleton_2","ErrorReason","CaseStrategy","Util_Cache$1","Util_Cache$1_$ctor","Util_Casing_lowerFirst","toLowerCase","Util_Casing_convert","caseStrategy","genericMsg","newLine","errorToString","reason_1","decoder","SyntaxError","message","sbyte","path_1","isFinite","tryParse_3","byte","int16","uint16","int","uint32","requestedIndex","currentPath","vArray","list","tokens","acc_1","andThen","cb","ctor","d1","tuple2","decoder1","decoder2","decoder_3","path_3","decoder_2","decoder_1","arg10$0040","arg20$0040","toMap","ofSeq_1","mixedArray","decoders","foldBack2","extra","name_3","uci_1","makeUnion_1","fi","autoDecoder","autoDecodeRecordsAndUnions","isOptional","decoderRef","extra_1","decoderInfos","foldBack","autoObject","decoder_15","enumType","enumValue","contains","path_4","path_5","enumValue_1","path_6","t_4","path_7","enumValue_2","path_8","t_5","path_9","enumValue_3","path_10","t_6","path_11","enumValue_4","path_12","t_7","path_13","enumValue_5","clo2","t_8","path_14","fullname_1","decoder_13","path_15","option","decoder_14","path_16","keyDecoder","valueDecoder","decoders_1","path_17","fold_2","autoObject2","path_18","path_19","decoders_1_mut","errors_mut","errors","append_1","runner","path_20","decoder_16","path_21","matchValue_7","ofSeq_2","path_22","value_31","path_23","value_32","path_24","value_33","path_25","value_34","path_26","path_27","tryParse_6","datetime","path_28","minValue_1","tryParse_7","datetimeOffset","path_29","tryParse_8","timespan","path_30","value_39","tryParse_2","guid","_arg1_6","makeExtra","Coders","Auto_generateDecoder_7848D058","caseStrategy_1","toString_4","unit","space","autoEncodeRecordsAndUnions","skipNullField","encoder","encoderRef","setters","targetKey","encode_1","autoEncoder","source_1","target_1","target_2","encode_2","encoders","encoder_2","defaultArgWith","Value","encoder_3","valueEncoder","activePatternResult15839","keyEncoder","clo4","activePatternResult15843","Auto_toString_5A41365E","skipNullField_1","Auto_generateEncoder_Z127D9D79","tryGetSession","localStorage","getItem","NavbarMenuItem","NavbarMenuItemProps","closeBurgerMenu","label","page","currentUrl","props_3","NavbarLink","NavbarLinkProps","TopNavBar","TopNavBarProps","elms_3","props_5","props_12","setIsActive","isActive","closeMenu","props_15","e_1","elms_2","MainContent","s_1","auth","props_6","LoginContent","props_2","MainView","MainViewProps","GetTemplate","GetTemplateProps","MainApplication","setUser","u","user","setItem","render","getElementById","seqToString","callStack","entries","compareList","withParens","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","contentsOrGetter","setter","hashMap","Dictionary__Add_5BDDA1","item","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","iterateIndexed","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","Dictionary_$ctor_6623D9B3","sumBy","GetZero","Add","Enumerator","en","hasNext","__failIfNone","Seq","makeSeq","isArrayOrBufferView","unfold","firstDone","iters","innerIter","hasFinished","cur1","cur2","iter1","iter2","exists","fold2","ar1","ar2","tryHead","pairwise","hd","tl","scan","first","scanBack","adder","tryPick","fst","transpose","every","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","HashSet__get_Count","HashSet__Remove_2B595","HashSet_$ctor_Z6150332D","HashSet__TryFindIndex_2B595","Parsimmon_many","Parsimmon_ofLazy","Parsimmon_digit","Parsimmon_seperateBy","content","others","Parsimmon_between","skipped","Parsimmon_map","Parsimmon_choose","ps","Parsimmon_satisfy","Parsimmon_str","Parsimmon_oneOf","Parsimmon_optionalWhitespace","Parsimmon_atLeastOneOrMany","Parsimmon_atLeast","Parsimmon_stringReturn","Parsimmon_seq2","Parsimmon_concat","strings","Parsimmon_seq3","otherParser","escape","anyCharSnippet","jint","negJint","jfloat","digitsLeft","negativeJFloat","jnumber","jbool","jnull","stringLiteral","jstring","withWhitespace","jvalue","comma","json$004099$002D1","jsonParser","InteropUtil_isBigInt","InteropUtil_isObjectLiteral","SimpleJson_tryParse","Parsimmon_parse","arg10_3","jsObject","jsonValue","toDecimal","SimpleJson_parseNative$0027","activePatternResult3247","$007CNativeString$007C_$007C","activePatternResult3246","$007CNativeNumber$007C_$007C","number","activePatternResult3245","$007CNativeBool$007C_$007C","$007CNull$007C_$007C","activePatternResult3243","$007CNativeArray$007C_$007C","activePatternResult3242","$007CNativeObject$007C_$007C","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","initialize","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_maxInt","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_divbase","BigNatModule_modbase","BigNatModule_createN","BigNatModule_normN","na_mut","i_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_add","rbound","c_mut","p_mut","q_mut","r_mut","i_1","z_1","i_2","BigNatModule_addP","BigNatModule_sub","BigNatModule_subP","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_gte","BigNatModule_mulSchoolBookCarry","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","ad","a_1","f_1","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","copy","BigNatModule_copyN","finished","BigNatModule_two","BigNatModule_toFloat","evalFloat","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","BigNatModule_ofString","isNullOrEmpty","ten","build","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_create_Z2BE94A1","BigInteger_posn_Z67CCE57D","BigInteger_negn_Z67CCE57D","BigInteger_$ctor_Z524259A4","BigInteger_$ctor_Z524259C1","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","BigInteger_op_UnaryNegation_Z665282C2","BigInteger_subnn_6A57060","nx","ny","BigInteger_addnn_6A57060","BigInteger__get_IsZero","BigInteger__get_IsOne","BigInteger_op_Addition_56F059C0","BigInteger_op_Multiply_56F059C0","BigInteger_op_LeftShift_62E082A2","BigInteger_Pow_62E082A2","yval","x_1_mut","ndiv2","power","BigNatModule_pow","BigInteger__get_ToDouble","BigInteger_Parse_Z721C83C5","text_1","fromInt64","BigInteger__get_ToDecimal","flipTwosComplement","currByte","lowBitFound","isPositive","accumUInt32_mut","currIndex_mut","bytesRemaining_mut","lowBitFound_mut","accumUInt32","currIndex","bytesRemaining","bytesToProcess","$007CFuncType$007C_$007C","flattenFuncTypes","typeDef","lazyToDelayed","unitVar0","_createTypeInfo","l_3","l_4","l_5","l_6","l_7","l_8","l_9","l_10","l_11","l_12","l_13","l_14","l_15","l_16","l_17","activePatternResult3162","primType","$007CPrimitiveType$007C_$007C","activePatternResult3161","activePatternResult3160","l_1","activePatternResult3159","$007CUnionType$007C_$007C","l_2","activePatternResult3158","$007CEnumType$007C_$007C","activePatternResult3157","$007CListType$007C_$007C","activePatternResult3156","$007CResizeArrayType$007C_$007C","elemType_2","activePatternResult3155","$007CHashSetType$007C_$007C","elemType_3","activePatternResult3154","$007CArrayType$007C_$007C","elemType_4","activePatternResult3153","$007CTupleType$007C_$007C","types_1","activePatternResult3152","$007COptionType$007C_$007C","elemType_5","activePatternResult3151","$007CNullable$007C_$007C","elemType_6","activePatternResult3150","$007CSetType$007C_$007C","elemType_7","activePatternResult3149","genArgs","$007CMapType$007C_$007C","valueType","activePatternResult3148","$007CDictionaryType$007C_$007C","valueType_1","activePatternResult3147","$007CSeqType$007C_$007C","elemType_8","activePatternResult3146","$007CAsyncType$007C_$007C","elemType_9","activePatternResult3145","$007CPromiseType$007C_$007C","elemType_10","typeInfoCache","ti_1","setInt32","getInt16","getInt32","getUint32","getFloat32","getFloat64","fsFormatRegExp","formatRegExp","isNumeric","isLessThan","_Long","toHex","cont","createPrinter","strCopy","formatOnce","continuePrint","formatReplacement","padLength","precision","dateToString","zeroFlag","minusFlag","padLeft","str2","pattern","intPart","decimalPart","delimiter","notSupported","b64Encoded","binary","atob","isRight","splitters","removeEmpty","reg","startIndex","tryLast","state_mut","xs_mut","List_1","lists","collect_1","tail_1","ofArrayWithTail","tryPickIndexed","tryPickIndexedAux","tryFindIndexed","findIndexed","skipWhile","predicate_mut","t_1","Some","opt","defThunk","indexNotFound","differentLengths","targetIndex","arrays","arrays_1","totalIdx","totalLength","idx_1","arr_2","initializer","chooser","findIndexBack","tryFindIndexBack","folder","permute","checkFlags","array1","array2","chunkBySize","start_1","length1","length2","reduceRight","foldBackIndexed2","splitInto","chunks_1","min_1","minChunkSize","chunksWithExtraItem","DateTimeOffset","offsetMatch","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","_byteToHex","_hexToByte","_convertMapsInitialized","initConvertMaps","matches","global","replacement","limit","replacer","tmp","_s","sub1","_matches","sub2"],"mappings":"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","file":"app.75aae8e492334ef550f7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([229,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions(structuralHash, equals);\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions(physicalHash, (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction(compare);\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { sumBy } from \"./Seq.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    });\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        const value = StringBuilder__Append_Z721C83C5(builder, s);\n        void value;\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n        void undefined;\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { value as value_2, some } from \"./Option.js\";\nimport { Record, List } from \"./Types.js\";\nimport { fold as fold_1 } from \"./List.js\";\nimport { structuralHash, compare, equals, isArrayLike } from \"./Util.js\";\nimport { empty as empty_1, tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, toIterator, map as map_2, unfold, getEnumerator } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = t2;\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = MapTreeNode$2__get_Left(matchValue);\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = t1;\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = MapTreeNode$2__get_Right(matchValue_2);\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = (new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, new List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    return Array.from(MapTreeModule_toList(m));\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = (new List(MapTreeNode$2__get_Left(m2), new List(MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), new List(MapTreeNode$2__get_Right(m2), rest))));\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new List(m, new List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_2((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_2((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_2((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_2((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_2(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult4281 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = combineHash(res, structuralHash(activePatternResult4281[0]));\n            res = combineHash(res, structuralHash(activePatternResult4281[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_2(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_2((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    return Dictionary_$ctor_6623D9B3(source, comparer);\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                const value = dict.set(key, [v]);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return map_2((tupledArg) => [tupledArg[0], tupledArg[1]], dict.entries());\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            const value_1 = dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1);\n            void value_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return dict.entries();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { value as value_1, some } from \"./Option.js\";\nimport { toString, List, Record } from \"./Types.js\";\nimport { singleton as singleton_1, collect, empty as empty_1, delay, fold as fold_2, reduce, iterate as iterate_1, toIterator, map as map_1, getEnumerator } from \"./Seq.js\";\nimport { fold as fold_1 } from \"./Array.js\";\nimport { join } from \"./String.js\";\nimport { structuralHash } from \"./Util.js\";\nimport { HashSet__Add_2B595, HashSet_$ctor_Z6150332D } from \"./MutableSet.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = t2;\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = SetTreeNode$1__get_Left(matchValue);\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = t1;\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = SetTreeNode$1__get_Right(matchValue_2);\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const x = stack.head;\n            const rest = stack.tail;\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = (new List(SetTreeNode$1__get_Left(x2), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), new List(SetTreeNode$1__get_Right(x2), rest))));\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(new List(s, new List())), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail == null) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (matchValue.head != null) {\n            const t = matchValue.head;\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const t = matchValue.head;\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[1].head != null) {\n                    if (matchValue[0].head != null) {\n                        const x1_3 = matchValue[0].head;\n                        const x2_3 = matchValue[1].head;\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                            l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (matchValue_3[0].tail != null) {\n                                            if (matchValue_3[0].head != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = matchValue_3[0].tail;\n                                                x1_4 = matchValue_3[0].head;\n                                            }\n                                            else if (matchValue_3[1].tail != null) {\n                                                if (matchValue_3[1].head != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = matchValue_3[1].tail;\n                                                    x2_4 = matchValue_3[1].head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (matchValue_3[1].tail != null) {\n                                            if (matchValue_3[1].head != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = matchValue_3[1].tail;\n                                                x2_4 = matchValue_3[1].head;\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4)), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                        l2_mut = (new List(SetTreeModule_empty(), matchValue[1].tail));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (matchValue_4[0].tail != null) {\n                                    if (matchValue_4[0].head != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = matchValue_4[0].tail;\n                                        x1_5 = matchValue_4[0].head;\n                                    }\n                                    else if (matchValue_4[1].tail != null) {\n                                        if (matchValue_4[1].head != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = matchValue_4[1].tail;\n                                            x2_5 = matchValue_4[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (matchValue_4[1].tail != null) {\n                                    if (matchValue_4[1].head != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = matchValue_4[1].tail;\n                                        x2_5 = matchValue_4[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5)), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5)), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), matchValue[0].tail));\n                                    l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (matchValue_5[0].tail != null) {\n                                    if (matchValue_5[0].head != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = matchValue_5[0].tail;\n                                        x1_6 = matchValue_5[0].head;\n                                    }\n                                    else if (matchValue_5[1].tail != null) {\n                                        if (matchValue_5[1].head != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = matchValue_5[1].tail;\n                                            x2_6 = matchValue_5[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (matchValue_5[1].tail != null) {\n                                    if (matchValue_5[1].head != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = matchValue_5[1].tail;\n                                        x2_6 = matchValue_5[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6)), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = matchValue[0].tail;\n                                l2_mut = matchValue[1].tail;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = matchValue[1].head;\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (matchValue_1[0].tail != null) {\n                            if (matchValue_1[0].head != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = matchValue_1[0].tail;\n                                x1 = matchValue_1[0].head;\n                            }\n                            else if (matchValue_1[1].tail != null) {\n                                if (matchValue_1[1].head != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = matchValue_1[1].tail;\n                                    x2_1 = matchValue_1[1].head;\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (matchValue_1[1].tail != null) {\n                            if (matchValue_1[1].head != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = matchValue_1[1].tail;\n                                x2_1 = matchValue_1[1].head;\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1)), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[0].head != null) {\n                    const x1_1 = matchValue[0].head;\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (matchValue_2[0].tail != null) {\n                        if (matchValue_2[0].head != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = matchValue_2[0].tail;\n                            x1_2 = matchValue_2[0].head;\n                        }\n                        else if (matchValue_2[1].tail != null) {\n                            if (matchValue_2[1].head != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = matchValue_2[1].tail;\n                                x2_2 = matchValue_2[1].head;\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (matchValue_2[1].tail != null) {\n                        if (matchValue_2[1].head != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = matchValue_2[1].tail;\n                            x2_2 = matchValue_2[1].head;\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeNode$1__get_Left(x1_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeNode$1__get_Left(x2_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2)), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = matchValue[0].tail;\n                    l2_mut = matchValue[1].tail;\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, new List(t1, new List()), new List(t2, new List())) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = (new List(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, new List());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = (j + 1);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = new Array(n);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    const ie = getEnumerator(c);\n    try {\n        return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    }\n    finally {\n        ie.Dispose();\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce(FSharpSet_Intersection, sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (((res << 1) + structuralHash(x_1)) + 631);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_2(FSharpSet_op_Addition, FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function createMutable(source, comparer) {\n    return HashSet_$ctor_Z6150332D(source, comparer);\n}\n\nexport function distinct(xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, x) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, projection(x)) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function unionWith(s1, s2) {\n    return fold_2((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                const value = s1.delete(x);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const value = s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            void value;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","import { toArray, isEmpty, find, count, containsKey, toList, tryFind, remove, ofList } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { map as map_3, choose, tryFind as tryFind_2, length, empty, ofSeq, singleton, ofArray } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { FSharpRef, Union } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { getUnionFields, getRecordField, makeRecord, fullName, makeUnion, name as name_2, union_type, string_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { Json, Json$reflection } from \"./Json.fs.js\";\nimport { map as map_4, getEnumerator, collect, tryFind as tryFind_3, forAll, empty as empty_1, singleton as singleton_1, append, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { value as value_78, some, map as map_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { toText, join, fromBase64String, printf, toFail, substring, endsWith } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { parse } from \"../fable-library.3.0.0-nagareyama-rc-011/Double.js\";\nimport { tryParse, parse as parse_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Int32.js\";\nimport { toString as toString_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport Decimal from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport { toString, fromInteger, toNumber, tryParse as tryParse_1, fromInt, parse as parse_2, fromNumber } from \"../fable-library.3.0.0-nagareyama-rc-011/Long.js\";\nimport { SimpleJson_stringify, SimpleJson_parseNative, SimpleJson_parse, SimpleJson_toString, SimpleJson_toPlainObject } from \"./SimpleJson.fs.js\";\nimport { toString as toString_1, fromInt32, parse as parse_3 } from \"../fable-library.3.0.0-nagareyama-rc-011/BigInt.js\";\nimport { toString as toString_3, parse as parse_4 } from \"../fable-library.3.0.0-nagareyama-rc-011/Date.js\";\nimport { parse as parse_5 } from \"../fable-library.3.0.0-nagareyama-rc-011/DateOffset.js\";\nimport DateOffset from \"../fable-library.3.0.0-nagareyama-rc-011/DateOffset.js\";\nimport { concat, mapIndexed, equalsWith, zip, map as map_2, tryFind as tryFind_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { int32ToString, structuralHash, equals, safeHash, equalsSafe, compare, compareSafe } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { parse as parse_6 } from \"../fable-library.3.0.0-nagareyama-rc-011/Guid.js\";\nimport { getBytesInt32, toInt64 } from \"../fable-library.3.0.0-nagareyama-rc-011/BitConverter.js\";\nimport { ofList as ofList_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Set.js\";\nimport { TypeInfo } from \"./TypeInfo.fs.js\";\nimport { Dictionary } from \"../fable-library.3.0.0-nagareyama-rc-011/MutableMap.js\";\nimport { addToSet, addToDict } from \"../fable-library.3.0.0-nagareyama-rc-011/MapUtil.js\";\nimport { HashSet } from \"../fable-library.3.0.0-nagareyama-rc-011/MutableSet.js\";\nimport { enumUnion, isPrimitive } from \"./TypeInfo.Converter.fs.js\";\nimport quote from \"./quote.js\";\n\nexport const Convert_insideBrowser = (new Function(\"try {return this===window;}catch(e){ return false;}\"))();\n\nfunction Convert_isDefined(value) {\n    return !((value === undefined));\n}\n\nexport function Convert_usingFable3() {\n    const map = JSON.parse(JSON.stringify(ofList(ofArray([[1, 1], [2, 2]]))));\n    const tree = map[\"tree\"];\n    if (Convert_isDefined(tree[\"k\"]) ? Convert_isDefined(tree[\"v\"]) : false) {\n        return Convert_isDefined(tree[\"h\"]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport const Convert_isUsingFable3 = Convert_usingFable3();\n\nexport class Convert_InternalMap extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"MapEmpty\", \"MapOne\", \"MapNode\"];\n    }\n}\n\nexport function Convert_InternalMap$reflection() {\n    return union_type(\"Fable.SimpleJson.Convert.InternalMap\", [], Convert_InternalMap, () => [[], [[\"Item1\", string_type], [\"Item2\", Json$reflection()]], [[\"Item1\", string_type], [\"Item2\", Json$reflection()], [\"Item3\", Convert_InternalMap$reflection()], [\"Item4\", Convert_InternalMap$reflection()]]]);\n}\n\nexport function Convert_flattenMap(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return singleton([_arg1.fields[0], _arg1.fields[1]]);\n        }\n        case 2: {\n            return ofSeq(delay(() => append(Convert_flattenMap(_arg1.fields[2]), delay(() => append(Convert_flattenMap(_arg1.fields[3]), delay(() => singleton_1([_arg1.fields[0], _arg1.fields[1]])))))));\n        }\n        default: {\n            return empty();\n        }\n    }\n}\n\nexport function Convert_$007CKeyValue$007C_$007C(key, map) {\n    return map_1((value) => [key, value, remove(key, map)], tryFind(key, map));\n}\n\nexport function Convert_$007CNonArray$007C_$007C(_arg1) {\n    if (_arg1.tag === 4) {\n        return void 0;\n    }\n    else {\n        return _arg1;\n    }\n}\n\nexport function Convert_$007CMapEmpty$007C_$007C(json) {\n    let pattern_matching_result;\n    if (json.tag === 1) {\n        if (json.fields[0] === \"MapEmpty\") {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return json;\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapKey$007C_$007C(_arg1) {\n    switch (_arg1.tag) {\n        case 0: {\n            return _arg1.fields[0].toString();\n        }\n        case 1: {\n            return _arg1.fields[0];\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapOne$007C_$007C(_arg1) {\n    let pattern_matching_result, key, value;\n    if (_arg1.tag === 4) {\n        if (_arg1.fields[0].tail != null) {\n            if (_arg1.fields[0].head.tag === 1) {\n                if (_arg1.fields[0].head.fields[0] === \"MapOne\") {\n                    if (_arg1.fields[0].tail.tail != null) {\n                        const activePatternResult3320 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\n                        if (activePatternResult3320 != null) {\n                            if (_arg1.fields[0].tail.tail.tail != null) {\n                                if (_arg1.fields[0].tail.tail.tail.tail == null) {\n                                    pattern_matching_result = 0;\n                                    key = activePatternResult3320;\n                                    value = _arg1.fields[0].tail.tail.head;\n                                }\n                                else {\n                                    pattern_matching_result = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [key, value];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_$007CMapNode$007C_$007C(_arg1) {\n    let pattern_matching_result, key, left, right, value;\n    if (_arg1.tag === 4) {\n        if (_arg1.fields[0].tail != null) {\n            if (_arg1.fields[0].head.tag === 1) {\n                if (_arg1.fields[0].head.fields[0] === \"MapNode\") {\n                    if (_arg1.fields[0].tail.tail != null) {\n                        const activePatternResult3322 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\n                        if (activePatternResult3322 != null) {\n                            if (_arg1.fields[0].tail.tail.tail != null) {\n                                if (_arg1.fields[0].tail.tail.tail.tail != null) {\n                                    if (_arg1.fields[0].tail.tail.tail.tail.tail != null) {\n                                        if (_arg1.fields[0].tail.tail.tail.tail.tail.tail != null) {\n                                            if (_arg1.fields[0].tail.tail.tail.tail.tail.head.tag === 0) {\n                                                if (_arg1.fields[0].tail.tail.tail.tail.tail.tail.tail == null) {\n                                                    pattern_matching_result = 0;\n                                                    key = activePatternResult3322;\n                                                    left = _arg1.fields[0].tail.tail.tail.head;\n                                                    right = _arg1.fields[0].tail.tail.tail.tail.head;\n                                                    value = _arg1.fields[0].tail.tail.head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [key, value, left, right];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Convert_generateMap(json) {\n    if (Convert_$007CMapEmpty$007C_$007C(json) != null) {\n        return new Convert_InternalMap(0);\n    }\n    else {\n        const activePatternResult3325 = Convert_$007CMapOne$007C_$007C(json);\n        if (activePatternResult3325 != null) {\n            const key = activePatternResult3325[0];\n            const value = activePatternResult3325[1];\n            return new Convert_InternalMap(1, key, value);\n        }\n        else {\n            const activePatternResult3324 = Convert_$007CMapNode$007C_$007C(json);\n            if (activePatternResult3324 != null) {\n                const key_1 = activePatternResult3324[0];\n                const left = activePatternResult3324[2];\n                const right = activePatternResult3324[3];\n                const value_1 = activePatternResult3324[1];\n                const matchValue = [Convert_generateMap(left), Convert_generateMap(right)];\n                let pattern_matching_result, leftMap, rightMap;\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        pattern_matching_result = 0;\n                        leftMap = matchValue[0];\n                        rightMap = matchValue[1];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return new Convert_InternalMap(2, key_1, value_1, leftMap, rightMap);\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            }\n            else {\n                return void 0;\n            }\n        }\n    }\n}\n\nexport function Convert_flatteFable3Map(tree) {\n    return ofSeq(delay(() => {\n        let matchValue, key, value;\n        return append((matchValue = [tryFind(\"k\", tree), tryFind(\"v\", tree)], (matchValue[0] != null) ? ((matchValue[0].tag === 1) ? ((matchValue[1] != null) ? (key = matchValue[0].fields[0], (value = matchValue[1], singleton_1([key, value]))) : (void 0, empty_1())) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\n            let matchValue_1, left;\n            return append((matchValue_1 = tryFind(\"left\", tree), (matchValue_1 != null) ? ((matchValue_1.tag === 5) ? (left = matchValue_1.fields[0], Convert_flatteFable3Map(left)) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\n                const matchValue_2 = tryFind(\"right\", tree);\n                let pattern_matching_result, right;\n                if (matchValue_2 != null) {\n                    if (matchValue_2.tag === 5) {\n                        pattern_matching_result = 0;\n                        right = matchValue_2.fields[0];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return Convert_flatteFable3Map(right);\n                    }\n                    case 1: {\n                        return empty_1();\n                    }\n                }\n            }));\n        }));\n    }));\n}\n\nexport function Convert_flattenFable3Lists(linkedList) {\n    return ofSeq(delay(() => {\n        let matchValue;\n        return append((matchValue = tryFind(\"head\", linkedList), (matchValue == null) ? (void 0, empty_1()) : singleton_1(matchValue)), delay(() => {\n            const matchValue_1 = tryFind(\"tail\", linkedList);\n            let pattern_matching_result, tail;\n            if (matchValue_1 != null) {\n                if (matchValue_1.tag === 5) {\n                    pattern_matching_result = 0;\n                    tail = matchValue_1.fields[0];\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return Convert_flattenFable3Lists(tail);\n                }\n                case 1: {\n                    return empty_1();\n                }\n            }\n        }));\n    }));\n}\n\nexport function Convert_arrayLike(_arg1) {\n    switch (_arg1.tag) {\n        case 25: {\n            return true;\n        }\n        case 23: {\n            return true;\n        }\n        case 26: {\n            return true;\n        }\n        case 27: {\n            return true;\n        }\n        case 24: {\n            return true;\n        }\n        case 30: {\n            return true;\n        }\n        case 31: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexport function Convert_isRecord(_arg1) {\n    if (_arg1.tag === 34) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_unionOfRecords(_arg1) {\n    if (_arg1.tag === 35) {\n        return forAll((case$) => {\n            if (case$.CaseTypes.length === 1) {\n                return Convert_isRecord(case$.CaseTypes[0]);\n            }\n            else {\n                return false;\n            }\n        }, _arg1.fields[0]()[0]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_optional(_arg1) {\n    if (_arg1.tag === 22) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_isQuoted(input) {\n    if (input.indexOf(\"\\\"\") === 0) {\n        return endsWith(input, \"\\\"\");\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Convert_betweenQuotes(input) {\n    return (\"\\\"\" + input) + \"\\\"\";\n}\n\nexport function Convert_removeQuotes(input) {\n    return substring(input, 1, input.length - 2);\n}\n\nexport function Convert_fromJsonAs(input_mut, typeInfo_mut) {\n    let foundCase, foundCase_2, testExpr, values_8, tree_2, tree;\n    Convert_fromJsonAs:\n    while (true) {\n        const input = input_mut, typeInfo = typeInfo_mut;\n        const matchValue = [input, typeInfo];\n        let pattern_matching_result, value, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11, value_12, value_13, value_14, value_15, value_16, value_17, value_18, getlElemType, value_19, getElemType, value_20, getElemType_1, value_21, genericJson, value_22, value_23, value_24, value_25, value_26, value_27, value_28, value_29, getTypes, values, jsonValue_5, optionalTypeDelayed_5;\n        if (matchValue[0].tag === 0) {\n            if (matchValue[1].tag === 8) {\n                pattern_matching_result = 0;\n                value = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 7) {\n                pattern_matching_result = 1;\n                value_1 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 3;\n                value_3 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 1) {\n                pattern_matching_result = 7;\n                value_7 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 9) {\n                pattern_matching_result = 9;\n                value_9 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 10) {\n                pattern_matching_result = 11;\n                value_11 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 2) {\n                pattern_matching_result = 12;\n                value_12 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 3) {\n                pattern_matching_result = 14;\n                value_14 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 4) {\n                pattern_matching_result = 16;\n                value_16 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 16) {\n                pattern_matching_result = 18;\n                value_18 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 33) {\n                pattern_matching_result = 20;\n                getElemType = matchValue[1].fields[0];\n                value_20 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 12) {\n                pattern_matching_result = 27;\n                value_24 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 15) {\n                pattern_matching_result = 29;\n                value_26 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 14) {\n                pattern_matching_result = 32;\n                value_29 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (!equalsSafe(matchValue[0], new Json(3))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 1) {\n            if (matchValue[1].tag === 7) {\n                pattern_matching_result = 2;\n                value_2 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 5;\n                value_5 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 1) {\n                pattern_matching_result = 6;\n                value_6 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 9) {\n                pattern_matching_result = 8;\n                value_8 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 10) {\n                pattern_matching_result = 10;\n                value_10 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 2) {\n                pattern_matching_result = 13;\n                value_13 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 3) {\n                pattern_matching_result = 15;\n                value_15 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 4) {\n                pattern_matching_result = 17;\n                value_17 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 33) {\n                pattern_matching_result = 19;\n                getlElemType = matchValue[1].fields[0];\n                value_19 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 25) {\n                pattern_matching_result = 21;\n                getElemType_1 = matchValue[1].fields[0];\n                value_21 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 11) {\n                pattern_matching_result = 25;\n                value_22 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 12) {\n                pattern_matching_result = 26;\n                value_23 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 15) {\n                pattern_matching_result = 28;\n                value_25 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 13) {\n                pattern_matching_result = 30;\n                value_27 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 14) {\n                pattern_matching_result = 31;\n                value_28 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (!equalsSafe(matchValue[0], new Json(3))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 2) {\n            if (matchValue[1].tag === 6) {\n                pattern_matching_result = 4;\n                value_4 = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (!equalsSafe(matchValue[0], new Json(3))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 3) {\n            if (matchValue[1].tag === 1) {\n                pattern_matching_result = 22;\n            }\n            else if (matchValue[1].tag === 0) {\n                pattern_matching_result = 23;\n            }\n            else if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                pattern_matching_result = 34;\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[0].tag === 5) {\n            if (matchValue[1].tag === 18) {\n                pattern_matching_result = 24;\n                genericJson = matchValue[0];\n            }\n            else if (matchValue[1].tag === 35) {\n                pattern_matching_result = 33;\n                getTypes = matchValue[1].fields[0];\n                values = matchValue[0].fields[0];\n            }\n            else if (matchValue[1].tag === 22) {\n                if (!equalsSafe(matchValue[0], new Json(3))) {\n                    pattern_matching_result = 35;\n                    jsonValue_5 = matchValue[0];\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\n                }\n                else {\n                    pattern_matching_result = 36;\n                }\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else if (matchValue[1].tag === 18) {\n            pattern_matching_result = 24;\n            genericJson = matchValue[0];\n        }\n        else if (matchValue[1].tag === 22) {\n            if (!equalsSafe(matchValue[0], new Json(3))) {\n                pattern_matching_result = 35;\n                jsonValue_5 = matchValue[0];\n                optionalTypeDelayed_5 = matchValue[1].fields[0];\n            }\n            else {\n                pattern_matching_result = 36;\n            }\n        }\n        else {\n            pattern_matching_result = 36;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return value;\n            }\n            case 1: {\n                return value_1;\n            }\n            case 2: {\n                return parse(value_2);\n            }\n            case 3: {\n                return Math.floor(value_3);\n            }\n            case 4: {\n                return value_4;\n            }\n            case 5: {\n                return parse_1(value_5, 511, false, 32);\n            }\n            case 6: {\n                return value_6;\n            }\n            case 7: {\n                return value_7.toString();\n            }\n            case 8: {\n                return new Decimal(value_8);\n            }\n            case 9: {\n                return new Decimal(value_9);\n            }\n            case 10: {\n                return parse_1(value_10, 511, false, 16);\n            }\n            case 11: {\n                return (value_11 + 0x8000 & 0xFFFF) - 0x8000;\n            }\n            case 12: {\n                return value_12 & 0xFFFF;\n            }\n            case 13: {\n                return parse_1(value_13, 511, true, 16);\n            }\n            case 14: {\n                return value_14 >>> 0;\n            }\n            case 15: {\n                return parse_1(value_15, 511, true, 32);\n            }\n            case 16: {\n                return fromNumber(value_16, true);\n            }\n            case 17: {\n                return parse_2(value_17, 511, true, 64);\n            }\n            case 18: {\n                return Math.floor(value_18);\n            }\n            case 19: {\n                const patternInput = getlElemType();\n                const underlyingType = patternInput[0];\n                const originalType = patternInput[1];\n                switch (underlyingType.tag) {\n                    case 5: {\n                        let matchValue_1;\n                        let outArg = 0;\n                        matchValue_1 = [tryParse(value_19, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n                            outArg = v;\n                        })), outArg];\n                        if (matchValue_1[0]) {\n                            return matchValue_1[1];\n                        }\n                        else {\n                            const arg20 = name_2(originalType);\n                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_19)(arg20);\n                        }\n                    }\n                    case 11: {\n                        let matchValue_2;\n                        let outArg_1 = fromInt(0);\n                        matchValue_2 = [tryParse_1(value_19, 511, false, 64, new FSharpRef(() => outArg_1, (v_1) => {\n                            outArg_1 = v_1;\n                        })), outArg_1];\n                        if (matchValue_2[0]) {\n                            return matchValue_2[1];\n                        }\n                        else {\n                            const arg20_1 = name_2(originalType);\n                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_19)(arg20_1);\n                        }\n                    }\n                    default: {\n                        const arg20_2 = name_2(originalType);\n                        return toFail(printf(\"The value \\u0027%s\\u0027 cannot be converted to enum of type \\u0027%s\\u0027\"))(value_19)(arg20_2);\n                    }\n                }\n            }\n            case 20: {\n                const patternInput_1 = getElemType();\n                return value_20;\n            }\n            case 21: {\n                const elemType = getElemType_1();\n                if (elemType.tag === 12) {\n                    if ((typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) ? true : Convert_insideBrowser) {\n                        return fromBase64String(value_21);\n                    }\n                    else {\n                        return Array.prototype.slice.call(Buffer.from(value_21, 'base64'));\n                    }\n                }\n                else {\n                    return toFail(printf(\"Cannot convert arbitrary string \\u0027%s\\u0027 to %A\"))(value_21)(elemType);\n                }\n            }\n            case 22: {\n                return null;\n            }\n            case 23: {\n                return void 0;\n            }\n            case 24: {\n                return SimpleJson_toPlainObject(genericJson);\n            }\n            case 25: {\n                return parse_2(value_22, 511, false, 64);\n            }\n            case 26: {\n                return parse_1(value_23, 511, true, 8);\n            }\n            case 27: {\n                return value_24 & 0xFF;\n            }\n            case 28: {\n                return parse_3(value_25);\n            }\n            case 29: {\n                return fromInt32(Math.floor(value_26));\n            }\n            case 30: {\n                return parse_4(value_27);\n            }\n            case 31: {\n                return parse_5(value_28);\n            }\n            case 32: {\n                return DateOffset(toNumber(fromNumber(Math.floor(value_29), false)) * 1000, 0);\n            }\n            case 33: {\n                const patternInput_2 = getTypes();\n                const unionType = patternInput_2[1];\n                const cases = patternInput_2[0];\n                const matchValue_3 = toList(values);\n                let pattern_matching_result_1, caseName, values_1, caseName_1, json;\n                if (matchValue_3.tail != null) {\n                    if (matchValue_3.head[1].tag === 4) {\n                        if (matchValue_3.tail.tail == null) {\n                            pattern_matching_result_1 = 0;\n                            caseName = matchValue_3.head[0];\n                            values_1 = matchValue_3.head[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_1 = 2;\n                        }\n                    }\n                    else {\n                        const activePatternResult3354 = Convert_$007CNonArray$007C_$007C(matchValue_3.head[1]);\n                        if (activePatternResult3354 != null) {\n                            if (matchValue_3.tail.tail == null) {\n                                pattern_matching_result_1 = 1;\n                                caseName_1 = matchValue_3.head[0];\n                                json = activePatternResult3354;\n                            }\n                            else {\n                                pattern_matching_result_1 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 2;\n                        }\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 2;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        const _arg1 = tryFind_1((case$) => (case$.CaseName === caseName), cases);\n                        if (_arg1 != null) {\n                            if (foundCase = _arg1, (foundCase.CaseTypes.length === 1) ? Convert_arrayLike(foundCase.CaseTypes[0]) : false) {\n                                const foundCase_1 = _arg1;\n                                return makeUnion(foundCase_1.Info, [Convert_fromJsonAs(new Json(4, values_1), foundCase_1.CaseTypes[0])]);\n                            }\n                            else {\n                                let pattern_matching_result_2, foundCase_3;\n                                if (_arg1 != null) {\n                                    if (foundCase_2 = _arg1, (foundCase_2.CaseTypes.length === 1) ? Convert_optional(foundCase_2.CaseTypes[0]) : false) {\n                                        pattern_matching_result_2 = 0;\n                                        foundCase_3 = _arg1;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        return makeUnion(foundCase_3.Info, [Convert_fromJsonAs(new Json(4, values_1), foundCase_3.CaseTypes[0])]);\n                                    }\n                                    case 1: {\n                                        if (_arg1 != null) {\n                                            const foundCase_4 = _arg1;\n                                            if (((foundCase_4.CaseTypes.length === 1) ? (!Convert_arrayLike(foundCase_4.CaseTypes[0])) : false) ? (foundCase_4.CaseTypes.length !== length(values_1)) : false) {\n                                                const arg30_1 = length(values_1) | 0;\n                                                const arg20_5 = foundCase_4.CaseTypes.length | 0;\n                                                toFail(printf(\"Expected case \\u0027%s\\u0027 to have %d argument types but the JSON data only contained %d values\"))(foundCase_4.CaseName)(arg20_5)(arg30_1);\n                                            }\n                                            return makeUnion(foundCase_4.Info, map_2((tupledArg) => Convert_fromJsonAs(tupledArg[1], tupledArg[0]), zip(foundCase_4.CaseTypes, Array.from(values_1))));\n                                        }\n                                        else {\n                                            throw (new Error(\"The match cases were incomplete\"));\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const expectedCases = join(\", \", map_2((case$_1) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_1.CaseName), cases));\n                            const arg20_4 = name_2(unionType);\n                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName)(arg20_4)(expectedCases);\n                        }\n                    }\n                    case 1: {\n                        const _arg2 = tryFind_1((case$_2) => (case$_2.CaseName === caseName_1), cases);\n                        let pattern_matching_result_3, caseInfo, caseName_2, caseType;\n                        if (_arg2 != null) {\n                            if (testExpr = _arg2.CaseTypes, (!equalsWith(compareSafe, testExpr, null)) ? (testExpr.length === 1) : false) {\n                                pattern_matching_result_3 = 0;\n                                caseInfo = _arg2.Info;\n                                caseName_2 = _arg2.CaseName;\n                                caseType = _arg2.CaseTypes[0];\n                            }\n                            else {\n                                pattern_matching_result_3 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 1;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                return makeUnion(caseInfo, [((input_1) => ((typeInfo_1) => Convert_fromJsonAs(input_1, typeInfo_1)))(json)(caseType)]);\n                            }\n                            case 1: {\n                                const expectedCases_1 = join(\", \", map_2((case$_3) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_3.CaseName), cases));\n                                const arg20_7 = name_2(unionType);\n                                return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_1)(arg20_7)(expectedCases_1);\n                            }\n                        }\n                    }\n                    case 2: {\n                        if ((containsKey(\"tag\", values) ? containsKey(\"fields\", values) : false) ? (count(values) === 2) : false) {\n                            const matchValue_4 = [tryFind(\"tag\", values), tryFind(\"fields\", values)];\n                            let pattern_matching_result_4, caseIndex, fieldValues;\n                            if (matchValue_4[0] != null) {\n                                if (matchValue_4[0].tag === 0) {\n                                    if (matchValue_4[1] != null) {\n                                        if (matchValue_4[1].tag === 4) {\n                                            pattern_matching_result_4 = 0;\n                                            caseIndex = matchValue_4[0].fields[0];\n                                            fieldValues = matchValue_4[1].fields[0];\n                                        }\n                                        else {\n                                            pattern_matching_result_4 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_4 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_4 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_4 = 1;\n                            }\n                            switch (pattern_matching_result_4) {\n                                case 0: {\n                                    const foundCase_5 = cases[~(~caseIndex)];\n                                    return makeUnion(foundCase_5.Info, mapIndexed((index, value_35) => Convert_fromJsonAs(value_35, foundCase_5.CaseTypes[index]), Array.from(fieldValues)));\n                                }\n                                case 1: {\n                                    const arg20_8 = fullName(unionType);\n                                    const arg10_10 = SimpleJson_toString(new Json(5, values));\n                                    return toFail(printf(\"Could not deserialize JSON(%s) into type %s\"))(arg10_10)(arg20_8);\n                                }\n                            }\n                        }\n                        else if (Convert_unionOfRecords(typeInfo)) {\n                            const foundDiscriminatorKey = tryFind_2((keyword) => containsKey(keyword, values), ofArray([\"__typename\", \"$typename\", \"$type\"]));\n                            if (foundDiscriminatorKey != null) {\n                                const discriminatorValueJson = find(foundDiscriminatorKey, values);\n                                if (discriminatorValueJson.tag === 1) {\n                                    const discriminatorValue = discriminatorValueJson.fields[0];\n                                    const foundUnionCase = tryFind_3((case$_4) => (case$_4.CaseName.toUpperCase() === discriminatorValue.toUpperCase()), cases);\n                                    if (foundUnionCase != null) {\n                                        const case$_5 = foundUnionCase;\n                                        return makeUnion(case$_5.Info, [Convert_fromJsonAs(new Json(5, values), case$_5.CaseTypes[0])]);\n                                    }\n                                    else {\n                                        const arg10_12 = name_2(unionType);\n                                        return toFail(printf(\"Union of records of type \\u0027%s\\u0027 does not have a matching case \\u0027%s\\u0027\"))(arg10_12)(discriminatorValue);\n                                    }\n                                }\n                                else {\n                                    const arg10_13 = name_2(unionType);\n                                    return toFail(printf(\"Union of records of type \\u0027%s\\u0027 cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\"))(arg10_13);\n                                }\n                            }\n                            else {\n                                const arg10_11 = name_2(unionType);\n                                return toFail(printf(\"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected \\u0027__typename\\u0027, \\u0027$typeName\\u0027 or \\u0027$type\\u0027\"))(arg10_11);\n                            }\n                        }\n                        else {\n                            const unexpectedJson = JSON.stringify(matchValue_3);\n                            const expectedType = JSON.stringify(cases);\n                            return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson)(expectedType);\n                        }\n                    }\n                }\n            }\n            case 34: {\n                return void 0;\n            }\n            case 35: {\n                return (some)(Convert_fromJsonAs(jsonValue_5, optionalTypeDelayed_5()));\n            }\n            case 36: {\n                let pattern_matching_result_5, value_36, value_37, dict, caseName_4, getTypes_2;\n                if (matchValue[0].tag === 1) {\n                    if (matchValue[1].tag === 17) {\n                        pattern_matching_result_5 = 0;\n                        value_36 = matchValue[0].fields[0];\n                    }\n                    else if (matchValue[1].tag === 35) {\n                        if (Convert_isQuoted(matchValue[0].fields[0])) {\n                            pattern_matching_result_5 = 3;\n                            caseName_4 = matchValue[0].fields[0];\n                            getTypes_2 = matchValue[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_5 = 4;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else if (matchValue[0].tag === 0) {\n                    if (matchValue[1].tag === 11) {\n                        pattern_matching_result_5 = 1;\n                        value_37 = matchValue[0].fields[0];\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else if (matchValue[0].tag === 5) {\n                    if (matchValue[1].tag === 11) {\n                        pattern_matching_result_5 = 2;\n                        dict = matchValue[0].fields[0];\n                    }\n                    else {\n                        pattern_matching_result_5 = 4;\n                    }\n                }\n                else {\n                    pattern_matching_result_5 = 4;\n                }\n                switch (pattern_matching_result_5) {\n                    case 0: {\n                        return parse_6(value_36);\n                    }\n                    case 1: {\n                        return ((value_38) => fromInteger(value_38, false, 2))(~(~value_37));\n                    }\n                    case 2: {\n                        const get$ = (key) => tryFind(key, dict);\n                        const _arg3 = choose((x_1) => x_1, ofArray([get$(\"low\"), get$(\"high\"), get$(\"unsigned\")]));\n                        let pattern_matching_result_6, high, low;\n                        if (_arg3.tail != null) {\n                            if (_arg3.head.tag === 0) {\n                                if (_arg3.tail.tail != null) {\n                                    if (_arg3.tail.head.tag === 0) {\n                                        if (_arg3.tail.tail.tail != null) {\n                                            if (_arg3.tail.tail.head.tag === 2) {\n                                                if (_arg3.tail.tail.tail.tail == null) {\n                                                    pattern_matching_result_6 = 0;\n                                                    high = _arg3.tail.head.fields[0];\n                                                    low = _arg3.head.fields[0];\n                                                }\n                                                else {\n                                                    pattern_matching_result_6 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_6 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_6 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_6 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_6 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_6 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                        switch (pattern_matching_result_6) {\n                            case 0: {\n                                return toInt64(concat([getBytesInt32(~(~low)), getBytesInt32(~(~high))], Uint8Array), 0);\n                            }\n                            case 1: {\n                                return toFail(printf(\"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"));\n                            }\n                        }\n                    }\n                    case 3: {\n                        const patternInput_3 = getTypes_2();\n                        const caseTypes = patternInput_3[0];\n                        const _arg4 = tryFind_1((case$_6) => (case$_6.CaseName === Convert_removeQuotes(caseName_4)), caseTypes);\n                        if (_arg4 == null) {\n                            const expectedCases_2 = join(\", \", map_2((case$_7) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_7.CaseName), caseTypes));\n                            const arg20_11 = name_2(patternInput_3[1]);\n                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_4)(arg20_11)(expectedCases_2);\n                        }\n                        else {\n                            return makeUnion(_arg4.Info, []);\n                        }\n                    }\n                    case 4: {\n                        let pattern_matching_result_7, caseName_5, getTypes_3, getFields, serializedRecord, caseValue, getTypes_4, elementTypeDelayed, values_4, elementTypeDelayed_1, values_5, elementTypeDelayed_2, linkedList, elementTypeDelayed_3, values_6, elementTypeDelayed_4, values_7, array_9, tupleTypesDelayed, dict_1, getTypes_5, getTypes_6, tuples, getTypes_7, tuples_1, dict_2, getTypes_8, getType, items, getTypes_9, map, getType_1;\n                        if (matchValue[0].tag === 1) {\n                            if (matchValue[1].tag === 35) {\n                                pattern_matching_result_7 = 0;\n                                caseName_5 = matchValue[0].fields[0];\n                                getTypes_3 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 34) {\n                                pattern_matching_result_7 = 1;\n                                getFields = matchValue[1].fields[0];\n                                serializedRecord = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[0].tag === 4) {\n                            if (matchValue[1].tag === 35) {\n                                pattern_matching_result_7 = 2;\n                                caseValue = matchValue[0].fields[0];\n                                getTypes_4 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 25) {\n                                pattern_matching_result_7 = 3;\n                                elementTypeDelayed = matchValue[1].fields[0];\n                                values_4 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 23) {\n                                pattern_matching_result_7 = 4;\n                                elementTypeDelayed_1 = matchValue[1].fields[0];\n                                values_5 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 24) {\n                                pattern_matching_result_7 = 6;\n                                elementTypeDelayed_3 = matchValue[1].fields[0];\n                                values_6 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 26) {\n                                pattern_matching_result_7 = 7;\n                                elementTypeDelayed_4 = matchValue[1].fields[0];\n                                values_7 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 27) {\n                                pattern_matching_result_7 = 8;\n                                array_9 = matchValue[0].fields[0];\n                                tupleTypesDelayed = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 28) {\n                                pattern_matching_result_7 = 10;\n                                getTypes_6 = matchValue[1].fields[0];\n                                tuples = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 29) {\n                                pattern_matching_result_7 = 11;\n                                getTypes_7 = matchValue[1].fields[0];\n                                tuples_1 = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 31) {\n                                pattern_matching_result_7 = 13;\n                                getType = matchValue[1].fields[0];\n                                items = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[0].tag === 5) {\n                            if (matchValue[1].tag === 23) {\n                                pattern_matching_result_7 = 5;\n                                elementTypeDelayed_2 = matchValue[1].fields[0];\n                                linkedList = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 34) {\n                                pattern_matching_result_7 = 9;\n                                dict_1 = matchValue[0].fields[0];\n                                getTypes_5 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 29) {\n                                pattern_matching_result_7 = 12;\n                                dict_2 = matchValue[0].fields[0];\n                                getTypes_8 = matchValue[1].fields[0];\n                            }\n                            else if (matchValue[1].tag === 28) {\n                                pattern_matching_result_7 = 14;\n                                getTypes_9 = matchValue[1].fields[0];\n                                map = matchValue[0].fields[0];\n                            }\n                            else if (matchValue[1].tag === 19) {\n                                pattern_matching_result_7 = 15;\n                                getType_1 = matchValue[1].fields[0];\n                            }\n                            else {\n                                pattern_matching_result_7 = 16;\n                            }\n                        }\n                        else if (matchValue[1].tag === 19) {\n                            pattern_matching_result_7 = 15;\n                            getType_1 = matchValue[1].fields[0];\n                        }\n                        else {\n                            pattern_matching_result_7 = 16;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                const patternInput_4 = getTypes_3();\n                                const caseTypes_1 = patternInput_4[0];\n                                const _arg5 = tryFind_1((case$_8) => (case$_8.CaseName === caseName_5), caseTypes_1);\n                                if (_arg5 == null) {\n                                    const expectedCases_3 = join(\", \", map_2((case$_9) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_9.CaseName), caseTypes_1));\n                                    const arg20_12 = name_2(patternInput_4[1]);\n                                    return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_5)(arg20_12)(expectedCases_3);\n                                }\n                                else {\n                                    return makeUnion(_arg5.Info, []);\n                                }\n                            }\n                            case 1: {\n                                input_mut = SimpleJson_parse(serializedRecord);\n                                typeInfo_mut = typeInfo;\n                                continue Convert_fromJsonAs;\n                            }\n                            case 2: {\n                                const patternInput_5 = getTypes_4();\n                                const cases_1 = patternInput_5[0];\n                                let pattern_matching_result_8, caseName_6, caseName_8, values_3, otherwise_6;\n                                if (caseValue.tail != null) {\n                                    if (caseValue.head.tag === 1) {\n                                        if (caseValue.tail.tail == null) {\n                                            pattern_matching_result_8 = 0;\n                                            caseName_6 = caseValue.head.fields[0];\n                                        }\n                                        else {\n                                            pattern_matching_result_8 = 1;\n                                            caseName_8 = caseValue.head.fields[0];\n                                            values_3 = caseValue.tail;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 2;\n                                        otherwise_6 = caseValue;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 2;\n                                    otherwise_6 = caseValue;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        const _arg6 = tryFind_1((case$_10) => (case$_10.CaseName === caseName_6), cases_1);\n                                        if (_arg6 == null) {\n                                            const expectedCases_4 = join(\", \", map_2((case$_11) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_11.CaseName), cases_1));\n                                            const arg20_13 = name_2(patternInput_5[1]);\n                                            return toFail(printf(\"Case \\u0027%s\\u0027 was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_6)(arg20_13)(expectedCases_4);\n                                        }\n                                        else {\n                                            const caseName_7 = _arg6.CaseName;\n                                            const caseInfoTypes = _arg6.CaseTypes;\n                                            return makeUnion(_arg6.Info, []);\n                                        }\n                                    }\n                                    case 1: {\n                                        const _arg7 = tryFind_1((case$_12) => (case$_12.CaseName === caseName_8), cases_1);\n                                        if (_arg7 != null) {\n                                            const types = _arg7.CaseTypes;\n                                            const foundCaseName = _arg7.CaseName;\n                                            const caseInfo_4 = _arg7.Info;\n                                            if (types.length !== length(values_3)) {\n                                                toFail(printf(\"The number of union case parameters for \\u0027%s\\u0027 is different\"))(foundCaseName);\n                                            }\n                                            return makeUnion(caseInfo_4, map_2((tupledArg_1) => Convert_fromJsonAs(tupledArg_1[1], tupledArg_1[0]), zip(types, Array.from(values_3))));\n                                        }\n                                        else {\n                                            const expectedCases_5 = join(\", \", map_2((_arg1_1) => _arg1_1.CaseName, cases_1));\n                                            return toFail(printf(\"Case %s was not valid, expected one of [%s]\"))(caseName_8)(expectedCases_5);\n                                        }\n                                    }\n                                    case 2: {\n                                        const unexpectedJson_1 = JSON.stringify(otherwise_6);\n                                        const expectedType_1 = JSON.stringify(cases_1);\n                                        return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson_1)(expectedType_1);\n                                    }\n                                }\n                            }\n                            case 3: {\n                                const elementType = elementTypeDelayed();\n                                return Array.from(map_3((value_42) => Convert_fromJsonAs(value_42, elementType), values_4));\n                            }\n                            case 4: {\n                                const elementType_1 = elementTypeDelayed_1();\n                                return map_3((value_44) => Convert_fromJsonAs(value_44, elementType_1), values_5);\n                            }\n                            case 5: {\n                                const elementType_2 = elementTypeDelayed_2();\n                                return map_3((value_46) => Convert_fromJsonAs(value_46, elementType_2), Convert_flattenFable3Lists(linkedList));\n                            }\n                            case 6: {\n                                const elementType_3 = elementTypeDelayed_3();\n                                return ofList_1(map_3((value_48) => Convert_fromJsonAs(value_48, elementType_3), values_6), {\n                                    Compare: compare,\n                                });\n                            }\n                            case 7: {\n                                const elementType_4 = elementTypeDelayed_4();\n                                return map_3((value_50) => Convert_fromJsonAs(value_50, elementType_4), values_7);\n                            }\n                            case 8: {\n                                return map_2((tupledArg_2) => Convert_fromJsonAs(tupledArg_2[1], tupledArg_2[0]), zip(tupleTypesDelayed(), Array.from(array_9)));\n                            }\n                            case 9: {\n                                const patternInput_6 = getTypes_5();\n                                const recordType = patternInput_6[1];\n                                const fields = patternInput_6[0];\n                                return makeRecord(recordType, (values_8 = toList(dict_1), map_2((_arg3_1) => {\n                                    const fieldType = _arg3_1.FieldType;\n                                    const fieldName = _arg3_1.FieldName;\n                                    const _arg8 = tryFind_2((tupledArg_3) => (fieldName === tupledArg_3[0]), values_8);\n                                    if (_arg8 == null) {\n                                        if (fieldType.tag === 22) {\n                                            return void 0;\n                                        }\n                                        else {\n                                            let dictKeys;\n                                            const arg10_27 = join(\", \", map_3((arg) => toText(printf(\"\\u0027%s\\u0027\"))(arg[0]), toList(dict_1)));\n                                            dictKeys = toText(printf(\"[ %s ]\"))(arg10_27);\n                                            let recordFields;\n                                            const arg10_30 = join(\", \", map_2((_arg2_1) => {\n                                                const name_1 = _arg2_1.FieldName;\n                                                if (_arg2_1.FieldType.tag === 22) {\n                                                    return toText(printf(\"optional(\\u0027%s\\u0027)\"))(name_1);\n                                                }\n                                                else {\n                                                    return toText(printf(\"required(\\u0027%s\\u0027)\"))(name_1);\n                                                }\n                                            }, fields));\n                                            recordFields = toText(printf(\"[ %s ]\"))(arg10_30);\n                                            const arg30_6 = name_2(recordType);\n                                            return toFail(printf(\"Could not find the required key \\u0027%s\\u0027 in the JSON object literal with keys %s to match with record type \\u0027%s\\u0027 that has fields %s\"))(fieldName)(dictKeys)(arg30_6)(recordFields);\n                                        }\n                                    }\n                                    else {\n                                        const key_2 = _arg8[0];\n                                        return Convert_fromJsonAs(_arg8[1], fieldType);\n                                    }\n                                }, fields)));\n                            }\n                            case 10: {\n                                const patternInput_7 = getTypes_6();\n                                const keyType = patternInput_7[0];\n                                const pairs = ofSeq(delay(() => collect((keyValuePair) => {\n                                    let a;\n                                    return singleton_1(Convert_fromJsonAs(keyValuePair, new TypeInfo(27, (a = [keyType, patternInput_7[1]], () => a))));\n                                }, tuples)));\n                                switch (keyType.tag) {\n                                    case 5:\n                                    case 1:\n                                    case 6: {\n                                        return ofList(pairs);\n                                    }\n                                    default: {\n                                        return ofList(pairs);\n                                    }\n                                }\n                            }\n                            case 11: {\n                                const patternInput_8 = getTypes_7();\n                                const keyType_1 = patternInput_8[0];\n                                const pairs_1 = ofSeq(delay(() => collect((keyValuePair_1) => singleton_1(Convert_fromJsonAs(keyValuePair_1, new TypeInfo(27, () => [keyType_1, patternInput_8[1]]))), tuples_1)));\n                                const output = (keyType_1.tag === 35) ? (new Dictionary([], {\n                                    Equals: equalsSafe,\n                                    GetHashCode: safeHash,\n                                })) : ((keyType_1.tag === 34) ? (new Dictionary([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })) : (new Dictionary([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })));\n                                const enumerator = getEnumerator(pairs_1);\n                                try {\n                                    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                        addToDict(output, forLoopVar[0], forLoopVar[1]);\n                                    }\n                                }\n                                finally {\n                                    enumerator.Dispose();\n                                }\n                                return output;\n                            }\n                            case 12: {\n                                const patternInput_9 = getTypes_8();\n                                const keyType_2 = patternInput_9[0];\n                                const pairs_2 = map_3((tupledArg_4) => [Convert_fromJsonAs(new Json(1, tupledArg_4[0]), keyType_2), Convert_fromJsonAs(tupledArg_4[1], patternInput_9[1])], toList(dict_2));\n                                const output_1 = (keyType_2.tag === 35) ? (new Dictionary([], {\n                                    Equals: equalsSafe,\n                                    GetHashCode: safeHash,\n                                })) : ((keyType_2.tag === 34) ? (new Dictionary([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })) : (new Dictionary([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })));\n                                const enumerator_1 = getEnumerator(pairs_2);\n                                try {\n                                    while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const forLoopVar_1 = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                        addToDict(output_1, forLoopVar_1[0], forLoopVar_1[1]);\n                                    }\n                                }\n                                finally {\n                                    enumerator_1.Dispose();\n                                }\n                                return output_1;\n                            }\n                            case 13: {\n                                const elemType_1 = getType();\n                                const hashset = (elemType_1.tag === 35) ? (new HashSet([], {\n                                    Equals: equalsSafe,\n                                    GetHashCode: safeHash,\n                                })) : ((elemType_1.tag === 34) ? (new HashSet([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })) : (new HashSet([], {\n                                    Equals: equals,\n                                    GetHashCode: structuralHash,\n                                })));\n                                const enumerator_2 = getEnumerator(items);\n                                try {\n                                    while (enumerator_2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                                        const value_67 = addToSet(Convert_fromJsonAs(enumerator_2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), elemType_1), hashset);\n                                        void value_67;\n                                    }\n                                }\n                                finally {\n                                    enumerator_2.Dispose();\n                                }\n                                return hashset;\n                            }\n                            case 14: {\n                                const patternInput_10 = getTypes_9();\n                                const valueType_5 = patternInput_10[1];\n                                const keyType_3 = patternInput_10[0];\n                                const matchValue_5 = [tryFind(\"comparer\", map), tryFind(\"tree\", map)];\n                                let pattern_matching_result_9, comparer_1, tree_1;\n                                if (matchValue_5[0] != null) {\n                                    if (matchValue_5[0].tag === 5) {\n                                        if (matchValue_5[1] != null) {\n                                            if (matchValue_5[1].tag === 4) {\n                                                if (tree = matchValue_5[1].fields[0], isEmpty(matchValue_5[0].fields[0])) {\n                                                    pattern_matching_result_9 = 0;\n                                                    comparer_1 = matchValue_5[0].fields[0];\n                                                    tree_1 = matchValue_5[1].fields[0];\n                                                }\n                                                else {\n                                                    pattern_matching_result_9 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_9 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_9 = 1;\n                                }\n                                switch (pattern_matching_result_9) {\n                                    case 0: {\n                                        const matchValue_6 = Convert_generateMap(new Json(4, tree_1));\n                                        if (matchValue_6 == null) {\n                                            const inputJson = SimpleJson_toString(new Json(4, tree_1));\n                                            return toFail(printf(\"Could not generate map from JSON\\n %s\"))(inputJson);\n                                        }\n                                        else {\n                                            const pairs_3 = map_3((tupledArg_5) => {\n                                                const key_6 = tupledArg_5[0];\n                                                return [(!Convert_isQuoted(key_6)) ? Convert_fromJsonAs(new Json(1, key_6), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_6), keyType_3), Convert_fromJsonAs(tupledArg_5[1], valueType_5)];\n                                            }, Convert_flattenMap(matchValue_6));\n                                            switch (keyType_3.tag) {\n                                                case 5:\n                                                case 1:\n                                                case 6: {\n                                                    return ofList(pairs_3);\n                                                }\n                                                default: {\n                                                    return ofList(pairs_3);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_10, comparer_3, tree_3;\n                                        if (matchValue_5[0] != null) {\n                                            if (matchValue_5[0].tag === 5) {\n                                                if (matchValue_5[1] != null) {\n                                                    if (matchValue_5[1].tag === 5) {\n                                                        if (tree_2 = matchValue_5[1].fields[0], isEmpty(matchValue_5[0].fields[0])) {\n                                                            pattern_matching_result_10 = 0;\n                                                            comparer_3 = matchValue_5[0].fields[0];\n                                                            tree_3 = matchValue_5[1].fields[0];\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_10 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_10 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_10 = 1;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result_10 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_10 = 1;\n                                        }\n                                        switch (pattern_matching_result_10) {\n                                            case 0: {\n                                                input_mut = (new Json(5, ofList(Convert_flatteFable3Map(tree_3))));\n                                                typeInfo_mut = typeInfo;\n                                                continue Convert_fromJsonAs;\n                                            }\n                                            case 1: {\n                                                const pairs_4 = map_3((tupledArg_6) => {\n                                                    const key_7 = tupledArg_6[0];\n                                                    return [(!Convert_isQuoted(key_7)) ? ((isPrimitive(keyType_3) ? true : enumUnion(keyType_3)) ? Convert_fromJsonAs(new Json(1, key_7), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3)) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3), Convert_fromJsonAs(tupledArg_6[1], valueType_5)];\n                                                }, toList(map));\n                                                switch (keyType_3.tag) {\n                                                    case 5:\n                                                    case 1:\n                                                    case 6: {\n                                                        return ofList(pairs_4);\n                                                    }\n                                                    default: {\n                                                        return ofList(pairs_4);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            case 15: {\n                                const arg20_17 = fullName(getType_1());\n                                const arg10_33 = SimpleJson_toString(input);\n                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_33)(arg20_17);\n                            }\n                            case 16: {\n                                const arg20_18 = JSON.stringify(typeInfo);\n                                const arg10_34 = SimpleJson_toString(input);\n                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_34)(arg20_18);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        break;\n    }\n}\n\nexport function Convert_fromJson(json, typeInfo) {\n    return Convert_fromJsonAs(json, typeInfo);\n}\n\nexport const Convert_quoteText = quote;\n\nexport function Convert_serialize(value_mut, typeInfo_mut) {\n    let copyOfStruct, copyOfStruct_1, copyOfStruct_2;\n    Convert_serialize:\n    while (true) {\n        const value = value_mut, typeInfo = typeInfo_mut;\n        switch (typeInfo.tag) {\n            case 1: {\n                const content = value;\n                if (content == null) {\n                    return \"null\";\n                }\n                else {\n                    return Convert_quoteText(content);\n                }\n            }\n            case 0: {\n                return \"null\";\n            }\n            case 8:\n            case 7: {\n                return value.toString();\n            }\n            case 12:\n            case 2:\n            case 3:\n            case 10:\n            case 33:\n            case 16:\n            case 5: {\n                return int32ToString(value);\n            }\n            case 4:\n            case 11: {\n                return Convert_betweenQuotes(toString(value));\n            }\n            case 15: {\n                return Convert_betweenQuotes(toString_1(value));\n            }\n            case 9: {\n                return Convert_betweenQuotes(toString_2(value));\n            }\n            case 6: {\n                if (value) {\n                    return \"true\";\n                }\n                else {\n                    return \"false\";\n                }\n            }\n            case 17: {\n                return Convert_betweenQuotes((copyOfStruct = value, copyOfStruct));\n            }\n            case 13: {\n                return Convert_betweenQuotes((copyOfStruct_1 = value, toString_3(copyOfStruct_1, \"O\")));\n            }\n            case 14: {\n                return Convert_betweenQuotes((copyOfStruct_2 = value, toString_3(copyOfStruct_2, \"O\")));\n            }\n            case 34: {\n                return (\"{\" + join(\", \", map_2((field) => {\n                    const arg20 = Convert_serialize(getRecordField(value, field.PropertyInfo), field.FieldType);\n                    return toText(printf(\"\\\"%s\\\": %s\"))(field.FieldName)(arg20);\n                }, typeInfo.fields[0]()[0]))) + \"}\";\n            }\n            case 30: {\n                const elementType = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_4((element) => Convert_serialize(element, elementType), value))) + \"]\";\n            }\n            case 31: {\n                const elementType_1 = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_4((element_1) => Convert_serialize(element_1, elementType_1), value))) + \"]\";\n            }\n            case 24: {\n                const elementType_2 = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_4((element_2) => Convert_serialize(element_2, elementType_2), value))) + \"]\";\n            }\n            case 25: {\n                const elementType_3 = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_2((element_3) => Convert_serialize(element_3, elementType_3), value))) + \"]\";\n            }\n            case 23: {\n                const elementType_4 = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_3((element_4) => Convert_serialize(element_4, elementType_4), value))) + \"]\";\n            }\n            case 26: {\n                const elementType_5 = typeInfo.fields[0]();\n                return (\"[\" + join(\", \", map_2((element_5) => Convert_serialize(element_5, elementType_5), Array.from(value)))) + \"]\";\n            }\n            case 22: {\n                const matchValue = value;\n                if (matchValue != null) {\n                    value_mut = value_78(matchValue);\n                    typeInfo_mut = typeInfo.fields[0]();\n                    continue Convert_serialize;\n                }\n                else {\n                    return \"null\";\n                }\n            }\n            case 35: {\n                const patternInput_1 = typeInfo.fields[0]();\n                const patternInput_2 = getUnionFields(value, patternInput_1[1]);\n                const usedCase = patternInput_2[0];\n                const fields = patternInput_2[1];\n                const caseTypes = patternInput_1[0].find((case$) => (case$.CaseName === name_2(usedCase))).CaseTypes;\n                if (enumUnion(typeInfo) ? true : (caseTypes.length === 0)) {\n                    return Convert_betweenQuotes(name_2(usedCase));\n                }\n                else if (caseTypes.length === 1) {\n                    return (((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + Convert_serialize(fields[0], caseTypes[0])) + \"}\";\n                }\n                else {\n                    const serializedFields_1 = join(\", \", mapIndexed((index, caseType) => Convert_serialize(fields[index], caseType), caseTypes));\n                    return ((((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + \"[\") + serializedFields_1) + \"] }\";\n                }\n            }\n            case 28: {\n                const patternInput_3 = typeInfo.fields[0]();\n                const keyType = patternInput_3[0];\n                const serializedValues = join(\", \", map_2((tupledArg) => {\n                    const serializedKey = Convert_serialize(tupledArg[0], keyType);\n                    const serializedValue = Convert_serialize(tupledArg[1], patternInput_3[1]);\n                    if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\n                        if (!Convert_isQuoted(serializedKey)) {\n                            return (Convert_quoteText(serializedKey) + \": \") + serializedValue;\n                        }\n                        else {\n                            return (serializedKey + \": \") + serializedValue;\n                        }\n                    }\n                    else {\n                        return (((\"[\" + serializedKey) + \", \") + serializedValue) + \"]\";\n                    }\n                }, toArray(value)));\n                if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\n                    return (\"{\" + serializedValues) + \"}\";\n                }\n                else {\n                    return (\"[\" + serializedValues) + \"]\";\n                }\n            }\n            case 29: {\n                const patternInput_4 = typeInfo.fields[0]();\n                const keyType_1 = patternInput_4[0];\n                const serializedValues_1 = join(\", \", map_4((pair) => {\n                    const patternInput_5 = [pair[0], pair[1]];\n                    const serializedKey_1 = Convert_serialize(patternInput_5[0], keyType_1);\n                    const serializedValue_1 = Convert_serialize(patternInput_5[1], patternInput_4[1]);\n                    if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\n                        if (!Convert_isQuoted(serializedKey_1)) {\n                            return (Convert_betweenQuotes(serializedKey_1) + \": \") + serializedValue_1;\n                        }\n                        else {\n                            return (serializedKey_1 + \": \") + serializedValue_1;\n                        }\n                    }\n                    else {\n                        return (((\"[\" + serializedKey_1) + \", \") + serializedValue_1) + \"]\";\n                    }\n                }, value));\n                if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\n                    return (\"{\" + serializedValues_1) + \"}\";\n                }\n                else {\n                    return (\"[\" + serializedValues_1) + \"]\";\n                }\n            }\n            case 27: {\n                const tupleTypes = typeInfo.fields[0]();\n                if (tupleTypes.length === 1) {\n                    return (\"[\" + Convert_serialize(value, tupleTypes[0])) + \"]\";\n                }\n                else {\n                    return (\"[\" + join(\", \", mapIndexed((index_1, element_6) => Convert_serialize(element_6, tupleTypes[index_1]), value))) + \"]\";\n                }\n            }\n            case 18: {\n                return SimpleJson_stringify(value);\n            }\n            case 19: {\n                return SimpleJson_stringify(value);\n            }\n            default: {\n                return \"null\";\n            }\n        }\n        break;\n    }\n}\n\nexport function Fable_SimpleJson_Json__Json_stringify_Static_4E60E31B(value) {\n    if (Convert_isUsingFable3) {\n        console.warn(some(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\"));\n    }\n    return SimpleJson_stringify(value);\n}\n\n","import { Union, Record } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { union_type, tuple_type, lambda_type, unit_type, array_type, record_type, class_type, string_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\n\nexport class RecordField extends Record {\n    constructor(FieldName, FieldType, PropertyInfo) {\n        super();\n        this.FieldName = FieldName;\n        this.FieldType = FieldType;\n        this.PropertyInfo = PropertyInfo;\n    }\n}\n\nexport function RecordField$reflection() {\n    return record_type(\"Fable.SimpleJson.RecordField\", [], RecordField, () => [[\"FieldName\", string_type], [\"FieldType\", TypeInfo$reflection()], [\"PropertyInfo\", class_type(\"System.Reflection.PropertyInfo\")]]);\n}\n\nexport class UnionCase extends Record {\n    constructor(CaseName, CaseTypes, Info) {\n        super();\n        this.CaseName = CaseName;\n        this.CaseTypes = CaseTypes;\n        this.Info = Info;\n    }\n}\n\nexport function UnionCase$reflection() {\n    return record_type(\"Fable.SimpleJson.UnionCase\", [], UnionCase, () => [[\"CaseName\", string_type], [\"CaseTypes\", array_type(TypeInfo$reflection())], [\"Info\", class_type(\"Microsoft.FSharp.Reflection.UnionCaseInfo\")]]);\n}\n\nexport class TypeInfo extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Unit\", \"String\", \"UInt16\", \"UInt32\", \"UInt64\", \"Int32\", \"Bool\", \"Float32\", \"Float\", \"Decimal\", \"Short\", \"Long\", \"Byte\", \"DateTime\", \"DateTimeOffset\", \"BigInt\", \"TimeSpan\", \"Guid\", \"Object\", \"Any\", \"Async\", \"Promise\", \"Option\", \"List\", \"Set\", \"Array\", \"Seq\", \"Tuple\", \"Map\", \"Dictionary\", \"ResizeArray\", \"HashSet\", \"Func\", \"Enum\", \"Record\", \"Union\"];\n    }\n}\n\nexport function TypeInfo$reflection() {\n    return union_type(\"Fable.SimpleJson.TypeInfo\", [], TypeInfo, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", lambda_type(unit_type, class_type(\"System.Type\"))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(RecordField$reflection()), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(UnionCase$reflection()), class_type(\"System.Type\")))]]]);\n}\n\n","import { Union } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { union_type, class_type, list_type, bool_type, string_type, float64_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\n\nexport class Json extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"JNumber\", \"JString\", \"JBool\", \"JNull\", \"JArray\", \"JObject\"];\n    }\n}\n\nexport function Json$reflection() {\n    return union_type(\"Fable.SimpleJson.Json\", [], Json, () => [[[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [], [[\"Item\", list_type(Json$reflection())]], [[\"Item\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, Json$reflection()])]]]);\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\nexport { ObjectRef };\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalsSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.Equals(y)) !== null && _a !== void 0 ? _a : y == null;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compareSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.CompareTo(y)) !== null && _a !== void 0 ? _a : (y == null ? 0 : -1);\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","export default function quote(inputText) {\r\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var meta = {\r\n        '\\b': '\\\\b',\r\n        '\\t': '\\\\t',\r\n        '\\n': '\\\\n',\r\n        '\\f': '\\\\f',\r\n        '\\r': '\\\\r',\r\n        '\"': '\\\\\"',\r\n        '\\\\': '\\\\\\\\'\r\n    }\r\n\r\n    escapable.lastIndex = 0;\r\n    return escapable.test(inputText) ?\r\n        '\"' + inputText.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string' ? c :\r\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' :\r\n        '\"' + inputText + '\"';\r\n}","const littleEndian = true;\nfunction utf16le_encode(str) {\n    const bytes = new Uint8Array(str.length * 2);\n    const view = new DataView(bytes.buffer);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        view.setUint16(i * 2, code, littleEndian);\n    }\n    return bytes;\n}\nfunction utf16le_decode(bytes) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const chars = new Array(view.byteLength / 2);\n    for (let i = 0; i < chars.length; i++) {\n        const code = view.getUint16(i * 2, littleEndian);\n        chars[i] = String.fromCharCode(code);\n    }\n    return chars.join(\"\");\n}\nfunction utf8_encode(str) {\n    let pos = 0;\n    let buf = new Uint8Array(str.length * 3);\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code >= 0xD800 && code <= 0xDBFF) {\n            const nextCode = (i < str.length) ? str.charCodeAt(i + 1) : 0;\n            if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n                i += 1;\n                code = (code - 0xD800) * 0x400 + nextCode - 0xDC00 + 0x10000;\n                if (code > 0xFFFF) {\n                    buf[pos++] = (0x1E << 3) | (code >>> 18);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 12) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | (code & 0x3F);\n                }\n            }\n            else {\n                buf[pos++] = 0xEF;\n                buf[pos++] = 0xBF;\n                buf[pos++] = 0xBD;\n            }\n        }\n        else if (code <= 0x007F) {\n            buf[pos++] = (0x0 << 7) | code;\n        }\n        else if (code <= 0x07FF) {\n            buf[pos++] = (0x6 << 5) | (code >>> 6);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n        else {\n            buf[pos++] = (0xE << 4) | (code >>> 12);\n            buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n    }\n    buf = new Uint8Array(buf.buffer.slice(0, pos));\n    return buf;\n}\nfunction utf8_decode(bytes) {\n    let pos = 0;\n    const decodeUtf8 = () => {\n        const i1 = bytes[pos++];\n        if ((i1 & 0x80) === 0) {\n            return i1;\n        }\n        else if ((i1 & 0xE0) === 0xC0) {\n            const i2 = bytes[pos++];\n            return ((i1 & 0x1F) << 6) | (i2 & 0x3F);\n        }\n        else if ((i1 & 0xF0) === 0xE0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            return ((i1 & 0x0F) << 12) | ((i2 & 0x3F) << 6) | (i3 & 0x3F);\n        }\n        else if ((i1 & 0xF8) === 0xF0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            const i4 = bytes[pos++];\n            return ((i1 & 0x07) << 18) | ((i2 & 0x3F) << 12) | ((i3 & 0x3F) << 6) | (i4 & 0x3F);\n        }\n        else {\n            throw new RangeError(\"Invalid UTF8 byte: \" + i1);\n        }\n    };\n    const chars = new Array();\n    while (pos < bytes.length) {\n        const code = decodeUtf8();\n        chars.push(String.fromCodePoint(code));\n    }\n    return chars.join(\"\");\n}\nclass UTF16LE {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf16le\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf16le_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder(\"utf-16le\").decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf16le\");\n        }\n        else {\n            return utf16le_decode(buffer); // polyfill\n        }\n    }\n}\nclass UTF8 {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof TextEncoder !== \"undefined\") {\n            return new TextEncoder().encode(str);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf8\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf8_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder().decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf8\");\n        }\n        else {\n            return utf8_decode(buffer); // polyfill\n        }\n    }\n}\nconst _UTF16 = new UTF16LE();\nconst _UTF8 = new UTF8();\nexport function get_Unicode() { return _UTF16; }\nexport function get_UTF8() { return _UTF8; }\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","import react from \"react\";\n\nexport const reactApi = react;\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { iterate } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n(() => {\n})();\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    return reactApi.useReducer(update, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n            void undefined;\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    return reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    return reactApi.useMemo(createFunction, defaultArg(dependencies, []));\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        let o;\n        return reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        let o;\n        return reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return reactApi.createElement(reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return reactApi.createElement(reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return reactApi.createElement(reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return reactApi.createElement(reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return reactApi.createElement(reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return reactApi.useState(initial);\n}\n\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { bind, map } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\n\nexport const Impl_allowsPassiveEvents = (() => {\n    let passive = false;\n    try {\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\n                void value;\n            }, {\n                passive: true,\n            });\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\n                void value_1;\n            });\n        }\n    }\n    catch (matchValue) {\n    }\n    return passive;\n})();\n\nexport const Impl_defaultPassive = {\n    passive: true,\n};\n\nexport function Impl_adjustPassive(maybeOptions) {\n    return map((options) => {\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\n            return {\n                capture: options.capture,\n                once: options.once,\n                passive: false,\n            };\n        }\n        else {\n            return options;\n        }\n    }, maybeOptions);\n}\n\nexport function Impl_createRemoveOptions(maybeOptions) {\n    return bind((options) => {\n        if (options.capture) {\n            return {\n                capture: true,\n            };\n        }\n        else {\n            return void 0;\n        }\n    }, maybeOptions);\n}\n\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { ofSeq, ofArray, singleton, empty, collect, map } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { equalsWith } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.20.0/React.fs.js\";\nimport { defaultArg } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\nimport { tryParse } from \"../fable-library.3.0.0-nagareyama-rc-011/Int32.js\";\nimport { FSharpRef } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.0.0-nagareyama-rc-011/Long.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Guid.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.0.0-nagareyama-rc-011/Double.js\";\nimport { tryParse as tryParse_4 } from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport Decimal from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport { map as map_1, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\n\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\n    if (str.indexOf(prefix) === 0) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\n    if (endsWith(str, suffix)) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_encodeQueryString(queryStringPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nfunction RouterModule_normalizeRoute(routeMode) {\n    if (routeMode === 1) {\n        return (_arg1) => {\n            let activePatternResult11624, path, activePatternResult11625, path_1, activePatternResult11626, path_2;\n            return activePatternResult11624 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult11624 != null) ? (path = activePatternResult11624, \"#\" + path) : (activePatternResult11625 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult11625 != null) ? (path_1 = activePatternResult11625, path_1) : (activePatternResult11626 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult11626 != null) ? (path_2 = activePatternResult11626, \"#/\" + substring(path_2, 1, path_2.length - 1)) : (\"#/\" + _arg1)));\n        };\n    }\n    else {\n        return (_arg2) => {\n            let activePatternResult11629, path_4;\n            return activePatternResult11629 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult11629 != null) ? (path_4 = activePatternResult11629, path_4) : (\"/\" + _arg2);\n        };\n    }\n}\n\nexport function RouterModule_encodeParts(xs, routeMode) {\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\n            return part;\n        }\n        else {\n            return encodeURIComponent(part);\n        }\n    }, xs)));\n}\n\nexport function RouterModule_nav(xs, mode, routeMode) {\n    if (mode === 1) {\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    else {\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    const ev = document.createEvent(\"CustomEvent\");\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n    const value = window.dispatchEvent(ev);\n    void value;\n}\n\nexport function RouterModule_urlSegments(path, mode) {\n    return collect((segment) => {\n        if (isNullOrWhiteSpace(segment)) {\n            return empty();\n        }\n        else {\n            const segment_1 = trimEnd(segment, \"#\");\n            if (segment_1 === \"?\") {\n                return empty();\n            }\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\n                return singleton(segment_1);\n            }\n            else {\n                const matchValue = segment_1.split(\"?\");\n                if ((!equalsWith(comparePrimitives, matchValue, null)) ? (matchValue.length === 1) : false) {\n                    const value = matchValue[0];\n                    return singleton(decodeURIComponent(value));\n                }\n                else if ((!equalsWith(comparePrimitives, matchValue, null)) ? (matchValue.length === 2) : false) {\n                    if (matchValue[1] === \"\") {\n                        const value_1 = matchValue[0];\n                        return singleton(decodeURIComponent(value_1));\n                    }\n                    else {\n                        const value_2 = matchValue[0];\n                        const query = matchValue[1];\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\n                    }\n                }\n                else {\n                    return empty();\n                }\n            }\n        }\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\n}\n\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\n}\n\nexport const RouterModule_router = React_memo_62A0F746((input) => {\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\n            void value;\n        });\n        RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\n    });\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\n        const eventType = \"hashchange\";\n        const action_1 = (arg00) => {\n            onChange(arg00);\n        };\n        const options_1 = void 0;\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\n            action_1(arg);\n        }), [action_1]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions == null) {\n                window.addEventListener(eventType, fn);\n            }\n            else {\n                window.addEventListener(eventType, fn, addOptions);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions == null) {\n                    window.removeEventListener(eventType, fn);\n                }\n                else {\n                    window.removeEventListener(eventType, fn, removeOptions);\n                }\n            });\n        }));\n    }\n    else {\n        const eventType_1 = \"popstate\";\n        const action_3 = onChange;\n        const options_5 = void 0;\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n            action_3(arg_1);\n        }), [action_3]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions_1 == null) {\n                window.addEventListener(eventType_1, fn_1);\n            }\n            else {\n                window.addEventListener(eventType_1, fn_1, addOptions_1);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions_1 == null) {\n                    window.removeEventListener(eventType_1, fn_1);\n                }\n                else {\n                    window.removeEventListener(eventType_1, fn_1, removeOptions_1);\n                }\n            });\n        }));\n    }\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\n    const action_4 = onChange;\n    const options_8 = void 0;\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\n        action_4(arg_2);\n    }), [action_4]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        if (addOptions_2 == null) {\n            window.addEventListener(eventType_2, fn_2);\n        }\n        else {\n            window.addEventListener(eventType_2, fn_2, addOptions_2);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions_2 == null) {\n                window.removeEventListener(eventType_2, fn_2);\n            }\n            else {\n                window.removeEventListener(eventType_2, fn_2, removeOptions_2);\n            }\n        });\n    }));\n    const matchValue = input.application;\n    return (matchValue == null) ? null : matchValue;\n});\n\nexport function Route_$007CInt$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CInt64$007C_$007C(input) {\n    let matchValue;\n    let outArg = fromInt(0);\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CGuid$007C_$007C(input) {\n    let matchValue;\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CNumber$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CDecimal$007C_$007C(input) {\n    let matchValue;\n    let outArg = new Decimal(0);\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CBool$007C_$007C(input) {\n    const matchValue = input.toLocaleLowerCase();\n    switch (matchValue) {\n        case \"1\":\n        case \"true\": {\n            return true;\n        }\n        case \"0\":\n        case \"false\": {\n            return false;\n        }\n        case \"\": {\n            return true;\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Route_$007CQuery$007C_$007C(input) {\n    try {\n        const urlParams = new URLSearchParams(input);\n        return ofSeq(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\n","import { Union } from \"./.fable/fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { union_type } from \"./.fable/fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { empty, tryFind, ofArray, singleton } from \"./.fable/fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { map, defaultArg } from \"./.fable/fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { equalsSafe, equals } from \"./.fable/fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { RouterModule_nav } from \"./.fable/Feliz.Router.3.2.0/Router.fs.js\";\n\nexport class Page extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Main\", \"Login\", \"UsersList\", \"UsersAdd\", \"UsersEdit\"];\n    }\n}\n\nexport function Page$reflection() {\n    return union_type(\"Cookbook.Client.Router.Page\", [], Page, () => [[], [], [], [], []]);\n}\n\nconst basicMapping = ofArray([[singleton(\"login\"), new Page(1)], [singleton(\"users\"), new Page(2)], [ofArray([\"users\", \"add\"]), new Page(3)], [ofArray([\"users\", \"edit\"]), new Page(4)]]);\n\nexport function PageModule_parseFromUrlSegments(_arg1) {\n    return defaultArg(map((tuple) => tuple[1], tryFind((tupledArg) => equals(tupledArg[0], _arg1), basicMapping)), new Page(0));\n}\n\nexport function PageModule_toUrlSegments(_arg1) {\n    return defaultArg(map((tuple) => tuple[0], tryFind((tupledArg) => equalsSafe(tupledArg[1], _arg1), basicMapping)), empty());\n}\n\nexport function Router_goToUrl(e) {\n    e.preventDefault();\n    RouterModule_nav(singleton(e.currentTarget.attributes.href.value), 1, 2);\n}\n\nexport function Router_navigatePageCmd(p) {\n    const arg00 = Array.from(PageModule_toUrlSegments(p));\n    return singleton((_arg76) => {\n        RouterModule_nav(ofArray(arg00), 1, 2);\n    });\n}\n\nexport function Router_navigatePage(p) {\n    RouterModule_nav(ofArray(Array.from(PageModule_toUrlSegments(p))), 1, 2);\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { uncurry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { toString } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { join } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { Union } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { string_type, union_type } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/String.js\";\n\nexport class DatabaseError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Unspecified\"];\n    }\n}\n\nexport function DatabaseError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.DatabaseError\", [], DatabaseError, () => [[]]);\n}\n\nexport function DatabaseErrorModule_explain(_arg1) {\n    return \"Unspecified Database error occured\";\n}\n\nexport class UserError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"UserAlreadyExists\"];\n    }\n}\n\nexport function UserError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.UserError\", [], UserError, () => [[[\"username\", string_type]]]);\n}\n\nexport function UserErrorModule_explain(_arg1) {\n    return toText(printf(\"User with username \\u0027%s\\u0027 already exists\"))(_arg1.fields[0]);\n}\n\nexport class AuthenticationError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"InvalidUsernameOrPassword\"];\n    }\n}\n\nexport function AuthenticationError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.AuthenticationError\", [], AuthenticationError, () => [[]]);\n}\n\nexport function AuthenticationErrorModule_explain(_arg1) {\n    return \"Invalid username or password\";\n}\n\nexport class ApplicationError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AuthenticationError\", \"UserError\", \"DatabaseError\"];\n    }\n}\n\nexport function ApplicationError$reflection() {\n    return union_type(\"Cookbook.Shared.Errors.ApplicationError\", [], ApplicationError, () => [[[\"Item\", AuthenticationError$reflection()]], [[\"Item\", UserError$reflection()]], [[\"Item\", DatabaseError$reflection()]]]);\n}\n\nexport function ApplicationErrorModule_explain(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return UserErrorModule_explain(_arg1.fields[0]);\n        }\n        case 2: {\n            return DatabaseErrorModule_explain(_arg1.fields[0]);\n        }\n        default: {\n            return AuthenticationErrorModule_explain(_arg1.fields[0]);\n        }\n    }\n}\n\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { Record } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { list_type, unit_type, lambda_type, union_type, class_type, record_type, string_type } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { ApplicationError$reflection } from \"./Errors.js\";\nimport { FSharpResult$2 } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\n\nexport class Request_Login extends Record {\n    constructor(Username, Password) {\n        super();\n        this.Username = Username;\n        this.Password = Password;\n    }\n}\n\nexport function Request_Login$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Request.Login\", [], Request_Login, () => [[\"Username\", string_type], [\"Password\", string_type]]);\n}\n\nexport class Request_AddUser extends Record {\n    constructor(Username, Name, Password) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n        this.Password = Password;\n    }\n}\n\nexport function Request_AddUser$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Request.AddUser\", [], Request_AddUser, () => [[\"Username\", string_type], [\"Name\", string_type], [\"Password\", string_type]]);\n}\n\nexport class Response_Token extends Record {\n    constructor(Token, ExpiresUtc) {\n        super();\n        this.Token = Token;\n        this.ExpiresUtc = ExpiresUtc;\n    }\n}\n\nexport function Response_Token$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.Token\", [], Response_Token, () => [[\"Token\", string_type], [\"ExpiresUtc\", class_type(\"System.DateTimeOffset\")]]);\n}\n\nexport class Response_UserSession extends Record {\n    constructor(Username, Name, Token, RefreshToken) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n        this.Token = Token;\n        this.RefreshToken = RefreshToken;\n    }\n}\n\nexport function Response_UserSession$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.UserSession\", [], Response_UserSession, () => [[\"Username\", string_type], [\"Name\", string_type], [\"Token\", Response_Token$reflection()], [\"RefreshToken\", Response_Token$reflection()]]);\n}\n\nexport class Response_UserRow extends Record {\n    constructor(Username, Name) {\n        super();\n        this.Username = Username;\n        this.Name = Name;\n    }\n}\n\nexport function Response_UserRow$reflection() {\n    return record_type(\"Cookbook.Shared.Users.Response.UserRow\", [], Response_UserRow, () => [[\"Username\", string_type], [\"Name\", string_type]]);\n}\n\nexport function Route_builder(_arg1, m) {\n    return toText(printf(\"/api/users/%s\"))(m);\n}\n\nexport class UsersService extends Record {\n    constructor(Login, GetUsers, SaveUser) {\n        super();\n        this.Login = Login;\n        this.GetUsers = GetUsers;\n        this.SaveUser = SaveUser;\n    }\n}\n\nexport function UsersService$reflection() {\n    return record_type(\"Cookbook.Shared.Users.UsersService\", [], UsersService, () => [[\"Login\", lambda_type(Request_Login$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Response_UserSession$reflection(), ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", Response_UserSession$reflection()]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))], [\"GetUsers\", lambda_type(unit_type, class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [list_type(Response_UserRow$reflection()), ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", list_type(Response_UserRow$reflection())]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))], [\"SaveUser\", lambda_type(Request_AddUser$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [unit_type, ApplicationError$reflection()], FSharpResult$2, () => [[[\"ResultValue\", unit_type]], [[\"ErrorValue\", ApplicationError$reflection()]]])]))]]);\n}\n\n","import { Record } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { Response_UserSession$reflection } from \"../Shared/Users.js\";\nimport { record_type, lambda_type, unit_type, option_type } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\n\nexport class AuthContext extends Record {\n    constructor(CurrentUser, SetUser, Logout) {\n        super();\n        this.CurrentUser = CurrentUser;\n        this.SetUser = SetUser;\n        this.Logout = Logout;\n    }\n}\n\nexport function AuthContext$reflection() {\n    return record_type(\"Cookbook.Client.Auth.Domain.AuthContext\", [], AuthContext, () => [[\"CurrentUser\", option_type(Response_UserSession$reflection())], [\"SetUser\", lambda_type(Response_UserSession$reflection(), unit_type)], [\"Logout\", lambda_type(unit_type, unit_type)]]);\n}\n\n","import { React_contextProvider_34D9BBBD, React_createContext_1AE444D8 } from \"../.fable/Feliz.1.20.0/React.fs.js\";\nimport { AuthContext as AuthContext_1 } from \"./Domain.js\";\nimport * as react from \"react\";\n\nexport const authContext = React_createContext_1AE444D8(\"AuthContext\", new AuthContext_1(void 0, (value) => {\n    void value;\n}, () => {\n    void undefined;\n}));\n\nexport function AuthContext(AuthContextProps) {\n    return React_contextProvider_34D9BBBD(authContext, AuthContextProps.ctx, react.createElement(react.Fragment, {}, AuthContextProps.children));\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Result_MapError, Result_Map, Result_Bind, FSharpResult$2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\nimport { equals, uncurry, curry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { value as value_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { tryHead, isEmpty } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { singleton } from \"../fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js\";\n\nexport function isOk(x) {\n    if (x.tag === 1) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n\nexport function isError(x) {\n    return !isOk(x);\n}\n\nexport function either(okF, errorF, x) {\n    if (x.tag === 1) {\n        return errorF(x.fields[0]);\n    }\n    else {\n        return okF(x.fields[0]);\n    }\n}\n\nexport function eitherMap(okF, errorF, x) {\n    return either((arg) => (new FSharpResult$2(0, okF(arg))), (arg_1) => (new FSharpResult$2(1, errorF(arg_1))), x);\n}\n\nexport function apply(f, x) {\n    return Result_Bind((f$0027) => Result_Bind((x$0027) => (new FSharpResult$2(0, f$0027(x$0027))), x), f);\n}\n\nexport function map2(f, x, y) {\n    return apply(apply(new FSharpResult$2(0, curry(2, f)), x), y);\n}\n\nexport function map3(f, x, y, z) {\n    return apply(map2(uncurry(2, curry(3, f)), x, y), z);\n}\n\nexport function fold(onOk, onError, r) {\n    if (r.tag === 1) {\n        return onError(r.fields[0]);\n    }\n    else {\n        return onOk(r.fields[0]);\n    }\n}\n\nexport function ofChoice(c) {\n    if (c.tag === 1) {\n        return new FSharpResult$2(1, c.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, c.fields[0]);\n    }\n}\n\nexport function ignore(result) {\n    return Result_Map((value) => {\n        void value;\n    }, result);\n}\n\nexport function requireTrue(error, value) {\n    if (value) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, error);\n    }\n}\n\nexport function requireFalse(error, value) {\n    if (!value) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, error);\n    }\n}\n\nexport function requireSome(error, option) {\n    if (option == null) {\n        return new FSharpResult$2(1, error);\n    }\n    else {\n        return new FSharpResult$2(0, value_1(option));\n    }\n}\n\nexport function requireNone(error, option) {\n    if (option == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, error);\n    }\n}\n\nexport function requireNotNull(error, value) {\n    if (equals(value, null)) {\n        return new FSharpResult$2(1, error);\n    }\n    else {\n        return new FSharpResult$2(0, value);\n    }\n}\n\nexport function requireEqualTo(other, err, this$) {\n    if (equals(this$, other)) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, err);\n    }\n}\n\nexport function requireEqual(x1, x2, error) {\n    if (equals(x1, x2)) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, error);\n    }\n}\n\nexport function requireEmpty(error, xs) {\n    if (isEmpty(xs)) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, error);\n    }\n}\n\nexport function requireNotEmpty(error, xs) {\n    if (isEmpty(xs)) {\n        return new FSharpResult$2(1, error);\n    }\n    else {\n        return new FSharpResult$2(0, void 0);\n    }\n}\n\nexport function requireHead(error, xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        return new FSharpResult$2(1, error);\n    }\n    else {\n        return new FSharpResult$2(0, value_1(matchValue));\n    }\n}\n\nexport function setError(error, result) {\n    return Result_MapError((_arg1) => error, result);\n}\n\nexport function withError(error, result) {\n    return Result_MapError(() => error, result);\n}\n\nexport function defaultValue(ifError, result) {\n    if (result.tag === 1) {\n        return ifError;\n    }\n    else {\n        return result.fields[0];\n    }\n}\n\nexport function defaultWith(ifErrorThunk, result) {\n    if (result.tag === 1) {\n        return ifErrorThunk();\n    }\n    else {\n        return result.fields[0];\n    }\n}\n\nexport function ignoreError(result) {\n    defaultValue(void 0, result);\n}\n\nexport function teeIf(predicate, f, result) {\n    if (result.tag === 1) {\n    }\n    else {\n        const x = result.fields[0];\n        if (predicate(x)) {\n            f(x);\n        }\n    }\n    return result;\n}\n\nexport function teeErrorIf(predicate, f, result) {\n    if (result.tag === 1) {\n        const x = result.fields[0];\n        if (predicate(x)) {\n            f(x);\n        }\n    }\n    return result;\n}\n\nexport function tee(f, result) {\n    return teeIf((_arg1) => true, f, result);\n}\n\nexport function teeError(f, result) {\n    return teeErrorIf((_arg1) => true, f, result);\n}\n\nexport function sequenceAsync(resAsync) {\n    return singleton.Delay(() => ((resAsync.tag === 1) ? singleton.Return(new FSharpResult$2(1, resAsync.fields[0])) : singleton.Bind(resAsync.fields[0], (_arg1) => singleton.Return(new FSharpResult$2(0, _arg1)))));\n}\n\nexport function valueOr(f, res) {\n    if (res.tag === 1) {\n        return f(res.fields[0]);\n    }\n    else {\n        return res.fields[0];\n    }\n}\n\nexport function zip(x1, x2) {\n    const matchValue = [x1, x2];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, [copyOfStruct.fields[0], copyOfStruct_1.fields[0]]);\n        }\n    }\n}\n\n","import { singleton } from \"../fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js\";\nimport { Result_Map, FSharpResult$2, Result_MapError } from \"../fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\nimport { zip as zip_1, teeErrorIf as teeErrorIf_1, teeError as teeError_1, teeIf as teeIf_1, tee as tee_1, defaultWith as defaultWith_1, defaultValue as defaultValue_1, withError as withError_1, setError as setError_1, requireHead as requireHead_1, requireNotEmpty as requireNotEmpty_1, requireEmpty as requireEmpty_1, requireEqualTo as requireEqualTo_1, requireEqual as requireEqual_1, requireNone as requireNone_1, requireSome as requireSome_1, requireFalse as requireFalse_1, requireTrue as requireTrue_1, map3 as map3_1, map2 as map2_1, fold } from \"./Result.fs.js\";\nimport { Async_zip, Async_map3, Async_map2 } from \"./Async.fs.js\";\n\nexport function mapError(f, ar) {\n    return singleton.Bind(ar, (arg) => singleton.Return(Result_MapError(f, arg)));\n}\n\nexport function bind(f, ar) {\n    return singleton.Delay(() => singleton.Bind(ar, (_arg1) => {\n        const result = _arg1;\n        return singleton.ReturnFrom((result.tag === 1) ? singleton.Delay(() => singleton.Return(new FSharpResult$2(1, result.fields[0]))) : f(result.fields[0]));\n    }));\n}\n\nexport function foldResult(onSuccess, onError, ar) {\n    return singleton.Bind(ar, (arg) => singleton.Return(fold(onSuccess, onError, arg)));\n}\n\nexport function retn(x) {\n    return singleton.Return(new FSharpResult$2(0, x));\n}\n\nexport function returnError(x) {\n    return singleton.Return(new FSharpResult$2(1, x));\n}\n\nexport function map2(f, xR, yR) {\n    return Async_map2((x, y) => map2_1(f, x, y), xR, yR);\n}\n\nexport function map3(f, xR, yR, zR) {\n    return Async_map3((x, y, z) => map3_1(f, x, y, z), xR, yR, zR);\n}\n\nexport function apply(fAR, xAR) {\n    return map2((f, x) => f(x), fAR, xAR);\n}\n\nexport function ignore(ar) {\n    return singleton.Bind(ar, (arg) => singleton.Return(Result_Map((value) => {\n        void value;\n    }, arg)));\n}\n\nexport function requireTrue(error, value) {\n    return singleton.Bind(value, (arg) => singleton.Return(requireTrue_1(error, arg)));\n}\n\nexport function requireFalse(error, value) {\n    return singleton.Bind(value, (arg) => singleton.Return(requireFalse_1(error, arg)));\n}\n\nexport function requireSome(error, option) {\n    return singleton.Bind(option, (arg) => singleton.Return(requireSome_1(error, arg)));\n}\n\nexport function requireNone(error, option) {\n    return singleton.Bind(option, (arg) => singleton.Return(requireNone_1(error, arg)));\n}\n\nexport function requireEqual(x1, x2, error) {\n    return singleton.Bind(x2, (arg) => singleton.Return(requireEqual_1(x1, arg, error)));\n}\n\nexport function requireEqualTo(other, error, this$) {\n    return singleton.Bind(this$, (arg) => singleton.Return(requireEqualTo_1(other, error, arg)));\n}\n\nexport function requireEmpty(error, xs) {\n    return singleton.Bind(xs, (arg) => singleton.Return(requireEmpty_1(error, arg)));\n}\n\nexport function requireNotEmpty(error, xs) {\n    return singleton.Bind(xs, (arg) => singleton.Return(requireNotEmpty_1(error, arg)));\n}\n\nexport function requireHead(error, xs) {\n    return singleton.Bind(xs, (arg) => singleton.Return(requireHead_1(error, arg)));\n}\n\nexport function setError(error, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(setError_1(error, arg)));\n}\n\nexport function withError(error, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(withError_1(error, arg)));\n}\n\nexport function defaultValue(ifError, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(defaultValue_1(ifError, arg)));\n}\n\nexport function defaultWith(ifErrorThunk, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(defaultWith_1(ifErrorThunk, arg)));\n}\n\nexport function ignoreError(result) {\n    return defaultValue(void 0, result);\n}\n\nexport function tee(f, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(tee_1(f, arg)));\n}\n\nexport function teeIf(predicate, f, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(teeIf_1(predicate, f, arg)));\n}\n\nexport function teeError(f, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(teeError_1(f, arg)));\n}\n\nexport function teeErrorIf(predicate, f, asyncResult) {\n    return singleton.Bind(asyncResult, (arg) => singleton.Return(teeErrorIf_1(predicate, f, arg)));\n}\n\nexport function zip(x1, x2) {\n    return singleton.Bind(Async_zip(x1, x2), (arg) => {\n        let tupledArg;\n        return singleton.Return((tupledArg = arg, zip_1(tupledArg[0], tupledArg[1])));\n    });\n}\n\n","import { Exception, Record, Union } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { class_type, lambda_type, option_type, int32_type, record_type, bool_type, list_type, tuple_type, array_type, uint8_type, string_type, union_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\n\nexport class HttpMethod extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"GET\", \"POST\"];\n    }\n}\n\nexport function HttpMethod$reflection() {\n    return union_type(\"Fable.Remoting.Client.HttpMethod\", [], HttpMethod, () => [[], []]);\n}\n\nexport class RequestBody extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Empty\", \"Json\", \"Binary\"];\n    }\n}\n\nexport function RequestBody$reflection() {\n    return union_type(\"Fable.Remoting.Client.RequestBody\", [], RequestBody, () => [[], [[\"Item\", string_type]], [[\"Item\", array_type(uint8_type)]]]);\n}\n\nexport class SerializationType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Json\", \"MessagePack\"];\n    }\n}\n\nexport function SerializationType$reflection() {\n    return union_type(\"Fable.Remoting.Client.SerializationType\", [], SerializationType, () => [[], []]);\n}\n\nexport class HttpRequest extends Record {\n    constructor(HttpMethod, Url, Headers, RequestBody, WithCredentials) {\n        super();\n        this.HttpMethod = HttpMethod;\n        this.Url = Url;\n        this.Headers = Headers;\n        this.RequestBody = RequestBody;\n        this.WithCredentials = WithCredentials;\n    }\n}\n\nexport function HttpRequest$reflection() {\n    return record_type(\"Fable.Remoting.Client.HttpRequest\", [], HttpRequest, () => [[\"HttpMethod\", HttpMethod$reflection()], [\"Url\", string_type], [\"Headers\", list_type(tuple_type(string_type, string_type))], [\"RequestBody\", RequestBody$reflection()], [\"WithCredentials\", bool_type]]);\n}\n\nexport class HttpResponse extends Record {\n    constructor(StatusCode, ResponseBody) {\n        super();\n        this.StatusCode = (StatusCode | 0);\n        this.ResponseBody = ResponseBody;\n    }\n}\n\nexport function HttpResponse$reflection() {\n    return record_type(\"Fable.Remoting.Client.HttpResponse\", [], HttpResponse, () => [[\"StatusCode\", int32_type], [\"ResponseBody\", string_type]]);\n}\n\nexport class RemoteBuilderOptions extends Record {\n    constructor(CustomHeaders, BaseUrl, Authorization, WithCredentials, RouteBuilder, ResponseSerialization) {\n        super();\n        this.CustomHeaders = CustomHeaders;\n        this.BaseUrl = BaseUrl;\n        this.Authorization = Authorization;\n        this.WithCredentials = WithCredentials;\n        this.RouteBuilder = RouteBuilder;\n        this.ResponseSerialization = ResponseSerialization;\n    }\n}\n\nexport function RemoteBuilderOptions$reflection() {\n    return record_type(\"Fable.Remoting.Client.RemoteBuilderOptions\", [], RemoteBuilderOptions, () => [[\"CustomHeaders\", list_type(tuple_type(string_type, string_type))], [\"BaseUrl\", option_type(string_type)], [\"Authorization\", option_type(string_type)], [\"WithCredentials\", bool_type], [\"RouteBuilder\", lambda_type(string_type, lambda_type(string_type, string_type))], [\"ResponseSerialization\", SerializationType$reflection()]]);\n}\n\nexport class ProxyRequestException extends Exception {\n    constructor(response, errorMsg, reponseText) {\n        super(errorMsg);\n        this.response = response;\n        this.reponseText = reponseText;\n    }\n}\n\nexport function ProxyRequestException$reflection() {\n    return class_type(\"Fable.Remoting.Client.ProxyRequestException\", void 0, ProxyRequestException, class_type(\"System.Exception\"));\n}\n\nexport function ProxyRequestException_$ctor_76BC5104(response, errorMsg, reponseText) {\n    return new ProxyRequestException(response, errorMsg, reponseText);\n}\n\nexport function ProxyRequestException__get_Response(this$) {\n    return this$.response;\n}\n\nexport function ProxyRequestException__get_StatusCode(this$) {\n    return this$.response.StatusCode;\n}\n\nexport function ProxyRequestException__get_ResponseText(this$) {\n    return this$.reponseText;\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { fromContinuations } from \"../fable-library.3.0.0-nagareyama-rc-011/Async.js\";\nimport { class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { isNullOrWhiteSpace } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\n\nexport function InternalUtilities_toUInt8Array(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else {\n        return new Uint8Array(data);\n    }\n}\n\nexport function Browser_Types_File__File_ReadAsByteArray(instance) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](new Uint8Array(reader.result));\n            }\n        });\n        reader.readAsArrayBuffer(instance);\n    });\n}\n\nexport function Browser_Types_File__File_ReadAsDataUrl(instance) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg4) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](reader.result);\n            }\n        });\n        reader.readAsDataURL(instance);\n    });\n}\n\nexport function Browser_Types_File__File_ReadAsText(instance) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg7) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](reader.result);\n            }\n        });\n        reader.readAsText(instance);\n    });\n}\n\nexport class ByteArrayExtensions {\n    constructor() {\n    }\n}\n\nexport function ByteArrayExtensions$reflection() {\n    return class_type(\"Fable.Remoting.Client.ByteArrayExtensions\", void 0, ByteArrayExtensions);\n}\n\nexport function ByteArrayExtensions_SaveFileAs_72B26259(content, fileName) {\n    if (isNullOrWhiteSpace(fileName)) {\n    }\n    else {\n        const binaryData = InternalUtilities_toUInt8Array(content);\n        const blob = new Blob([binaryData.buffer], { type: \"application/octet-stream\" });\n        const dataUrl = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.style = \"display: none\";\n        anchor.href = dataUrl;\n        anchor.download = fileName;\n        anchor.rel = \"noopener\";\n        anchor.click();\n        anchor.remove();\n        const value = window.setTimeout(() => {\n            URL.revokeObjectURL(dataUrl);\n        }, 40 * 1000);\n        void value;\n    }\n}\n\nexport function ByteArrayExtensions_SaveFileAs_451DD142(content, fileName, mimeType) {\n    if (isNullOrWhiteSpace(fileName)) {\n    }\n    else {\n        const binaryData = InternalUtilities_toUInt8Array(content);\n        const blob = new Blob([binaryData.buffer], { type: mimeType });\n        const dataUrl = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.style = \"display: none\";\n        anchor.href = dataUrl;\n        anchor.download = fileName;\n        anchor.rel = \"noopener\";\n        anchor.click();\n        anchor.remove();\n        const value = window.setTimeout(() => {\n            URL.revokeObjectURL(dataUrl);\n        }, 40 * 1000);\n        void value;\n    }\n}\n\nexport function ByteArrayExtensions_AsDataUrl_6C95DA22(content) {\n    const binaryData = InternalUtilities_toUInt8Array(content);\n    const blob = new Blob([binaryData.buffer], { type: \"application/octet-stream\" });\n    return window.URL.createObjectURL(blob);\n}\n\nexport function ByteArrayExtensions_AsDataUrl_72B26259(content, mimeType) {\n    const binaryData = InternalUtilities_toUInt8Array(content);\n    const blob = new Blob([binaryData.buffer], { type: mimeType });\n    return window.URL.createObjectURL(blob);\n}\n\n","import { HttpResponse, HttpRequest, RequestBody, HttpMethod as HttpMethod_1 } from \"./Types.fs.js\";\nimport { empty } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { fromContinuations } from \"../fable-library.3.0.0-nagareyama-rc-011/Async.js\";\nimport { getEnumerator } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { InternalUtilities_toUInt8Array } from \"./Extensions.fs.js\";\n\nconst defaultRequestConfig = new HttpRequest(new HttpMethod_1(0), \"/\", empty(), new RequestBody(0), false);\n\nexport function get$(url) {\n    return new HttpRequest(new HttpMethod_1(0), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function post(url) {\n    return new HttpRequest(new HttpMethod_1(1), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function request(method, url) {\n    return new HttpRequest(method, url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\n}\n\nexport function withHeaders(headers, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, headers, req.RequestBody, req.WithCredentials);\n}\n\nexport function withCredentials(withCredentials_1, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, req.RequestBody, withCredentials_1);\n}\n\nexport function withBody(body, req) {\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, body, req.WithCredentials);\n}\n\nexport function send(req) {\n    return fromContinuations((tupledArg) => {\n        const xhr = new XMLHttpRequest();\n        if (req.HttpMethod.tag === 1) {\n            xhr.open(\"POST\", req.Url);\n        }\n        else {\n            xhr.open(\"GET\", req.Url);\n        }\n        const enumerator = getEnumerator(req.Headers);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                xhr.setRequestHeader(forLoopVar[0], forLoopVar[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        xhr.withCredentials = true;\n        xhr.onreadystatechange = (() => {\n            if (xhr.readyState === 4) {\n                tupledArg[0](new HttpResponse(xhr.status, xhr.responseText));\n            }\n            else {\n                void undefined;\n            }\n        });\n        const matchValue_4 = req.RequestBody;\n        switch (matchValue_4.tag) {\n            case 1: {\n                xhr.send(some(matchValue_4.fields[0]));\n                break;\n            }\n            case 2: {\n                xhr.send(some(InternalUtilities_toUInt8Array(matchValue_4.fields[0])));\n                break;\n            }\n            default: {\n                xhr.send();\n            }\n        }\n    });\n}\n\nexport function sendAndReadBinary(req) {\n    return fromContinuations((tupledArg) => {\n        const xhr = new XMLHttpRequest();\n        if (req.HttpMethod.tag === 1) {\n            xhr.open(\"POST\", req.Url);\n        }\n        else {\n            xhr.open(\"GET\", req.Url);\n        }\n        xhr.responseType = \"arraybuffer\";\n        const enumerator = getEnumerator(req.Headers);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                xhr.setRequestHeader(forLoopVar[0], forLoopVar[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        xhr.withCredentials = req.WithCredentials;\n        xhr.onreadystatechange = (() => {\n            if (xhr.readyState === 4) {\n                tupledArg[0]([new Uint8Array(xhr.response), xhr.status]);\n            }\n            else {\n                void undefined;\n            }\n        });\n        const matchValue_4 = req.RequestBody;\n        switch (matchValue_4.tag) {\n            case 1: {\n                xhr.send(some(matchValue_4.fields[0]));\n                break;\n            }\n            case 2: {\n                xhr.send(some(InternalUtilities_toUInt8Array(matchValue_4.fields[0])));\n                break;\n            }\n            default: {\n                xhr.send();\n            }\n        }\n    });\n}\n\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { float64_type, float32_type, isEnum, int8_type, fullName, uint16_type, uint32_type, array_type, uint8_type, int16_type, getTupleElements, makeTuple, isTuple, getElementType, isArray, list_type, option_type, isGenericType, makeUnion, getUnionCaseFields, getUnionCases, int32_type, isUnion, getRecordElements, makeRecord, isRecord, obj_type, getGenericTypeDefinition, equals, name, getGenerics, class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { get_UTF8 } from \"../fable-library.3.0.0-nagareyama-rc-011/Encoding.js\";\nimport { isLittleEndian, toDouble, toSingle, toInt64, toUInt64, toInt32, toUInt32, toInt16, toUInt16 } from \"../fable-library.3.0.0-nagareyama-rc-011/BitConverter.js\";\nimport { printf, toFail } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { head, map, fill } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { Dictionary } from \"../fable-library.3.0.0-nagareyama-rc-011/MutableMap.js\";\nimport { compare, structuralHash, equals as equals_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { addToDict } from \"../fable-library.3.0.0-nagareyama-rc-011/MapUtil.js\";\nimport { ofArray } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { FSharpSet__Add, empty } from \"../fable-library.3.0.0-nagareyama-rc-011/Set.js\";\nimport { some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { ofSeq } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { rangeNumber, singleton, collect, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { fromTicks } from \"../fable-library.3.0.0-nagareyama-rc-011/DateOffset.js\";\nimport { fromTicks as fromTicks_2, fromMinutes } from \"../fable-library.3.0.0-nagareyama-rc-011/TimeSpan.js\";\nimport { arrayToGuid } from \"../fable-library.3.0.0-nagareyama-rc-011/Guid.js\";\nimport { fromByteArray } from \"../fable-library.3.0.0-nagareyama-rc-011/BigInt.js\";\nimport { toNumber, fromValue, toInt, fromInteger } from \"../fable-library.3.0.0-nagareyama-rc-011/Long.js\";\nimport { fromTicks as fromTicks_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Date.js\";\nimport Decimal from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\n\nexport function interpretStringAs(typ, str) {\n    return str;\n}\n\nexport class Reader {\n    constructor(data) {\n        this.data = data;\n        this.pos = 0;\n    }\n}\n\nexport function Reader$reflection() {\n    return class_type(\"Fable.Remoting.MsgPack.Read.Reader\", void 0, Reader);\n}\n\nexport function Reader_$ctor_6C95DA22(data) {\n    return new Reader(data);\n}\n\nexport function Reader__ReadByte(_) {\n    _.pos = (_.pos + 1);\n    return _.data[_.pos - 1];\n}\n\nexport function Reader__ReadRawBin_Z524259A4(_, len) {\n    _.pos = (_.pos + len);\n    return _.data.slice(_.pos - len, (_.pos - 1) + 1);\n}\n\nexport function Reader__ReadString_Z524259A4(_, len) {\n    _.pos = (_.pos + len);\n    return get_UTF8().getString(_.data, _.pos - len, len);\n}\n\nexport function Reader__ReadUInt8(x) {\n    return Reader__ReadByte(x);\n}\n\nexport function Reader__ReadInt8(x) {\n    const value = Reader__ReadByte(x);\n    return ((value + 0x80 & 0xFF) - 0x80) | 0;\n}\n\nexport function Reader__ReadUInt16(_) {\n    return Reader__readInt(_, 2, (tupledArg) => toUInt16(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt16(_) {\n    return Reader__readInt(_, 2, (tupledArg) => toInt16(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadUInt32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toUInt32(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toInt32(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadUInt64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toUInt64(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadInt64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toInt64(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadFloat32(_) {\n    return Reader__readInt(_, 4, (tupledArg) => toSingle(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadFloat64(_) {\n    return Reader__readInt(_, 8, (tupledArg) => toDouble(tupledArg[0], tupledArg[1]));\n}\n\nexport function Reader__ReadMap_412036CA(x, len, t) {\n    const args = getGenerics(t);\n    if (args.length !== 2) {\n        const arg10 = name(t);\n        toFail(printf(\"Expecting %s, but the data contains a map.\"))(arg10);\n    }\n    let pairs;\n    const arr = fill(new Array(len), 0, len, null);\n    for (let i = 0; i <= (len - 1); i++) {\n        arr[i] = [Reader__Read_24524716(x, args[0]), Reader__Read_24524716(x, args[1])];\n    }\n    pairs = arr;\n    if (equals(getGenericTypeDefinition(t), class_type(\"System.Collections.Generic.Dictionary`2\", [obj_type, obj_type]))) {\n        const dict = new Dictionary([], {\n            Equals: equals_1,\n            GetHashCode: structuralHash,\n        });\n        pairs.forEach((tupledArg) => {\n            addToDict(dict, tupledArg[0], tupledArg[1]);\n        });\n        return dict;\n    }\n    else {\n        return ofArray(pairs);\n    }\n}\n\nexport function Reader__ReadSet_412036CA(x, len, t) {\n    const args = getGenerics(t);\n    if (args.length !== 1) {\n        const arg10 = name(t);\n        toFail(printf(\"Expecting %s, but the data contains a set.\"))(arg10);\n    }\n    let set$ = empty({\n        Compare: compare,\n    });\n    for (let forLoopVar = 0; forLoopVar <= (len - 1); forLoopVar++) {\n        set$ = FSharpSet__Add(set$, Reader__Read_24524716(x, args[0]));\n    }\n    return set$;\n}\n\nexport function Reader__ReadRawArray_412036CA(x, len, elementType) {\n    const arr = fill(new Array(len), 0, len, null);\n    for (let i = 0; i <= (len - 1); i++) {\n        arr[i] = Reader__Read_24524716(x, elementType);\n    }\n    return arr;\n}\n\nexport function Reader__ReadArray_412036CA(x, len, t) {\n    let value;\n    if (isRecord(t)) {\n        return makeRecord(t, map((prop) => Reader__Read_24524716(x, prop[1]), getRecordElements(t)));\n    }\n    else if (isUnion(t, true)) {\n        const tag = Reader__Read_24524716(x, int32_type);\n        const case$ = getUnionCases(t, true).find((x_1) => (x_1.tag === tag));\n        const fieldTypes = map((x_2) => x_2[1], getUnionCaseFields(case$));\n        return makeUnion(case$, (fieldTypes.length === 1) ? [Reader__Read_24524716(x, fieldTypes[0])] : ((value = Reader__ReadByte(x), void value), map((arg00) => Reader__Read_24524716(x, arg00), fieldTypes)), true);\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), option_type(obj_type)) : false) {\n        if (Reader__ReadByte(x) === 0) {\n            const value_1 = Reader__ReadByte(x);\n            void value_1;\n            return null;\n        }\n        else {\n            return some(Reader__Read_24524716(x, head(getGenerics(t))));\n        }\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), list_type(obj_type)) : false) {\n        const elementType = head(getGenerics(t));\n        return ofSeq(delay(() => collect((matchValue) => singleton(Reader__Read_24524716(x, elementType)), rangeNumber(0, 1, len - 1))));\n    }\n    else if (isArray(t)) {\n        return Reader__ReadRawArray_412036CA(x, len, getElementType(t));\n    }\n    else if (isTuple(t)) {\n        return makeTuple(map((arg00_1) => Reader__Read_24524716(x, arg00_1), getTupleElements(t)), t);\n    }\n    else if (equals(t, class_type(\"System.DateTimeOffset\"))) {\n        return fromTicks(Reader__Read_24524716(x, class_type(\"System.Int64\")), fromMinutes(Reader__Read_24524716(x, int16_type)));\n    }\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [obj_type])) : false) {\n        return Reader__ReadSet_412036CA(x, len, t);\n    }\n    else {\n        const arg20 = x.pos | 0;\n        const arg10 = name(t);\n        return toFail(printf(\"Expecting %s at position %d, but the data contains an array.\"))(arg10)(arg20);\n    }\n}\n\nexport function Reader__ReadBin_412036CA(x, len, t) {\n    if (equals(t, class_type(\"System.Guid\"))) {\n        return arrayToGuid(Reader__ReadRawBin_Z524259A4(x, len));\n    }\n    else if (equals(t, array_type(uint8_type))) {\n        return Reader__ReadRawBin_Z524259A4(x, len);\n    }\n    else if (equals(t, class_type(\"System.Numerics.BigInteger\"))) {\n        return fromByteArray(Reader__ReadRawBin_Z524259A4(x, len));\n    }\n    else {\n        const arg20 = x.pos | 0;\n        const arg10 = name(t);\n        return toFail(printf(\"Expecting %s at position %d, but the data contains bin.\"))(arg10)(arg20);\n    }\n}\n\nexport function Reader__Read_24524716(x, t) {\n    const matchValue = Reader__ReadByte(x);\n    if ((matchValue | 31) === 191) {\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~(matchValue & 31))));\n    }\n    else if (matchValue === 217) {\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadByte(x))));\n    }\n    else if (matchValue === 218) {\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadUInt16(x))));\n    }\n    else if (matchValue === 219) {\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadUInt32(x))));\n    }\n    else if ((matchValue | 127) === 127) {\n        const typ = t;\n        const n = matchValue;\n        if (equals(typ, int32_type)) {\n            return ~(~n);\n        }\n        else if (equals(typ, class_type(\"System.Int64\"))) {\n            return fromInteger(n, false, 4);\n        }\n        else if (equals(typ, int16_type)) {\n            return (n + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n, false, 4));\n        }\n        else if (equals(typ, uint32_type)) {\n            return n;\n        }\n        else if (equals(typ, class_type(\"System.UInt64\"))) {\n            return fromInteger(n, true, 4);\n        }\n        else if (equals(typ, uint16_type)) {\n            return n;\n        }\n        else if (equals(typ, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n, false, 4));\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (n + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~n);\n        }\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n, false, 4);\n        }\n        else if (equals(typ, uint8_type)) {\n            return n;\n        }\n        else if (equals(typ, int8_type)) {\n            return (n + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ)) {\n            return n;\n        }\n        else {\n            const arg20 = name(typ);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n)(arg20);\n        }\n    }\n    else if ((matchValue | 31) === 255) {\n        const typ_1 = t;\n        const n_2 = ((matchValue + 0x80 & 0xFF) - 0x80) | 0;\n        if (equals(typ_1, int32_type)) {\n            return n_2;\n        }\n        else if (equals(typ_1, class_type(\"System.Int64\"))) {\n            return fromInteger(n_2, false, 0);\n        }\n        else if (equals(typ_1, int16_type)) {\n            return n_2;\n        }\n        else if (equals(typ_1, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_2, false, 0));\n        }\n        else if (equals(typ_1, uint32_type)) {\n            return n_2 >>> 0;\n        }\n        else if (equals(typ_1, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_2, true, 0);\n        }\n        else if (equals(typ_1, uint16_type)) {\n            return n_2 & 0xFFFF;\n        }\n        else if (equals(typ_1, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_2, false, 0));\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_2;\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_2;\n        }\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_2, false, 0);\n        }\n        else if (equals(typ_1, uint8_type)) {\n            return n_2 & 0xFF;\n        }\n        else if (equals(typ_1, int8_type)) {\n            return n_2;\n        }\n        else if (isEnum(typ_1)) {\n            return n_2;\n        }\n        else {\n            const arg20_1 = name(typ_1);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_2)(arg20_1);\n        }\n    }\n    else if (matchValue === 192) {\n        return null;\n    }\n    else if (matchValue === 194) {\n        return false;\n    }\n    else if (matchValue === 195) {\n        return true;\n    }\n    else if (matchValue === 202) {\n        const typ_10 = t;\n        const n_20 = Reader__ReadFloat32(x);\n        if (equals(typ_10, float32_type)) {\n            return n_20;\n        }\n        else if (equals(typ_10, float64_type)) {\n            return n_20;\n        }\n        else if (equals(typ_10, class_type(\"System.Decimal\"))) {\n            return new Decimal(n_20);\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float32`1\") {\n            return n_20;\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float`1\") {\n            return n_20;\n        }\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.decimal`1\") {\n            return new Decimal(n_20);\n        }\n        else {\n            const arg20_10 = name(typ_10);\n            return toFail(printf(\"Cannot interpret float %A as %s.\"))(n_20)(arg20_10);\n        }\n    }\n    else if (matchValue === 203) {\n        const typ_11 = t;\n        const n_22 = Reader__ReadFloat64(x);\n        if (equals(typ_11, float32_type)) {\n            return n_22;\n        }\n        else if (equals(typ_11, float64_type)) {\n            return n_22;\n        }\n        else if (equals(typ_11, class_type(\"System.Decimal\"))) {\n            return new Decimal(n_22);\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float32`1\") {\n            return n_22;\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float`1\") {\n            return n_22;\n        }\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.decimal`1\") {\n            return new Decimal(n_22);\n        }\n        else {\n            const arg20_11 = name(typ_11);\n            return toFail(printf(\"Cannot interpret float %A as %s.\"))(n_22)(arg20_11);\n        }\n    }\n    else if (matchValue === 204) {\n        const typ_6 = t;\n        const n_12 = Reader__ReadUInt8(x);\n        if (equals(typ_6, int32_type)) {\n            return ~(~n_12);\n        }\n        else if (equals(typ_6, class_type(\"System.Int64\"))) {\n            return fromInteger(n_12, false, 4);\n        }\n        else if (equals(typ_6, int16_type)) {\n            return (n_12 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_6, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_12, false, 4));\n        }\n        else if (equals(typ_6, uint32_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_12, true, 4);\n        }\n        else if (equals(typ_6, uint16_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_12, false, 4));\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (n_12 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~n_12);\n        }\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_12, false, 4);\n        }\n        else if (equals(typ_6, uint8_type)) {\n            return n_12;\n        }\n        else if (equals(typ_6, int8_type)) {\n            return (n_12 + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_6)) {\n            return n_12;\n        }\n        else {\n            const arg20_6 = name(typ_6);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_12)(arg20_6);\n        }\n    }\n    else if (matchValue === 205) {\n        const typ_7 = t;\n        const n_14 = Reader__ReadUInt16(x);\n        if (equals(typ_7, int32_type)) {\n            return ~(~n_14);\n        }\n        else if (equals(typ_7, class_type(\"System.Int64\"))) {\n            return fromInteger(n_14, false, 5);\n        }\n        else if (equals(typ_7, int16_type)) {\n            return (n_14 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_7, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_14, false, 5));\n        }\n        else if (equals(typ_7, uint32_type)) {\n            return n_14;\n        }\n        else if (equals(typ_7, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_14, true, 5);\n        }\n        else if (equals(typ_7, uint16_type)) {\n            return n_14;\n        }\n        else if (equals(typ_7, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_14, false, 5));\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (n_14 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~n_14);\n        }\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_14, false, 5);\n        }\n        else if (equals(typ_7, uint8_type)) {\n            return n_14 & 0xFF;\n        }\n        else if (equals(typ_7, int8_type)) {\n            return (n_14 + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_7)) {\n            return n_14;\n        }\n        else {\n            const arg20_7 = name(typ_7);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_14)(arg20_7);\n        }\n    }\n    else if (matchValue === 206) {\n        const typ_8 = t;\n        const n_16 = Reader__ReadUInt32(x);\n        if (equals(typ_8, int32_type)) {\n            return ~(~n_16);\n        }\n        else if (equals(typ_8, class_type(\"System.Int64\"))) {\n            return fromInteger(n_16, false, 6);\n        }\n        else if (equals(typ_8, int16_type)) {\n            return (n_16 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_8, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_16, false, 6));\n        }\n        else if (equals(typ_8, uint32_type)) {\n            return n_16;\n        }\n        else if (equals(typ_8, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_16, true, 6);\n        }\n        else if (equals(typ_8, uint16_type)) {\n            return n_16 & 0xFFFF;\n        }\n        else if (equals(typ_8, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_16, false, 6));\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (n_16 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~n_16);\n        }\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_16, false, 6);\n        }\n        else if (equals(typ_8, uint8_type)) {\n            return n_16 & 0xFF;\n        }\n        else if (equals(typ_8, int8_type)) {\n            return (n_16 + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_8)) {\n            return n_16;\n        }\n        else {\n            const arg20_8 = name(typ_8);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_16)(arg20_8);\n        }\n    }\n    else if (matchValue === 207) {\n        const typ_9 = t;\n        const n_18 = Reader__ReadUInt64(x);\n        if (equals(typ_9, int32_type)) {\n            return ~(~toInt(n_18));\n        }\n        else if (equals(typ_9, class_type(\"System.Int64\"))) {\n            return fromValue(n_18, false);\n        }\n        else if (equals(typ_9, int16_type)) {\n            return (toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_9, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromValue(n_18, false));\n        }\n        else if (equals(typ_9, uint32_type)) {\n            return toInt(n_18) >>> 0;\n        }\n        else if (equals(typ_9, class_type(\"System.UInt64\"))) {\n            return fromValue(n_18, true);\n        }\n        else if (equals(typ_9, uint16_type)) {\n            return toInt(n_18) & 0xFFFF;\n        }\n        else if (equals(typ_9, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromValue(n_18, false));\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~toInt(n_18));\n        }\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromValue(n_18, false);\n        }\n        else if (equals(typ_9, uint8_type)) {\n            return toInt(n_18) & 0xFF;\n        }\n        else if (equals(typ_9, int8_type)) {\n            return (toInt(n_18) + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_9)) {\n            return toNumber(n_18);\n        }\n        else {\n            const arg20_9 = name(typ_9);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_18)(arg20_9);\n        }\n    }\n    else if (matchValue === 208) {\n        const typ_5 = t;\n        const n_10 = Reader__ReadInt8(x) | 0;\n        if (equals(typ_5, int32_type)) {\n            return n_10;\n        }\n        else if (equals(typ_5, class_type(\"System.Int64\"))) {\n            return fromInteger(n_10, false, 0);\n        }\n        else if (equals(typ_5, int16_type)) {\n            return n_10;\n        }\n        else if (equals(typ_5, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_10, false, 0));\n        }\n        else if (equals(typ_5, uint32_type)) {\n            return n_10 >>> 0;\n        }\n        else if (equals(typ_5, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_10, true, 0);\n        }\n        else if (equals(typ_5, uint16_type)) {\n            return n_10 & 0xFFFF;\n        }\n        else if (equals(typ_5, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_10, false, 0));\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_10;\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_10;\n        }\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_10, false, 0);\n        }\n        else if (equals(typ_5, uint8_type)) {\n            return n_10 & 0xFF;\n        }\n        else if (equals(typ_5, int8_type)) {\n            return n_10;\n        }\n        else if (isEnum(typ_5)) {\n            return n_10;\n        }\n        else {\n            const arg20_5 = name(typ_5);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_10)(arg20_5);\n        }\n    }\n    else if (matchValue === 209) {\n        const typ_4 = t;\n        const n_8 = Reader__ReadInt16(x) | 0;\n        if (equals(typ_4, int32_type)) {\n            return n_8;\n        }\n        else if (equals(typ_4, class_type(\"System.Int64\"))) {\n            return fromInteger(n_8, false, 1);\n        }\n        else if (equals(typ_4, int16_type)) {\n            return n_8;\n        }\n        else if (equals(typ_4, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_8, false, 1));\n        }\n        else if (equals(typ_4, uint32_type)) {\n            return n_8 >>> 0;\n        }\n        else if (equals(typ_4, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_8, true, 1);\n        }\n        else if (equals(typ_4, uint16_type)) {\n            return n_8 & 0xFFFF;\n        }\n        else if (equals(typ_4, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_8, false, 1));\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int16`1\") {\n            return n_8;\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_8;\n        }\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_8, false, 1);\n        }\n        else if (equals(typ_4, uint8_type)) {\n            return n_8 & 0xFF;\n        }\n        else if (equals(typ_4, int8_type)) {\n            return (n_8 + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_4)) {\n            return n_8;\n        }\n        else {\n            const arg20_4 = name(typ_4);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_8)(arg20_4);\n        }\n    }\n    else if (matchValue === 210) {\n        const typ_3 = t;\n        const n_6 = Reader__ReadInt32(x) | 0;\n        if (equals(typ_3, int32_type)) {\n            return n_6;\n        }\n        else if (equals(typ_3, class_type(\"System.Int64\"))) {\n            return fromInteger(n_6, false, 2);\n        }\n        else if (equals(typ_3, int16_type)) {\n            return (n_6 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_3, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromInteger(n_6, false, 2));\n        }\n        else if (equals(typ_3, uint32_type)) {\n            return n_6 >>> 0;\n        }\n        else if (equals(typ_3, class_type(\"System.UInt64\"))) {\n            return fromInteger(n_6, true, 2);\n        }\n        else if (equals(typ_3, uint16_type)) {\n            return n_6 & 0xFFFF;\n        }\n        else if (equals(typ_3, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromInteger(n_6, false, 2));\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (n_6 + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int32`1\") {\n            return n_6;\n        }\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromInteger(n_6, false, 2);\n        }\n        else if (equals(typ_3, uint8_type)) {\n            return n_6 & 0xFF;\n        }\n        else if (equals(typ_3, int8_type)) {\n            return (n_6 + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_3)) {\n            return n_6;\n        }\n        else {\n            const arg20_3 = name(typ_3);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_6)(arg20_3);\n        }\n    }\n    else if (matchValue === 211) {\n        const typ_2 = t;\n        const n_4 = Reader__ReadInt64(x);\n        if (equals(typ_2, int32_type)) {\n            return ~(~toInt(n_4));\n        }\n        else if (equals(typ_2, class_type(\"System.Int64\"))) {\n            return fromValue(n_4, false);\n        }\n        else if (equals(typ_2, int16_type)) {\n            return (toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (equals(typ_2, class_type(\"System.DateTime\"))) {\n            return fromTicks_1(fromValue(n_4, false));\n        }\n        else if (equals(typ_2, uint32_type)) {\n            return toInt(n_4) >>> 0;\n        }\n        else if (equals(typ_2, class_type(\"System.UInt64\"))) {\n            return fromValue(n_4, true);\n        }\n        else if (equals(typ_2, uint16_type)) {\n            return toInt(n_4) & 0xFFFF;\n        }\n        else if (equals(typ_2, class_type(\"System.TimeSpan\"))) {\n            return fromTicks_2(fromValue(n_4, false));\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int16`1\") {\n            return (toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000;\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int32`1\") {\n            return ~(~toInt(n_4));\n        }\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int64`1\") {\n            return fromValue(n_4, false);\n        }\n        else if (equals(typ_2, uint8_type)) {\n            return toInt(n_4) & 0xFF;\n        }\n        else if (equals(typ_2, int8_type)) {\n            return (toInt(n_4) + 0x80 & 0xFF) - 0x80;\n        }\n        else if (isEnum(typ_2)) {\n            return toNumber(n_4);\n        }\n        else {\n            const arg20_2 = name(typ_2);\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_4)(arg20_2);\n        }\n    }\n    else if ((matchValue | 15) === 159) {\n        return Reader__ReadArray_412036CA(x, ~(~(matchValue & 15)), t);\n    }\n    else if (matchValue === 220) {\n        return Reader__ReadArray_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\n    }\n    else if (matchValue === 221) {\n        return Reader__ReadArray_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\n    }\n    else if ((matchValue | 15) === 143) {\n        return Reader__ReadMap_412036CA(x, ~(~(matchValue & 15)), t);\n    }\n    else {\n        switch (matchValue) {\n            case 196: {\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadByte(x)), t);\n            }\n            case 197: {\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\n            }\n            case 198: {\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\n            }\n            case 222: {\n                return Reader__ReadMap_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\n            }\n            case 223: {\n                return Reader__ReadMap_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\n            }\n            default: {\n                const arg30 = name(t);\n                const arg10_12 = x.pos | 0;\n                return toFail(printf(\"Position %d, byte %d, expected type %s.\"))(arg10_12)(matchValue)(arg30);\n            }\n        }\n    }\n}\n\nfunction Reader__readInt(this$, len, m) {\n    if (isLittleEndian()) {\n        const arr = new Uint8Array(len);\n        for (let i = 0; i <= (len - 1); i++) {\n            arr[i] = this$.data[((this$.pos + len) - 1) - i];\n        }\n        this$.pos = (this$.pos + len);\n        return m([arr, 0]);\n    }\n    else {\n        this$.pos = (this$.pos + len);\n        return m([this$.data, this$.pos - len]);\n    }\n}\n\n","import { fromContinuations } from \"../fable-library.3.0.0-nagareyama-rc-011/Async.js\";\nimport { toFail, printf, toText, trimEnd } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { isGenericType, getFunctionElements, isFunction, getGenerics } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { head, take, equalsWith, last } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { compareSafe } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { singleton } from \"../fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js\";\nimport { ofSeq } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { empty, singleton as singleton_1, append, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { ProxyRequestException_$ctor_76BC5104, HttpResponse, RequestBody } from \"./Types.fs.js\";\nimport { Convert_fromJsonAs, Convert_arrayLike, Convert_serialize } from \"../Fable.SimpleJson.3.17.0/Json.Converter.fs.js\";\nimport { TypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.fs.js\";\nimport { send, get$, post, withBody, withHeaders, sendAndReadBinary } from \"./Http.fs.js\";\nimport { SimpleJson_parseNative } from \"../Fable.SimpleJson.3.17.0/SimpleJson.fs.js\";\nimport { Reader_$ctor_6C95DA22, Reader__Read_24524716 } from \"../Fable.Remoting.MsgPack.1.6.2/Read.fs.js\";\n\nexport function Blob_readBlobAsText(blob) {\n    return fromContinuations((tupledArg) => {\n        const reader = new FileReader();\n        reader.onload = ((_arg1) => {\n            if (reader.readyState === 2) {\n                tupledArg[0](reader.result);\n            }\n        });\n        reader.readAsText(blob);\n    });\n}\n\nexport function Proxy_combineRouteWithBaseUrl(route, baseUrl) {\n    if (baseUrl != null) {\n        const arg10 = trimEnd(baseUrl, \"/\");\n        return toText(printf(\"%s%s\"))(arg10)(route);\n    }\n    else {\n        return route;\n    }\n}\n\nexport function Proxy_extractAsyncArg(asyncType) {\n    return getGenerics(asyncType)[0];\n}\n\nexport function Proxy_isByteArray(_arg1) {\n    if (_arg1.tag === 25) {\n        if (_arg1.fields[0]().tag === 12) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Proxy_isAsyncOfByteArray(_arg1) {\n    if (_arg1.tag === 20) {\n        const matchValue = _arg1.fields[0]();\n        if (matchValue.tag === 25) {\n            if (matchValue.fields[0]().tag === 12) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Proxy_proxyFetch(options, typeName, func, fieldType) {\n    let funcArgs;\n    const matchValue = func.FieldType;\n    switch (matchValue.tag) {\n        case 20: {\n            funcArgs = [func.FieldType];\n            break;\n        }\n        case 21: {\n            funcArgs = [func.FieldType];\n            break;\n        }\n        case 32: {\n            funcArgs = matchValue.fields[0]();\n            break;\n        }\n        default: {\n            funcArgs = toFail(printf(\"Field %s does not have a valid definiton\"))(func.FieldName);\n        }\n    }\n    const argumentCount = (funcArgs.length - 1) | 0;\n    const returnTypeAsync = last(funcArgs);\n    const returnType = (returnTypeAsync.tag === 20) ? returnTypeAsync.fields[0]() : ((returnTypeAsync.tag === 21) ? returnTypeAsync.fields[0]() : toFail(printf(\"Expected field %s to have a return type of Async\\u003c\\u0027t\\u003e\"))(func.FieldName));\n    const readAsBinary = Proxy_isAsyncOfByteArray(returnTypeAsync);\n    let binaryInput;\n    const matchValue_1 = func.FieldType;\n    if (matchValue_1.tag === 32) {\n        const matchValue_2 = matchValue_1.fields[0]();\n        if ((!equalsWith(compareSafe, matchValue_2, null)) ? (matchValue_2.length === 2) : false) {\n            const output = matchValue_2[1];\n            binaryInput = Proxy_isByteArray(matchValue_2[0]);\n        }\n        else {\n            binaryInput = false;\n        }\n    }\n    else {\n        binaryInput = false;\n    }\n    const url = Proxy_combineRouteWithBaseUrl(options.RouteBuilder(typeName, func.FieldName), options.BaseUrl);\n    const funcNeedParameters = ((!equalsWith(compareSafe, funcArgs, null)) ? (funcArgs.length === 1) : false) ? ((funcArgs[0].tag === 20) ? false : ((funcArgs[0].tag === 21) ? false : true)) : (((!equalsWith(compareSafe, funcArgs, null)) ? (funcArgs.length === 2) : false) ? ((funcArgs[0].tag === 0) ? ((funcArgs[1].tag === 20) ? false : true) : true) : true);\n    return (arg0) => ((arg1) => ((arg2) => ((arg3) => ((arg4) => ((arg5) => ((arg6) => ((arg7) => {\n        const inputArguments = funcNeedParameters ? take(argumentCount, [arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7]) : [];\n        const inputArgumentTypes = take(argumentCount, funcArgs);\n        const contentType = binaryInput ? \"application/octet-stream\" : \"application/json; charset=utf8\";\n        return singleton.Delay(() => {\n            const headers = ofSeq(delay(() => append(singleton_1([\"Content-Type\", contentType]), delay(() => append(singleton_1([\"x-remoting-proxy\", \"true\"]), delay(() => append(options.CustomHeaders, delay(() => {\n                const matchValue_3 = options.Authorization;\n                if (matchValue_3 == null) {\n                    return empty();\n                }\n                else {\n                    return singleton_1([\"Authorization\", matchValue_3]);\n                }\n            }))))))));\n            let requestBody;\n            if (binaryInput) {\n                requestBody = (new RequestBody(2, arg0));\n            }\n            else {\n                const matchValue_4 = inputArgumentTypes.length | 0;\n                let pattern_matching_result;\n                if (matchValue_4 === 1) {\n                    if (!Convert_arrayLike(inputArgumentTypes[0])) {\n                        pattern_matching_result = 0;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        requestBody = (new RequestBody(1, Convert_serialize(inputArguments[0], new TypeInfo(27, () => inputArgumentTypes))));\n                        break;\n                    }\n                    case 1: {\n                        requestBody = ((matchValue_4 === 1) ? (new RequestBody(1, Convert_serialize([inputArguments[0]], new TypeInfo(25, () => inputArgumentTypes[0])))) : (new RequestBody(1, Convert_serialize(inputArguments, new TypeInfo(27, () => inputArgumentTypes)))));\n                        break;\n                    }\n                }\n            }\n            return (options.ResponseSerialization.tag === 0) ? (readAsBinary ? singleton.Bind(funcNeedParameters ? sendAndReadBinary(withHeaders(headers, withBody(requestBody, post(url)))) : sendAndReadBinary(withHeaders(headers, get$(url))), (_arg4) => {\n                const statusCode_1 = _arg4[1] | 0;\n                const response_3 = _arg4[0];\n                switch (statusCode_1) {\n                    case 200: {\n                        return singleton.Return(response_3);\n                    }\n                    case 500: {\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response_3.buffer], { type: 'text/plain' })), (_arg5) => {\n                            const response_4 = new HttpResponse(statusCode_1, _arg5);\n                            return singleton.ReturnFrom((() => {\n                                throw ProxyRequestException_$ctor_76BC5104(response_4, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_4.ResponseBody);\n                            })());\n                        });\n                    }\n                    default: {\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response_3.buffer], { type: 'text/plain' })), (_arg6) => {\n                            const response_5 = new HttpResponse(statusCode_1, _arg6);\n                            return singleton.ReturnFrom((() => {\n                                throw ProxyRequestException_$ctor_76BC5104(response_5, toText(printf(\"Http error (%d) while making request to %s\"))(statusCode_1)(url), response_5.ResponseBody);\n                            })());\n                        });\n                    }\n                }\n            }) : singleton.Bind(funcNeedParameters ? send(withHeaders(headers, withBody(requestBody, post(url)))) : send(withHeaders(headers, get$(url))), (_arg7) => {\n                const response_6 = _arg7;\n                const matchValue_6 = response_6.StatusCode | 0;\n                switch (matchValue_6) {\n                    case 200: {\n                        return singleton.Return(Convert_fromJsonAs(SimpleJson_parseNative(response_6.ResponseBody), returnType));\n                    }\n                    case 500: {\n                        return singleton.ReturnFrom((() => {\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_6.ResponseBody);\n                        })());\n                    }\n                    default: {\n                        return singleton.ReturnFrom((() => {\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, toText(printf(\"Http error (%d) from server occured while making request to %s\"))(matchValue_6)(url), response_6.ResponseBody);\n                        })());\n                    }\n                }\n            })) : singleton.Bind(funcNeedParameters ? sendAndReadBinary(withHeaders(headers, withBody(requestBody, post(url)))) : sendAndReadBinary(withHeaders(headers, get$(url))), (_arg1_1) => {\n                const statusCode = _arg1_1[1] | 0;\n                const response = _arg1_1[0];\n                switch (statusCode) {\n                    case 200: {\n                        const getReturnType = (typ_mut) => {\n                            getReturnType:\n                            while (true) {\n                                const typ = typ_mut;\n                                if (isFunction(typ)) {\n                                    typ_mut = getFunctionElements(typ)[1];\n                                    continue getReturnType;\n                                }\n                                else if (isGenericType(typ)) {\n                                    return head(getGenerics(typ));\n                                }\n                                else {\n                                    return typ;\n                                }\n                                break;\n                            }\n                        };\n                        return singleton.Return(Reader__Read_24524716(Reader_$ctor_6C95DA22(response), getReturnType(fieldType)));\n                    }\n                    case 500: {\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response.buffer], { type: 'text/plain' })), (_arg2_1) => {\n                            const response_1 = new HttpResponse(statusCode, _arg2_1);\n                            return singleton.ReturnFrom((() => {\n                                throw ProxyRequestException_$ctor_76BC5104(response_1, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_1.ResponseBody);\n                            })());\n                        });\n                    }\n                    default: {\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response.buffer], { type: 'text/plain' })), (_arg3_1) => {\n                            const response_2 = new HttpResponse(statusCode, _arg3_1);\n                            return singleton.ReturnFrom((() => {\n                                throw ProxyRequestException_$ctor_76BC5104(response_2, toText(printf(\"Http error (%d) while making request to %s\"))(statusCode)(url), response_2.ResponseBody);\n                            })());\n                        });\n                    }\n                }\n            });\n        });\n    })))))));\n}\n\n","import { RemotingModule_withBaseUrl, RemotingModule_createApi, RemotingModule_withRouteBuilder, Remoting_buildProxy_Z15584635 } from \"./.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js\";\nimport { UsersService$reflection, Route_builder } from \"./Shared/Users.js\";\n\nexport const usersService = Remoting_buildProxy_Z15584635((() => {\n    const options_1 = RemotingModule_withRouteBuilder(Route_builder, RemotingModule_createApi());\n    return RemotingModule_withBaseUrl(config.baseUrl, options_1);\n})(), {\n    ResolveType: UsersService$reflection,\n});\n\n","import { empty } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { uncurry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { toFail, printf, toText } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { RemoteBuilderOptions, SerializationType } from \"./Types.fs.js\";\nimport { fullName, makeRecord, getRecordElements, name as name_1, class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { createTypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js\";\nimport { pick, map } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { singleton, collect, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { Proxy_proxyFetch } from \"./Proxy.fs.js\";\n\nexport function RemotingModule_createApi() {\n    let clo1;\n    return new RemoteBuilderOptions(empty(), void 0, void 0, false, uncurry(2, (clo1 = toText(printf(\"/%s/%s\")), (arg10) => {\n        const clo2 = clo1(arg10);\n        return clo2;\n    })), new SerializationType(0));\n}\n\nexport function RemotingModule_withRouteBuilder(builder, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, builder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withBaseUrl(url, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, url, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withCustomHeader(headers, options) {\n    return new RemoteBuilderOptions(headers, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withAuthorizationHeader(token, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, token, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withCredentials(withCredentials, options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, withCredentials, options.RouteBuilder, options.ResponseSerialization);\n}\n\nexport function RemotingModule_withBinarySerialization(options) {\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, new SerializationType(1));\n}\n\nexport class Remoting {\n    constructor() {\n    }\n}\n\nexport function Remoting$reflection() {\n    return class_type(\"Fable.Remoting.Client.Remoting\", void 0, Remoting);\n}\n\nexport function Remoting_$ctor() {\n    return new Remoting();\n}\n\nexport function Remoting_buildProxy_Z15584635(options, resolver) {\n    const resolvedType = resolver.ResolveType();\n    const schemaType = createTypeInfo(resolvedType);\n    if (schemaType.tag === 34) {\n        const patternInput = schemaType.fields[0]();\n        const recordType = patternInput[1];\n        const fieldTypes = map((prop) => [name_1(prop), prop[1]], getRecordElements(recordType));\n        return makeRecord(recordType, Array.from(delay(() => collect((field) => {\n            let n, matchValue, fieldType, fn;\n            return singleton((n = ((matchValue = field.FieldType, (matchValue.tag === 20) ? 0 : ((matchValue.tag === 21) ? 0 : ((matchValue.tag === 32) ? (matchValue.fields[0]().length - 1) : 0))) | 0), (fieldType = pick((tupledArg) => {\n                if (tupledArg[0] === field.FieldName) {\n                    return tupledArg[1];\n                }\n                else {\n                    return void 0;\n                }\n            }, fieldTypes), (fn = Proxy_proxyFetch(options, name_1(recordType), field, fieldType), (n === 0) ? fn(null)(null)(null)(null)(null)(null)(null)(null) : ((n === 1) ? ((a) => fn(a)(null)(null)(null)(null)(null)(null)(null)) : ((n === 2) ? ((delegateArg0, delegateArg1) => fn(delegateArg0)(delegateArg1)(null)(null)(null)(null)(null)(null)) : ((n === 3) ? ((delegateArg0_1, delegateArg1_1, delegateArg2) => fn(delegateArg0_1)(delegateArg1_1)(delegateArg2)(null)(null)(null)(null)(null)) : ((n === 4) ? ((delegateArg0_2, delegateArg1_2, delegateArg2_1, delegateArg3) => fn(delegateArg0_2)(delegateArg1_2)(delegateArg2_1)(delegateArg3)(null)(null)(null)(null)) : ((n === 5) ? ((delegateArg0_3, delegateArg1_3, delegateArg2_2, delegateArg3_1, delegateArg4) => fn(delegateArg0_3)(delegateArg1_3)(delegateArg2_2)(delegateArg3_1)(delegateArg4)(null)(null)(null)) : ((n === 6) ? ((delegateArg0_4, delegateArg1_4, delegateArg2_3, delegateArg3_2, delegateArg4_1, delegateArg5) => fn(delegateArg0_4)(delegateArg1_4)(delegateArg2_3)(delegateArg3_2)(delegateArg4_1)(delegateArg5)(null)(null)) : ((n === 7) ? ((delegateArg0_5, delegateArg1_5, delegateArg2_4, delegateArg3_3, delegateArg4_2, delegateArg5_1, delegateArg6) => fn(delegateArg0_5)(delegateArg1_5)(delegateArg2_4)(delegateArg3_3)(delegateArg4_2)(delegateArg5_1)(delegateArg6)(null)) : ((n === 8) ? ((delegateArg0_6, delegateArg1_6, delegateArg2_5, delegateArg3_4, delegateArg4_3, delegateArg5_2, delegateArg6_1, delegateArg7) => fn(delegateArg0_6)(delegateArg1_6)(delegateArg2_5)(delegateArg3_4)(delegateArg4_3)(delegateArg5_2)(delegateArg6_1)(delegateArg7)) : toFail(printf(\"Cannot generate proxy function for %s. Only up to 8 arguments are supported. Consider using a record type as input\"))(field.FieldName)))))))))))));\n        }, patternInput[0]))));\n    }\n    else {\n        const arg10_1 = fullName(resolvedType);\n        return toFail(printf(\"Cannot build proxy. Exepected type %s to be a valid protocol definition which is a record of functions\"))(arg10_1);\n    }\n}\n\n","import { Union } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { union_type, class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { useReact_useCallback_93353E, React_useStateWithUpdater_1505, useReact_useCallbackRef_7C4B0DD6, useReact_useEffect_Z101E1A95, React_createDisposable_3A5B6456, useReact_useEffectOnce_Z5ECA432F, useReact_useRef_1505, useFeliz_React__React_useState_Static_1505 } from \"../Feliz.1.20.0/React.fs.js\";\nimport { parallel, ignore, isCancellationRequested, startImmediate, cancel, createCancellationToken } from \"../fable-library.3.0.0-nagareyama-rc-011/Async.js\";\nimport { singleton } from \"../fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js\";\nimport { toList, add, empty } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { ofSeq } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { singleton as singleton_1, collect, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\n\nexport class Deferred$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"HasNotStartedYet\", \"InProgress\", \"Resolved\", \"Failed\"];\n    }\n}\n\nexport function Deferred$1$reflection(gen0) {\n    return union_type(\"Feliz.UseDeferred.Deferred`1\", [gen0], Deferred$1, () => [[], [], [[\"Item\", gen0]], [[\"Item\", class_type(\"System.Exception\")]]]);\n}\n\nexport function Deferred_hasNotStartedYet(_arg1) {\n    if (_arg1.tag === 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Deferred_resolved(_arg1) {\n    if (_arg1.tag === 2) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Deferred_inProgress(_arg1) {\n    if (_arg1.tag === 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Deferred_map(transform, deferred) {\n    switch (deferred.tag) {\n        case 1: {\n            return new Deferred$1(1);\n        }\n        case 3: {\n            return new Deferred$1(3, deferred.fields[0]);\n        }\n        case 2: {\n            try {\n                return new Deferred$1(2, transform(deferred.fields[0]));\n            }\n            catch (error_1) {\n                return new Deferred$1(3, error_1);\n            }\n        }\n        default: {\n            return new Deferred$1(0);\n        }\n    }\n}\n\nexport function Deferred_iter(perform, deferred) {\n    if (deferred.tag === 2) {\n        perform(deferred.fields[0]);\n    }\n}\n\nexport function Deferred_exists(predicate, _arg1) {\n    if (_arg1.tag === 2) {\n        return predicate(_arg1.fields[0]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Deferred_bind(transform, deferred) {\n    switch (deferred.tag) {\n        case 1: {\n            return new Deferred$1(1);\n        }\n        case 3: {\n            return new Deferred$1(3, deferred.fields[0]);\n        }\n        case 2: {\n            try {\n                return transform(deferred.fields[0]);\n            }\n            catch (error_1) {\n                return new Deferred$1(3, error_1);\n            }\n        }\n        default: {\n            return new Deferred$1(0);\n        }\n    }\n}\n\nexport function useFeliz_React__React_useDeferred_Static_2344FC52(operation, dependencies) {\n    const patternInput = useFeliz_React__React_useState_Static_1505(new Deferred$1(0));\n    const setDeferred = patternInput[1];\n    let token_1;\n    const cts = useReact_useRef_1505(createCancellationToken());\n    const token = useReact_useRef_1505(cts.current);\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cts.current);\n    }));\n    token_1 = token;\n    const executeOperation = singleton.Delay(() => singleton.TryWith(singleton.Delay(() => {\n        setDeferred(new Deferred$1(1));\n        return singleton.Bind(operation, (_arg1) => {\n            setDeferred(new Deferred$1(2, _arg1));\n            return singleton.Zero();\n        });\n    }), (_arg2) => {\n        setDeferred(new Deferred$1(3, _arg2));\n        return singleton.Zero();\n    }));\n    useReact_useEffect_Z101E1A95(() => {\n        startImmediate(executeOperation, token_1.current);\n    }, dependencies);\n    return patternInput[0];\n}\n\nexport function useFeliz_React__React_useDeferredCallback_Static_7088D81D(operation, setDeferred) {\n    const cancellationToken = useReact_useRef_1505(createCancellationToken());\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cancellationToken.current);\n    }));\n    return useReact_useCallbackRef_7C4B0DD6((arg_1) => {\n        if (!isCancellationRequested(cancellationToken.current)) {\n            startImmediate(singleton.Delay(() => singleton.TryWith(singleton.Delay(() => {\n                setDeferred(new Deferred$1(1));\n                return singleton.Bind(operation(arg_1), (_arg3) => {\n                    setDeferred(new Deferred$1(2, _arg3));\n                    return singleton.Zero();\n                });\n            }), (_arg4) => {\n                setDeferred(new Deferred$1(3, _arg4));\n                return singleton.Zero();\n            })), cancellationToken.current);\n        }\n    });\n}\n\nexport function useFeliz_React__React_useDeferredParallel_Static_Z7E3F34D2(deferred, map) {\n    const patternInput = React_useStateWithUpdater_1505(empty());\n    const addData = useReact_useCallbackRef_7C4B0DD6((tupledArg) => {\n        patternInput[1]((prev) => add(tupledArg[0], tupledArg[1], prev));\n    });\n    let token_1;\n    const cts = useReact_useRef_1505(createCancellationToken());\n    const token = useReact_useRef_1505(cts.current);\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cts.current);\n    }));\n    token_1 = token;\n    const start = useReact_useCallback_93353E((operations_1) => {\n        const value_1 = setTimeout(() => {\n            startImmediate(ignore(parallel(ofSeq(delay(() => collect((matchValue) => {\n                const key_1 = matchValue[0];\n                return singleton_1(singleton.Delay(() => singleton.TryWith(singleton.Delay(() => {\n                    addData([key_1, new Deferred$1(1)]);\n                    return singleton.Bind(matchValue[1], (_arg5) => {\n                        addData([key_1, new Deferred$1(2, _arg5)]);\n                        return singleton.Zero();\n                    });\n                }), (_arg6) => {\n                    addData([key_1, new Deferred$1(3, _arg6)]);\n                    return singleton.Zero();\n                })));\n            }, operations_1))))), token_1.current);\n        }, 0) | 0;\n        void value_1;\n    });\n    useReact_useEffect_Z101E1A95(() => {\n        Deferred_iter((data_1) => {\n            start(map(data_1));\n        }, deferred);\n    }, [deferred]);\n    return toList(patternInput[0]);\n}\n\n","import { useFeliz_React__React_useState_Static_1505 } from \"../../.fable/Feliz.1.20.0/React.fs.js\";\nimport { ofSeq, cons, ofArray, map, singleton as singleton_1, empty } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { singleton } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-011/AsyncBuilder.js\";\nimport { tee, teeError } from \"../../.fable/FsToolkit.ErrorHandling.2.0.0/AsyncResult.fs.js\";\nimport { usersService } from \"../../Server.js\";\nimport { Request_Login } from \"../../Shared/Users.js\";\nimport { Page, Router_navigatePage } from \"../../Router.js\";\nimport { Deferred_inProgress, useFeliz_React__React_useDeferredCallback_Static_7088D81D, Deferred$1 } from \"../../.fable/Feliz.UseDeferred.1.4.0/UseDeferred.fs.js\";\nimport { reactApi } from \"../../.fable/Feliz.1.20.0/Interop.fs.js\";\nimport { createElement } from \"react\";\nimport { createObj } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { Helpers_combineClasses } from \"../../.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js\";\nimport { empty as empty_1, singleton as singleton_2, append, delay } from \"../../.fable/fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\n\nexport function Render(renderProps) {\n    let props_21, props_9, elms, elms_1, props_18, props_16;\n    const handleNewUser = renderProps.handleNewUser;\n    const patternInput = useFeliz_React__React_useState_Static_1505(\"\");\n    const username = patternInput[0];\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(\"\");\n    const password = patternInput_1[0];\n    const patternInput_2 = useFeliz_React__React_useState_Static_1505(empty());\n    const handleLogin = singleton.Delay(() => singleton.Bind(teeError((err) => {\n        patternInput_2[1](singleton_1(\"Login error\"));\n    }, tee(handleNewUser, usersService.Login(new Request_Login(username, password)))), (_arg1) => {\n        Router_navigatePage(new Page(0));\n        return singleton.Return(_arg1);\n    }));\n    const patternInput_3 = useFeliz_React__React_useState_Static_1505(new Deferred$1(0));\n    const startLogin = useFeliz_React__React_useDeferredCallback_Static_7088D81D(() => handleLogin, patternInput_3[1]);\n    const props_23 = singleton_1([\"children\", reactApi.Children.toArray([(props_21 = singleton_1([\"children\", reactApi.Children.toArray([createElement(\"div\", {\n        children: reactApi.Children.toArray(Array.from(map((err_1) => {\n            const props_1 = ofArray([[\"className\", \"is-danger\"], [\"children\", reactApi.Children.toArray([createElement(\"div\", {\n                className: \"message-body\",\n                children: err_1,\n            })])]]);\n            return createElement(\"article\", createObj(Helpers_combineClasses(\"message\", props_1)));\n        }, patternInput_2[0]))),\n    }), createElement(\"form\", {\n        onSubmit: (e) => {\n            e.preventDefault();\n            startLogin();\n        },\n        children: reactApi.Children.toArray([(props_9 = singleton_1([\"children\", reactApi.Children.toArray([createElement(\"label\", createObj(Helpers_combineClasses(\"label\", ofArray([[\"className\", \"has-text-left\"], [\"children\", \"Username\"]])))), (elms = singleton_1(createElement(\"input\", createObj(cons([\"type\", \"text\"], Helpers_combineClasses(\"input\", ofArray([[\"onChange\", (ev) => {\n            patternInput[1](ev.target.value);\n        }], [\"value\", username], [\"autoFocus\", true], [\"name\", \"username\"], [\"required\", true]])))))), createElement(\"div\", {\n            className: \"control\",\n            children: reactApi.Children.toArray(Array.from(elms)),\n        }))])]), createElement(\"div\", createObj(Helpers_combineClasses(\"field\", props_9)))), (elms_1 = ofArray([createElement(\"label\", createObj(Helpers_combineClasses(\"label\", ofArray([[\"className\", \"has-text-left\"], [\"children\", \"Password\"]])))), createElement(\"input\", createObj(cons([\"type\", \"password\"], Helpers_combineClasses(\"input\", ofArray([[\"onChange\", (ev_1) => {\n            patternInput_1[1](ev_1.target.value);\n        }], [\"name\", \"password\"], [\"required\", true], [\"value\", password]])))))]), createElement(\"div\", {\n            className: \"field\",\n            children: reactApi.Children.toArray(Array.from(elms_1)),\n        })), (props_18 = singleton_1([\"children\", reactApi.Children.toArray([(props_16 = ofSeq(delay(() => append(singleton_2([\"className\", \"is-success\"]), delay(() => append(singleton_2([\"className\", \"px-6\"]), delay(() => append(singleton_2([\"className\", \"is-size-5\"]), delay(() => append(Deferred_inProgress(patternInput_3[0]) ? singleton_2([\"className\", \"is-loading\"]) : empty_1(), delay(() => singleton_2([\"value\", \"Login\"]))))))))))), createElement(\"input\", createObj(cons([\"type\", \"submit\"], Helpers_combineClasses(\"button\", props_16)))))])]), createElement(\"div\", createObj(Helpers_combineClasses(\"field\", props_18))))]),\n    })])]), createElement(\"div\", createObj(Helpers_combineClasses(\"box\", props_21))))])]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"container\", props_23)));\n}\n\n","import { FSharpRef, Record, Union } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { record_type, class_type, tuple_type, lambda_type, union_type, list_type, obj_type, string_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\nimport { addToDict, tryGetValue } from \"../fable-library.3.0.0-nagareyama-rc-011/MapUtil.js\";\nimport { replace } from \"../fable-library.3.0.0-nagareyama-rc-011/RegExp.js\";\n\nexport class ErrorReason extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n}\n\nexport function ErrorReason$reflection() {\n    return union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item\", string_type]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport class CaseStrategy extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n}\n\nexport function CaseStrategy$reflection() {\n    return union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\n}\n\nexport class ExtraCoders extends Record {\n    constructor(Hash, Coders) {\n        super();\n        this.Hash = Hash;\n        this.Coders = Coders;\n    }\n}\n\nexport function ExtraCoders$reflection() {\n    return record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", string_type], [\"Coders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, tuple_type(lambda_type(obj_type, obj_type), lambda_type(string_type, lambda_type(obj_type, union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [obj_type, tuple_type(string_type, ErrorReason$reflection())], FSharpResult$2, () => [[[\"ResultValue\", obj_type]], [[\"ErrorValue\", tuple_type(string_type, ErrorReason$reflection())]]]))))])]]);\n}\n\nexport class Util_Cache$1 {\n    constructor() {\n        this.cache = (new Map([]));\n    }\n}\n\nexport function Util_Cache$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\n\nexport function Util_Cache$1_$ctor() {\n    return new Util_Cache$1();\n}\n\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(__.cache, key, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const x_1 = factory();\n        addToDict(__.cache, key, x_1);\n        return x_1;\n    }\n}\n\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\n\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\n\nexport function Util_Casing_lowerFirst(str) {\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\n\nexport function Util_Casing_convert(caseStrategy, fieldName) {\n    switch (caseStrategy.tag) {\n        case 2: {\n            return replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n        }\n        case 0: {\n            return fieldName;\n        }\n        default: {\n            return Util_Casing_lowerFirst(fieldName);\n        }\n    }\n}\n\n","import { toFail, printf, toText, join } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { Result_Map, FSharpResult$2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\nimport { Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert, ErrorReason } from \"./Types.fs.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Guid.js\";\nimport { toString as toString_12, FSharpRef } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.0.0-nagareyama-rc-011/Int32.js\";\nimport { tryParse as tryParse_4, fromInt, fromNumber, toNumber, fromBits } from \"../fable-library.3.0.0-nagareyama-rc-011/Long.js\";\nimport { parse, fromInt32 } from \"../fable-library.3.0.0-nagareyama-rc-011/BigInt.js\";\nimport { tryParse as tryParse_5 } from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport Decimal from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport { toUniversalTime, tryParse as tryParse_6, minValue } from \"../fable-library.3.0.0-nagareyama-rc-011/Date.js\";\nimport { tryParse as tryParse_7, minValue as minValue_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/DateOffset.js\";\nimport { tryParse as tryParse_8 } from \"../fable-library.3.0.0-nagareyama-rc-011/TimeSpan.js\";\nimport { map as map_4, defaultArg, some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { ofArray, map as map_1, length, singleton, append as append_1, ofSeq, empty, reverse, fold, tryLast, cons } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { int16ToString, mapCurriedArgs, compare, int32ToString, uncurry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { map as map_2, tryFind, foldBack2, foldBack, fill, fold as fold_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { contains, fold as fold_2, append, reverse as reverse_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { empty as empty_1, map as map_3, tryFind as tryFind_1, add, ofSeq as ofSeq_1, ofList } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { getGenerics, getGenericTypeDefinition, makeTuple, getTupleElements, isTuple, isGenericType, parseEnum, getEnumValues, getEnumUnderlyingType, isEnum, getElementType, isArray, isUnion, makeRecord, getRecordElements, isRecord, fullName, getUnionCaseFields, makeUnion as makeUnion_1, getUnionCases, name as name_3, class_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { ofSeq as ofSeq_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Set.js\";\n\nexport function Helpers_isUndefined(o) {\n    return (typeof o) === \"undefined\";\n}\n\nfunction genericMsg(msg, value_1, newLine) {\n    try {\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\n    }\n    catch (matchValue) {\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\n    }\n}\n\nfunction errorToString(path, error) {\n    const reason_1 = (error.tag === 2) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 1) ? ((genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \") + error.fields[2]) : ((error.tag === 3) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 4) ? (genericMsg(error.fields[0], error.fields[1], true) + ((\"\\nNode `\" + error.fields[2]) + \"` is unkown.\")) : ((error.tag === 5) ? (((\"Expecting \" + error.fields[0]) + \".\\n\") + (JSON.stringify(error.fields[1], null, 4) + '')) : ((error.tag === 7) ? (\"The following errors were found:\\n\\n\" + join(\"\\n\\n\", error.fields[0])) : ((error.tag === 6) ? (\"The following `failure` occurred with the decoder: \" + error.fields[0]) : genericMsg(error.fields[0], error.fields[1], false)))))));\n    if (error.tag === 7) {\n        return reason_1;\n    }\n    else {\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\n    }\n}\n\nexport function fromValue(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        const error = matchValue.fields[0];\n        return new FSharpResult$2(1, errorToString(error[0], error[1]));\n    }\n    else {\n        return new FSharpResult$2(0, matchValue.fields[0]);\n    }\n}\n\nexport function fromString(decoder, value_1) {\n    try {\n        return fromValue(\"$\", decoder, JSON.parse(value_1));\n    }\n    catch (matchValue) {\n        if (matchValue instanceof SyntaxError) {\n            return new FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n        }\n        else {\n            throw matchValue;\n        }\n    }\n}\n\nexport function unsafeFromString(decoder, value_1) {\n    const matchValue = fromString(decoder, value_1);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport function decodeValue(path, decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromValue(path, decoder_1, value_1);\n}\n\nexport function decodeString(decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromString(decoder_1, value_1);\n}\n\nexport function string(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a string\", value_1)]);\n    }\n}\n\nexport function guid(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\n        matchValue = [tryParse_2(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n    }\n}\n\nexport function unit(path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport const sbyte = (path) => ((value_2) => {\n    const name_1 = \"a sbyte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-128 <= value_4) ? (value_4 <= 127) : false) ? (new FSharpResult$2(0, (value_4 + 0x80 & 0xFF) - 0x80)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const byte = (path) => ((value_2) => {\n    const name_1 = \"a byte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 255) : false) ? (new FSharpResult$2(0, value_4 & 0xFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int16 = (path) => ((value_2) => {\n    const name_1 = \"an int16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-32768 <= value_4) ? (value_4 <= 32767) : false) ? (new FSharpResult$2(0, (value_4 + 0x8000 & 0xFFFF) - 0x8000)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint16 = (path) => ((value_2) => {\n    const name_1 = \"an uint16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 65535) : false) ? (new FSharpResult$2(0, value_4 & 0xFFFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int = (path) => ((value_2) => {\n    const name_1 = \"an int\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) ? (new FSharpResult$2(0, ~(~value_4))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint32 = (path) => ((value_2) => {\n    const name_1 = \"an uint32\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 4294967295) : false) ? (new FSharpResult$2(0, value_4 >>> 0)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int64 = (() => {\n    const min = fromBits(0, 2147483648, false);\n    const max = fromBits(4294967295, 2147483647, false);\n    return (path) => ((value_2) => {\n        const name_1 = \"an int64\";\n        const path_1 = path;\n        const value_3 = value_2;\n        if ((typeof value_3) === \"number\") {\n            const value_4 = value_3;\n            return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(min) <= value_4) ? (value_4 <= toNumber(max)) : false) ? (new FSharpResult$2(0, fromNumber(value_4, false))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n        }\n        else if ((typeof value_3) === \"string\") {\n            let matchValue;\n            let outArg = fromInt(0);\n            matchValue = [tryParse_4(value_3, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n                outArg = v;\n            })), outArg];\n            return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n        }\n        else {\n            return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n        }\n    });\n})();\n\nexport const uint64 = (() => {\n    const min = fromBits(0, 0, true);\n    const max = fromBits(4294967295, 4294967295, true);\n    return (path) => ((value_2) => {\n        const name_1 = \"an uint64\";\n        const path_1 = path;\n        const value_3 = value_2;\n        if ((typeof value_3) === \"number\") {\n            const value_4 = value_3;\n            return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(min) <= value_4) ? (value_4 <= toNumber(max)) : false) ? (new FSharpResult$2(0, fromNumber(value_4, true))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n        }\n        else if ((typeof value_3) === \"string\") {\n            let matchValue;\n            let outArg = fromInt(0);\n            matchValue = [tryParse_4(value_3, 511, true, 64, new FSharpRef(() => outArg, (v) => {\n                outArg = v;\n            })), outArg];\n            return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n        }\n        else {\n            return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n        }\n    });\n})();\n\nexport function bigint(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, fromInt32(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        try {\n            return new FSharpResult$2(0, parse(value_1));\n        }\n        catch (matchValue) {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n    }\n}\n\nexport function bool(path, value_1) {\n    if ((typeof value_1) === \"boolean\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a boolean\", value_1)]);\n    }\n}\n\nexport function float(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float\", value_1)]);\n    }\n}\n\nexport function float32(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float32\", value_1)]);\n    }\n}\n\nexport function decimal(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, new Decimal(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = new Decimal(0);\n        matchValue = [tryParse_5(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n    }\n}\n\nexport function datetime(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue();\n        matchValue = [tryParse_6(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, toUniversalTime(matchValue[1]));\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function datetimeOffset(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue_1();\n        matchValue = [tryParse_7(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetimeoffset\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function timespan(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_8(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n    }\n}\n\nfunction decodeMaybeNull(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        if (value_1 == null) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else if (matchValue.tag === 1) {\n            return new FSharpResult$2(1, matchValue.fields[0]);\n        }\n        else {\n            throw (new Error(\"The match cases were incomplete\"));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, some(matchValue.fields[0]));\n    }\n}\n\nexport function optional(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nfunction badPathError(fieldNames, currentPath, value_1) {\n    return new FSharpResult$2(1, [defaultArg(currentPath, join(\".\", cons(\"$\", fieldNames))), new ErrorReason(4, (\"an object with path `\" + join(\".\", fieldNames)) + \"`\", value_1, defaultArg(tryLast(fieldNames), \"\"))]);\n}\n\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => ((res == null) ? ((curValue == null) ? [curPath, curValue, new FSharpResult$2(0, void 0)] : ((curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) ? [(curPath + \".\") + field_1, curValue[field_1], void 0] : [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])])) : [curPath, curValue, res]);\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        const lastValue = _arg1[1];\n        if (Helpers_isUndefined(lastValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull(_arg1[0], decoder, lastValue);\n        }\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function field(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(1, [path, new ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\n        }\n        else {\n            return decoder((path + \".\") + fieldName, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nexport function at(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => {\n            if (res == null) {\n                if (curValue == null) {\n                    return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n                }\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\n                    const curValue_1 = curValue[field_1];\n                    return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [(curPath + \".\") + field_1, curValue_1, void 0];\n                }\n                else {\n                    return [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])];\n                }\n            }\n            else {\n                return [curPath, curValue, res];\n            }\n        };\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        return decoder(_arg1[0], _arg1[1]);\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function index(requestedIndex, decoder, path, value_1) {\n    let copyOfStruct;\n    const currentPath = ((path + \".[\") + int32ToString(requestedIndex)) + \"]\";\n    if (Array.isArray(value_1)) {\n        const vArray = value_1;\n        if (requestedIndex < vArray.length) {\n            return decoder(currentPath, vArray[requestedIndex]);\n        }\n        else {\n            return new FSharpResult$2(1, [currentPath, new ErrorReason(5, (((\"a longer array. Need index `\" + int32ToString(requestedIndex)) + \"` but there are only `\") + (copyOfStruct = (vArray.length | 0), int32ToString(copyOfStruct))) + \"` entries\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [currentPath, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function option(decoder, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return Result_Map(some, decoder(path, value_1));\n    }\n}\n\nexport function list(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map(reverse, fold_1((acc, value_2) => {\n            i = (i + 1);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons(matchValue.fields[0], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a list\", value_1)]);\n    }\n}\n\nexport function seq(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map(reverse_1, fold_1((acc, value_2) => {\n            i = (i + 1);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, append([matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, []), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a seq\", value_1)]);\n    }\n}\n\nexport function array(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        const tokens = value_1;\n        return fold_1((acc, value_2) => {\n            i = (i + 1);\n            if (acc.tag === 0) {\n                const acc_1 = acc.fields[0];\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    acc_1[i] = matchValue.fields[0];\n                    return new FSharpResult$2(0, acc_1);\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, fill(new Array(tokens.length), 0, tokens.length, null)), tokens);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function keys(path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        return new FSharpResult$2(0, ofSeq(Object.keys(value_1)));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n}\n\nexport function keyValuePairs(decoder, path, value_1) {\n    const matchValue = keys(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return Result_Map(reverse, fold((acc, prop) => {\n            if (acc.tag === 0) {\n                const matchValue_1 = decoder(path, value_1[prop]);\n                if (matchValue_1.tag === 0) {\n                    return new FSharpResult$2(0, cons([prop, matchValue_1.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue_1.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), matchValue.fields[0]));\n    }\n}\n\nexport function oneOf(decoders, path, value_1) {\n    const runner = (decoders_1_mut, errors_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\n            if (decoders_1.tail == null) {\n                return new FSharpResult$2(1, [path, new ErrorReason(7, errors)]);\n            }\n            else {\n                const matchValue = fromValue(path, uncurry(2, decoders_1.head), value_1);\n                if (matchValue.tag === 1) {\n                    decoders_1_mut = decoders_1.tail;\n                    errors_mut = append_1(errors, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n                else {\n                    return new FSharpResult$2(0, matchValue.fields[0]);\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function nil(output, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, output);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport function value(_arg1, v) {\n    return new FSharpResult$2(0, v);\n}\n\nexport function succeed(output, _arg2, _arg1) {\n    return new FSharpResult$2(0, output);\n}\n\nexport function fail(msg, path, _arg1) {\n    return new FSharpResult$2(1, [path, new ErrorReason(6, msg)]);\n}\n\nexport function andThen(cb, decoder, path, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 0) {\n        return cb(matchValue.fields[0], path, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n}\n\nexport function all(decoders, path, value_1) {\n    const runner = (decoders_1_mut, values_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, values = values_mut;\n            if (decoders_1.tail == null) {\n                return new FSharpResult$2(0, values);\n            }\n            else {\n                const matchValue = decoders_1.head(path)(value_1);\n                if (matchValue.tag === 1) {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n                else {\n                    decoders_1_mut = decoders_1.tail;\n                    values_mut = append_1(values, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function map(ctor, d1, path, value_1) {\n    const matchValue = d1(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, ctor(matchValue.fields[0]));\n    }\n}\n\nexport function map2(ctor, d1, d2, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n        }\n    }\n}\n\nexport function map3(ctor, d1, d2, d3, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n            }\n        }\n    }\n}\n\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n                }\n            }\n        }\n    }\n}\n\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                const copyOfStruct_7 = matchValue[7];\n                                if (copyOfStruct_7.tag === 1) {\n                                    return new FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                                }\n                                else {\n                                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function dict(decoder) {\n    let d1;\n    const decoder_1 = decoder;\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\n    return (path_1) => ((value_2) => map(ofList, uncurry(2, d1), path_1, value_2));\n}\n\nfunction unwrapWith(errors, path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        void (errors.push(matchValue.fields[0]));\n        return null;\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport class Getters$1 {\n    constructor(path, v) {\n        this.errors = [];\n        const _this = this;\n        this.required = {\n            Field(fieldName, decoder) {\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\n            },\n            At(fieldNames, decoder_2) {\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\n            },\n            Raw(decoder_4) {\n                return unwrapWith(_this.errors, path, decoder_4, v);\n            },\n        };\n        const _this_1 = this;\n        this.optional = {\n            Field(fieldName_1, decoder_5) {\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\n            },\n            At(fieldNames_1, decoder_7) {\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\n            },\n            Raw(decoder_9) {\n                const matchValue = decoder_9(path, v);\n                if (matchValue.tag === 1) {\n                    const reason = matchValue.fields[0][1];\n                    const error = matchValue.fields[0];\n                    let pattern_matching_result, v_2;\n                    switch (reason.tag) {\n                        case 1: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 2: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 3:\n                        case 4: {\n                            pattern_matching_result = 1;\n                            break;\n                        }\n                        case 5:\n                        case 6:\n                        case 7: {\n                            pattern_matching_result = 2;\n                            break;\n                        }\n                        default: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                        }\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            if (v_2 == null) {\n                                return void 0;\n                            }\n                            else {\n                                void (_this_1.errors.push(error));\n                                return null;\n                            }\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                        case 2: {\n                            void (_this_1.errors.push(error));\n                            return null;\n                        }\n                    }\n                }\n                else {\n                    return some(matchValue.fields[0]);\n                }\n            },\n        };\n    }\n    get Required() {\n        const __ = this;\n        return __.required;\n    }\n    get Optional() {\n        const __ = this;\n        return __.optional;\n    }\n}\n\nexport function Getters$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\n\nexport function Getters$1_$ctor_4A51B60E(path, v) {\n    return new Getters$1(path, v);\n}\n\nexport function Getters$1__get_Errors(__) {\n    return ofSeq(__.errors);\n}\n\nexport function object(builder, path, v) {\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\n    const result = builder(getters);\n    const matchValue = Getters$1__get_Errors(getters);\n    if (matchValue.tail != null) {\n        const errors = matchValue;\n        if (length(errors) > 1) {\n            return new FSharpResult$2(1, [path, new ErrorReason(7, map_1((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors))]);\n        }\n        else {\n            return new FSharpResult$2(1, matchValue.head);\n        }\n    }\n    else {\n        return new FSharpResult$2(0, result);\n    }\n}\n\nexport function tuple2(decoder1, decoder2) {\n    let decoder_3;\n    const decoder = decoder1;\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_3) => ((value_4) => andThen(uncurry(3, (v1) => {\n        let decoder_2;\n        const decoder_1 = decoder2;\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), uncurry(2, decoder_2), path_2, value_3));\n    }), uncurry(2, decoder_3), path_3, value_4));\n}\n\nexport function tuple3(decoder1, decoder2, decoder3) {\n    let decoder_5;\n    const decoder = decoder1;\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_5) => ((value_6) => andThen(uncurry(3, (v1) => {\n        let decoder_4;\n        const decoder_1 = decoder2;\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_4) => ((value_5) => andThen(uncurry(3, (v2) => {\n            let decoder_3;\n            const decoder_2 = decoder3;\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), uncurry(2, decoder_3), path_3, value_4));\n        }), uncurry(2, decoder_4), path_4, value_5));\n    }), uncurry(2, decoder_5), path_5, value_6));\n}\n\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\n    let decoder_7;\n    const decoder = decoder1;\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_7) => ((value_8) => andThen(uncurry(3, (v1) => {\n        let decoder_6;\n        const decoder_1 = decoder2;\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_6) => ((value_7) => andThen(uncurry(3, (v2) => {\n            let decoder_5;\n            const decoder_2 = decoder3;\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_5) => ((value_6) => andThen(uncurry(3, (v3) => {\n                let decoder_4;\n                const decoder_3 = decoder4;\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), uncurry(2, decoder_4), path_4, value_5));\n            }), uncurry(2, decoder_5), path_5, value_6));\n        }), uncurry(2, decoder_6), path_6, value_7));\n    }), uncurry(2, decoder_7), path_7, value_8));\n}\n\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n    let decoder_9;\n    const decoder = decoder1;\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_9) => ((value_10) => andThen(uncurry(3, (v1) => {\n        let decoder_8;\n        const decoder_1 = decoder2;\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_8) => ((value_9) => andThen(uncurry(3, (v2) => {\n            let decoder_7;\n            const decoder_2 = decoder3;\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_7) => ((value_8) => andThen(uncurry(3, (v3) => {\n                let decoder_6;\n                const decoder_3 = decoder4;\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_6) => ((value_7) => andThen(uncurry(3, (v4) => {\n                    let decoder_5;\n                    const decoder_4 = decoder5;\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), uncurry(2, decoder_5), path_5, value_6));\n                }), uncurry(2, decoder_6), path_6, value_7));\n            }), uncurry(2, decoder_7), path_7, value_8));\n        }), uncurry(2, decoder_8), path_8, value_9));\n    }), uncurry(2, decoder_9), path_9, value_10));\n}\n\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n    let decoder_11;\n    const decoder = decoder1;\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_11) => ((value_12) => andThen(uncurry(3, (v1) => {\n        let decoder_10;\n        const decoder_1 = decoder2;\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_10) => ((value_11) => andThen(uncurry(3, (v2) => {\n            let decoder_9;\n            const decoder_2 = decoder3;\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_9) => ((value_10) => andThen(uncurry(3, (v3) => {\n                let decoder_8;\n                const decoder_3 = decoder4;\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_8) => ((value_9) => andThen(uncurry(3, (v4) => {\n                    let decoder_7;\n                    const decoder_4 = decoder5;\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_7) => ((value_8) => andThen(uncurry(3, (v5) => {\n                        let decoder_6;\n                        const decoder_5 = decoder6;\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), uncurry(2, decoder_6), path_6, value_7));\n                    }), uncurry(2, decoder_7), path_7, value_8));\n                }), uncurry(2, decoder_8), path_8, value_9));\n            }), uncurry(2, decoder_9), path_9, value_10));\n        }), uncurry(2, decoder_10), path_10, value_11));\n    }), uncurry(2, decoder_11), path_11, value_12));\n}\n\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n    let decoder_13;\n    const decoder = decoder1;\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_13) => ((value_14) => andThen(uncurry(3, (v1) => {\n        let decoder_12;\n        const decoder_1 = decoder2;\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_12) => ((value_13) => andThen(uncurry(3, (v2) => {\n            let decoder_11;\n            const decoder_2 = decoder3;\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_11) => ((value_12) => andThen(uncurry(3, (v3) => {\n                let decoder_10;\n                const decoder_3 = decoder4;\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_10) => ((value_11) => andThen(uncurry(3, (v4) => {\n                    let decoder_9;\n                    const decoder_4 = decoder5;\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_9) => ((value_10) => andThen(uncurry(3, (v5) => {\n                        let decoder_8;\n                        const decoder_5 = decoder6;\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_8) => ((value_9) => andThen(uncurry(3, (v6) => {\n                            let decoder_7;\n                            const decoder_6 = decoder7;\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), uncurry(2, decoder_7), path_7, value_8));\n                        }), uncurry(2, decoder_8), path_8, value_9));\n                    }), uncurry(2, decoder_9), path_9, value_10));\n                }), uncurry(2, decoder_10), path_10, value_11));\n            }), uncurry(2, decoder_11), path_11, value_12));\n        }), uncurry(2, decoder_12), path_12, value_13));\n    }), uncurry(2, decoder_13), path_13, value_14));\n}\n\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n    let decoder_15;\n    const decoder = decoder1;\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_15) => ((value_16) => andThen(uncurry(3, (v1) => {\n        let decoder_14;\n        const decoder_1 = decoder2;\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_14) => ((value_15) => andThen(uncurry(3, (v2) => {\n            let decoder_13;\n            const decoder_2 = decoder3;\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_13) => ((value_14) => andThen(uncurry(3, (v3) => {\n                let decoder_12;\n                const decoder_3 = decoder4;\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_12) => ((value_13) => andThen(uncurry(3, (v4) => {\n                    let decoder_11;\n                    const decoder_4 = decoder5;\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_11) => ((value_12) => andThen(uncurry(3, (v5) => {\n                        let decoder_10;\n                        const decoder_5 = decoder6;\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_10) => ((value_11) => andThen(uncurry(3, (v6) => {\n                            let decoder_9;\n                            const decoder_6 = decoder7;\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_9) => ((value_10) => andThen(uncurry(3, (v7) => {\n                                let decoder_8;\n                                const decoder_7 = decoder8;\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), uncurry(2, decoder_8), path_8, value_9));\n                            }), uncurry(2, decoder_9), path_9, value_10));\n                        }), uncurry(2, decoder_10), path_10, value_11));\n                    }), uncurry(2, decoder_11), path_11, value_12));\n                }), uncurry(2, decoder_12), path_12, value_13));\n            }), uncurry(2, decoder_13), path_13, value_14));\n        }), uncurry(2, decoder_14), path_14, value_15));\n    }), uncurry(2, decoder_15), path_15, value_16));\n}\n\nfunction toMap(xs) {\n    return ofSeq_1(xs);\n}\n\nfunction toSet(xs) {\n    return ofSeq_2(xs, {\n        Compare: compare,\n    });\n}\n\nfunction autoObject(decoderInfos, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return foldBack(uncurry(2, (tupledArg) => {\n            const name = tupledArg[0];\n            return (acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), tupledArg[1]((path + \".\") + name)(value_1[name])) : acc);\n        }), decoderInfos, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return fold_2((acc, name) => {\n            if (acc.tag === 0) {\n                const matchValue = keyDecoder(path, name);\n                if (matchValue.tag === 0) {\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\n                    if (_arg1.tag === 0) {\n                        return new FSharpResult$2(0, cons([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n                    }\n                    else {\n                        return new FSharpResult$2(1, _arg1.fields[0]);\n                    }\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1));\n    }\n}\n\nfunction mixedArray(msg, decoders, path, values) {\n    let arg30, arg10;\n    if (decoders.length !== values.length) {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, (arg30 = (values.length | 0), (arg10 = (decoders.length | 0), toText(printf(\"Expected %i %s but got %i\"))(arg10)(msg)(arg30))))]);\n    }\n    else {\n        return foldBack2(uncurry(3, mapCurriedArgs((value_1) => ((decoder) => ((acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), decoder(path, value_1)) : acc))), [0, [0, 2], 0])), values, decoders, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n    const uci = tryFind((x) => (name_3(x) === name), getUnionCases(t, true));\n    if (uci != null) {\n        const uci_1 = uci;\n        if (values.length === 0) {\n            return new FSharpResult$2(0, makeUnion_1(uci_1, [], true));\n        }\n        else {\n            return Result_Map((values_1) => makeUnion_1(uci_1, Array.from(values_1), true), mixedArray(\"union fields\", map_2((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), getUnionCaseFields(uci_1)), path, values));\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + fullName(t))]);\n    }\n}\n\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n    const decoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), decoderRef, extra);\n    let decoder;\n    if (isRecord(t, true)) {\n        const decoders = map_2((fi) => [Util_Casing_convert(caseStrategy, name_3(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])], getRecordElements(t, true));\n        decoder = ((path) => ((value_1) => Result_Map((xs) => makeRecord(t, Array.from(xs), true), autoObject(decoders, path, value_1))));\n    }\n    else if (isUnion(t, true)) {\n        decoder = ((path_1) => ((value_2) => {\n            if ((typeof value_2) === \"string\") {\n                return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n            }\n            else if (Array.isArray(value_2)) {\n                const values = value_2;\n                return makeUnion(extra_1, caseStrategy, t, values[0], path_1, values.slice(1, values.length));\n            }\n            else {\n                return new FSharpResult$2(1, [path_1, new ErrorReason(0, \"a string or array\", value_2)]);\n            }\n        }));\n    }\n    else if (isOptional) {\n        decoder = ((path_2) => ((value_3) => (new FSharpResult$2(1, [path_2, new ErrorReason(2, \"an extra coder for \" + fullName(t), value_3)]))));\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    decoderRef.contents = decoder;\n    return decoder;\n}\n\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n    let decoder_15;\n    const fullname = fullName(t);\n    const matchValue = tryFind_1(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const decoder = autoDecoder(extra, caseStrategy, false, getElementType(t));\n            return (path_1) => ((value_2) => array(uncurry(2, decoder), path_1, value_2));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (path_2) => ((value_4) => {\n                    const t_2 = t;\n                    const path_3 = path_2;\n                    const value_5 = value_4;\n                    const matchValue_1 = sbyte(path_3)(value_5);\n                    if (matchValue_1.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_1.fields[0]);\n                    }\n                    else {\n                        const enumValue = matchValue_1.fields[0] | 0;\n                        return contains(enumValue, getEnumValues(t_2)) ? (new FSharpResult$2(0, parseEnum(t_2, enumValue.toString()))) : (new FSharpResult$2(1, [path_3, new ErrorReason(1, fullName(t_2), value_5, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Byte\") {\n                return (path_4) => ((value_7) => {\n                    const t_3 = t;\n                    const path_5 = path_4;\n                    const value_8 = value_7;\n                    const matchValue_2 = byte(path_5)(value_8);\n                    if (matchValue_2.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_2.fields[0]);\n                    }\n                    else {\n                        const enumValue_1 = matchValue_2.fields[0];\n                        return contains(enumValue_1, getEnumValues(t_3)) ? (new FSharpResult$2(0, parseEnum(t_3, enumValue_1.toString()))) : (new FSharpResult$2(1, [path_5, new ErrorReason(1, fullName(t_3), value_8, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int16\") {\n                return (path_6) => ((value_10) => {\n                    const t_4 = t;\n                    const path_7 = path_6;\n                    const value_11 = value_10;\n                    const matchValue_3 = int16(path_7)(value_11);\n                    if (matchValue_3.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_3.fields[0]);\n                    }\n                    else {\n                        const enumValue_2 = matchValue_3.fields[0] | 0;\n                        return contains(enumValue_2, getEnumValues(t_4)) ? (new FSharpResult$2(0, parseEnum(t_4, int16ToString(enumValue_2)))) : (new FSharpResult$2(1, [path_7, new ErrorReason(1, fullName(t_4), value_11, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (path_8) => ((value_13) => {\n                    const t_5 = t;\n                    const path_9 = path_8;\n                    const value_14 = value_13;\n                    const matchValue_4 = uint16(path_9)(value_14);\n                    if (matchValue_4.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_4.fields[0]);\n                    }\n                    else {\n                        const enumValue_3 = matchValue_4.fields[0];\n                        return contains(enumValue_3, getEnumValues(t_5)) ? (new FSharpResult$2(0, parseEnum(t_5, enumValue_3.toString()))) : (new FSharpResult$2(1, [path_9, new ErrorReason(1, fullName(t_5), value_14, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int32\") {\n                return (path_10) => ((value_16) => {\n                    const t_6 = t;\n                    const path_11 = path_10;\n                    const value_17 = value_16;\n                    const matchValue_5 = int(path_11)(value_17);\n                    if (matchValue_5.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_5.fields[0]);\n                    }\n                    else {\n                        const enumValue_4 = matchValue_5.fields[0] | 0;\n                        return contains(enumValue_4, getEnumValues(t_6)) ? (new FSharpResult$2(0, parseEnum(t_6, int32ToString(enumValue_4)))) : (new FSharpResult$2(1, [path_11, new ErrorReason(1, fullName(t_6), value_17, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (path_12) => ((value_19) => {\n                    const t_7 = t;\n                    const path_13 = path_12;\n                    const value_20 = value_19;\n                    const matchValue_6 = uint32(path_13)(value_20);\n                    if (matchValue_6.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_6.fields[0]);\n                    }\n                    else {\n                        const enumValue_5 = matchValue_6.fields[0];\n                        return contains(enumValue_5, getEnumValues(t_7)) ? (new FSharpResult$2(0, parseEnum(t_7, enumValue_5.toString()))) : (new FSharpResult$2(1, [path_13, new ErrorReason(1, fullName(t_7), value_20, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n                return (arg20) => {\n                    const clo3 = clo2(arg20);\n                    return clo3;\n                };\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const decoders = map_2((t_8) => autoDecoder(extra, caseStrategy, false, t_8), getTupleElements(t));\n                return (path_14) => ((value_21) => (Array.isArray(value_21) ? Result_Map((xs) => makeTuple(Array.from(xs), t), mixedArray(\"tuple elements\", decoders, path_14, value_21)) : (new FSharpResult$2(1, [path_14, new ErrorReason(0, \"an array\", value_21)]))));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const decoder_13 = autoDecoder(extra, caseStrategy, true, getGenerics(t)[0]);\n                    return (path_15) => ((value_22) => option(uncurry(2, decoder_13), path_15, value_22));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n                    const decoder_14 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_16) => ((value_23) => list(uncurry(2, decoder_14), path_16, value_23));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    const valueDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[1]);\n                    let d1;\n                    const decoders_1 = ofArray([(path_17) => ((value_24) => autoObject2(uncurry(2, keyDecoder), uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(uncurry(2, keyDecoder), uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(uncurry(2, decoder_15), path_18, value_25)))]);\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\n                    return (path_20) => ((value_28) => map(toMap, uncurry(2, d1), path_20, value_28));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n                    const decoder_16 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_21) => ((value_29) => {\n                        const matchValue_7 = array(uncurry(2, decoder_16), path_21, value_29);\n                        return (matchValue_7.tag === 0) ? (new FSharpResult$2(0, toSet(matchValue_7.fields[0]))) : (new FSharpResult$2(1, matchValue_7.fields[0]));\n                    });\n                }\n                else {\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (path_22) => ((value_31) => bool(path_22, value_31));\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return (path_23) => ((value_32) => unit(path_23, value_32));\n        }\n        else if (fullname === \"System.String\") {\n            return (path_24) => ((value_33) => string(path_24, value_33));\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return int;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return uint32;\n        }\n        else if (fullname === \"System.Double\") {\n            return (path_25) => ((value_34) => float(path_25, value_34));\n        }\n        else if (fullname === \"System.Single\") {\n            return (path_26) => ((value_35) => float32(path_26, value_35));\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\n        }\n        else if (fullname === \"System.Guid\") {\n            return (path_30) => ((value_39) => guid(path_30, value_39));\n        }\n        else if (fullname === \"System.Object\") {\n            return (_arg1_6) => ((v) => (new FSharpResult$2(0, v)));\n        }\n        else {\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n    }\n    else {\n        const decoderRef = matchValue;\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[1])), extra.Coders);\n    }\n    else {\n        return empty_1();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateDecoderCached_7848D058(caseStrategy, extra, resolver) {\n    let y_1, y;\n    const t = resolver.ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedDecoders, (y_1 = (y = fullName(t), toString_12(caseStrategy_1) + y), defaultArg(map_4((e) => e.Hash, extra), \"\") + y_1), () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\n}\n\nexport function Auto_generateDecoder_7848D058(caseStrategy, extra, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const t = resolver.ResolveType();\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}\n\nexport function Auto_fromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    return fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n}\n\nexport function Auto_unsafeFromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    const matchValue = fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\n","import { toString as toString_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport { mapIndexed, map as map_2, fold, getEnumerator } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { empty, map as map_3, tryFind, add, toList } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { toString as toString_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/BigInt.js\";\nimport { toString as toString_3 } from \"../fable-library.3.0.0-nagareyama-rc-011/Date.js\";\nimport { toString as toString_4 } from \"../fable-library.3.0.0-nagareyama-rc-011/TimeSpan.js\";\nimport { Lazy, mapCurriedArgs, uncurry } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { defaultArg, map, defaultArgWith, some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { toString as toString_5, FSharpRef } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { class_type, getGenerics, getGenericTypeDefinition, getTupleFields, getTupleElements, isTuple, isGenericType, getEnumUnderlyingType, isEnum, getElementType, isArray, getUnionCaseFields, getUnionFields, isUnion, getRecordElements, getRecordField, name, isRecord, fullName } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { fill, map as map_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { Util_CachedEncoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert } from \"./Types.fs.js\";\nimport { toFail, printf, toText } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\n\nexport function guid(value) {\n    return value;\n}\n\nexport function decimal(value) {\n    return toString_1(value);\n}\n\nexport const nil = null;\n\nexport function object(values) {\n    const o = {};\n    const enumerator = getEnumerator(values);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            o[forLoopVar[0]] = forLoopVar[1];\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return o;\n}\n\nexport function list(values) {\n    return Array.from(values);\n}\n\nexport function seq(values) {\n    return Array.from(values);\n}\n\nexport function dict(values) {\n    return object(toList(values));\n}\n\nexport function bigint(value) {\n    return toString_2(value);\n}\n\nexport function datetimeOffset(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function timespan(value) {\n    return toString_4(value);\n}\n\nexport function sbyte(value) {\n    return String(value);\n}\n\nexport function byte(value) {\n    return String(value);\n}\n\nexport function int16(value) {\n    return String(value);\n}\n\nexport function uint16(value) {\n    return String(value);\n}\n\nexport function int64(value) {\n    return String(value);\n}\n\nexport function uint64(value) {\n    return String(value);\n}\n\nexport function unit() {\n    return null;\n}\n\nexport function tuple2(enc1, enc2, v1, v2) {\n    return [enc1(v1), enc2(v2)];\n}\n\nexport function tuple3(enc1, enc2, enc3, v1, v2, v3) {\n    return [enc1(v1), enc2(v2), enc3(v3)];\n}\n\nexport function tuple4(enc1, enc2, enc3, enc4, v1, v2, v3, v4) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4)];\n}\n\nexport function tuple5(enc1, enc2, enc3, enc4, enc5, v1, v2, v3, v4, v5) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5)];\n}\n\nexport function tuple6(enc1, enc2, enc3, enc4, enc5, enc6, v1, v2, v3, v4, v5, v6) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6)];\n}\n\nexport function tuple7(enc1, enc2, enc3, enc4, enc5, enc6, enc7, v1, v2, v3, v4, v5, v6, v7) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7)];\n}\n\nexport function tuple8(enc1, enc2, enc3, enc4, enc5, enc6, enc7, enc8, v1, v2, v3, v4, v5, v6, v7, v8) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7), enc8(v8)];\n}\n\nexport function Enum_byte(value) {\n    return byte(value);\n}\n\nexport function Enum_sbyte(value) {\n    return sbyte(value);\n}\n\nexport function Enum_int16(value) {\n    return int16(value);\n}\n\nexport function Enum_uint16(value) {\n    return uint16(value);\n}\n\nexport function Enum_int(value) {\n    return value;\n}\n\nexport function Enum_uint32(value) {\n    return value;\n}\n\nexport function datetime(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function toString(space, value) {\n    return JSON.stringify(value, uncurry(2, null), some(space));\n}\n\nexport function option(encoder) {\n    return (arg) => defaultArgWith(map(encoder, arg), () => nil);\n}\n\nfunction autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t) {\n    const encoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), encoderRef, extra);\n    let encoder;\n    if (isRecord(t, true)) {\n        const setters = map_1((fi) => {\n            const targetKey = Util_Casing_convert(caseStrategy, name(fi));\n            const encode_1 = autoEncoder(extra_1, caseStrategy, skipNullField, fi[1]);\n            return (source) => ((target) => {\n                const value = getRecordField(source, fi);\n                if ((!skipNullField) ? true : (skipNullField ? (!(value == null)) : false)) {\n                    target[targetKey]=encode_1(value);\n                }\n                return target;\n            });\n        }, getRecordElements(t, true));\n        encoder = ((source_1) => fold(uncurry(2, mapCurriedArgs((target_1) => ((set$) => set$(source_1, target_1)), [0, [0, 2]])), {}, setters));\n    }\n    else if (isUnion(t, true)) {\n        encoder = ((value_1) => {\n            const patternInput = getUnionFields(value_1, t, true);\n            const info = patternInput[0];\n            const fields = patternInput[1];\n            const matchValue = fields.length | 0;\n            if (matchValue === 0) {\n                return name(info);\n            }\n            else {\n                const len = matchValue | 0;\n                const fieldTypes = getUnionCaseFields(info);\n                const target_2 = fill(new Array(len + 1), 0, len + 1, null);\n                target_2[0] = name(info);\n                for (let i = 1; i <= len; i++) {\n                    const encode_2 = autoEncoder(extra_1, caseStrategy, skipNullField, fieldTypes[i - 1][1]);\n                    target_2[i] = encode_2(fields[i - 1]);\n                }\n                return target_2;\n            }\n        });\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto encoder for %s. Please pass an extra encoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    encoderRef.contents = encoder;\n    return encoder;\n}\n\nfunction autoEncoder(extra, caseStrategy, skipNullField, t) {\n    const fullname = fullName(t);\n    const matchValue = tryFind(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const encoder = autoEncoder(extra, caseStrategy, skipNullField, getElementType(t));\n            return (value) => seq(map_2(encoder, value));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return sbyte;\n            }\n            else if (enumType === \"System.Byte\") {\n                return byte;\n            }\n            else if (enumType === \"System.Int16\") {\n                return int16;\n            }\n            else if (enumType === \"System.UInt16\") {\n                return uint16;\n            }\n            else if (enumType === \"System.Int32\") {\n                return (value_5) => value_5;\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (value_7) => value_7;\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto encoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra encoder.\\n                    \"))(arg10);\n                return clo2;\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const encoders = map_1((t_2) => autoEncoder(extra, caseStrategy, skipNullField, t_2), getTupleElements(t));\n                return (value_9) => seq(mapIndexed((i, x) => encoders[i](x), getTupleFields(value_9)));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const encoder_2 = new Lazy(() => option(autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0])));\n                    return (value_10) => {\n                        if (value_10 == null) {\n                            return nil;\n                        }\n                        else {\n                            return encoder_2.Value(value_10);\n                        }\n                    };\n                }\n                else if ((fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") ? true : (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\")) {\n                    const encoder_3 = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0]);\n                    return (value_11) => seq(map_2(encoder_3, value_11));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyType = getGenerics(t)[0];\n                    const valueEncoder = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[1]);\n                    if ((fullName(keyType) === \"System.String\") ? true : (fullName(keyType) === \"System.Guid\")) {\n                        return (value_12) => fold((target, _arg1) => {\n                            const activePatternResult15839 = _arg1;\n                            target[activePatternResult15839[0]]=valueEncoder(activePatternResult15839[1]);\n                            return target;\n                        }, {}, value_12);\n                    }\n                    else {\n                        let keyEncoder;\n                        const clo4 = autoEncoder(extra, caseStrategy, skipNullField, keyType);\n                        keyEncoder = (clo4);\n                        return (value_13) => seq(map_2((_arg2) => {\n                            const activePatternResult15843 = _arg2;\n                            return [keyEncoder(activePatternResult15843[0]), valueEncoder(activePatternResult15843[1])];\n                        }, value_13));\n                    }\n                }\n                else {\n                    return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (value_14) => value_14;\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return unit;\n        }\n        else if (fullname === \"System.String\") {\n            return (value_16) => value_16;\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return (value_22) => value_22;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return (value_24) => value_24;\n        }\n        else if (fullname === \"System.Double\") {\n            return (value_26) => value_26;\n        }\n        else if (fullname === \"System.Single\") {\n            return (value_28) => value_28;\n        }\n        else if (fullname === \"System.DateTime\") {\n            return datetime;\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return datetimeOffset;\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return timespan;\n        }\n        else if (fullname === \"System.Guid\") {\n            return guid;\n        }\n        else if (fullname === \"System.Object\") {\n            return (x_1) => x_1;\n        }\n        else {\n            return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n        }\n    }\n    else {\n        const encoderRef = matchValue;\n        return (v) => encoderRef.contents(v);\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[0])), extra.Coders);\n    }\n    else {\n        return empty();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Encode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateEncoderCached_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    let y_1, y;\n    const t = resolver.ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedEncoders, (y_1 = (y = fullName(t), toString_5(caseStrategy_1) + y), defaultArg(map((e) => e.Hash, extra), \"\") + y_1), () => autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t));\n}\n\nexport function Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    const t = resolver.ResolveType();\n    return autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t);\n}\n\nexport function Auto_toString_5A41365E(space, value, caseStrategy, extra, skipNullField, resolver) {\n    return toString(space, Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver)(value));\n}\n\nexport function encode(space, value) {\n    return toString(space, value);\n}\n\n","import { requireNotNull, fold } from \"../.fable/FsToolkit.ErrorHandling.2.0.0/Result.fs.js\";\nimport { Result_Bind } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Choice.js\";\nimport { Auto_fromString_Z5CB6BD } from \"../.fable/Thoth.Json.5.0.0/Decode.fs.js\";\nimport { Response_UserSession$reflection } from \"../Shared/Users.js\";\nimport { Auto_toString_5A41365E } from \"../.fable/Thoth.Json.5.0.0/Encode.fs.js\";\n\nexport function tryGetSession() {\n    return fold((arg0) => arg0, (_arg1) => (void 0), Result_Bind((arg00) => Auto_fromString_Z5CB6BD(arg00, void 0, void 0, {\n        ResolveType: Response_UserSession$reflection,\n    }), requireNotNull(\"None\", localStorage.getItem(\"cookbook.currentUser\"))));\n}\n\nexport function save(user) {\n    localStorage.setItem(\"cookbook.currentUser\", Auto_toString_5A41365E(0, user, void 0, void 0, void 0, {\n        ResolveType: Response_UserSession$reflection,\n    }));\n}\n\nexport function delete$() {\n    localStorage.removeItem(\"cookbook.currentUser\");\n}\n\n","import { RouterModule_router, RouterModule_urlSegments, RouterModule_encodeParts } from \"../.fable/Feliz.Router.3.2.0/Router.fs.js\";\nimport { PageModule_parseFromUrlSegments, Page, Router_goToUrl, PageModule_toUrlSegments } from \"../Router.js\";\nimport { cons, empty as empty_1, singleton as singleton_1, ofArray, ofSeq } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { empty, singleton, append, delay } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { reactApi } from \"../.fable/Feliz.1.20.0/Interop.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { createObj } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { Helpers_combineClasses } from \"../.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js\";\nimport { useReact_useEffectOnce_3A5B6456, useReact_useContext_37FA55CF, useFeliz_React__React_useState_Static_1505 } from \"../.fable/Feliz.1.20.0/React.fs.js\";\nimport { AuthContext as AuthContext_1, authContext } from \"../Auth/Context.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { Render } from \"../Pages/Login/View.js\";\nimport { save, tryGetSession } from \"../Auth/AuthStorage.js\";\nimport { AuthContext } from \"../Auth/Domain.js\";\n\nexport function NavbarMenuItem(NavbarMenuItemProps) {\n    const children = NavbarMenuItemProps.children;\n    const closeBurgerMenu = NavbarMenuItemProps.closeBurgerMenu;\n    const label = NavbarMenuItemProps.label;\n    const url = RouterModule_encodeParts(PageModule_toUrlSegments(NavbarMenuItemProps.page), 2);\n    const currentUrl = RouterModule_encodeParts(RouterModule_urlSegments(window.location.pathname + window.location.search, 2), 2);\n    const props_3 = ofSeq(delay(() => append(singleton([\"key\", currentUrl]), delay(() => append((!(children.tail == null)) ? [[\"className\", \"has-dropdown\"], [\"className\", \"is-hoverable\"]] : empty(), delay(() => singleton([\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-link\", ofArray([[\"href\", url], [\"children\", label], [\"onClick\", (e) => {\n        closeBurgerMenu();\n        Router_goToUrl(e);\n    }]]))))), delay(() => {\n        let elms;\n        return (!(children.tail == null)) ? singleton((elms = ofSeq(delay(() => children)), createElement(\"div\", {\n            className: \"navbar-dropdown\",\n            children: reactApi.Children.toArray(Array.from(elms)),\n        }))) : empty();\n    }))))))])))))));\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"navbar-item\", props_3)));\n}\n\nexport function NavbarLink(NavbarLinkProps) {\n    const closeBurgerMenu = NavbarLinkProps.closeBurgerMenu;\n    const label = NavbarLinkProps.label;\n    const url = RouterModule_encodeParts(PageModule_toUrlSegments(NavbarLinkProps.page), 2);\n    return createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", ofArray([[\"href\", url], [\"children\", label], [\"onClick\", (e) => {\n        closeBurgerMenu();\n        Router_goToUrl(e);\n    }]]))));\n}\n\nexport function TopNavBar(TopNavBarProps) {\n    let elms_3, elms, props, props_5, props_12;\n    const page = TopNavBarProps.page;\n    const patternInput = useFeliz_React__React_useState_Static_1505(false);\n    const setIsActive = patternInput[1];\n    const isActive = patternInput[0];\n    const closeMenu = (_arg1) => {\n        setIsActive(false);\n    };\n    const props_15 = ofArray([[\"className\", \"is-primary\"], [\"className\", \"has-shadow\"], [\"children\", reactApi.Children.toArray([(elms_3 = ofArray([(elms = ofArray([(props = ofSeq(delay(() => append(singleton([\"className\", \"is-size-3\"]), delay(() => append([[\"href\", RouterModule_encodeParts(PageModule_toUrlSegments(new Page(0)), 2)], [\"onClick\", (e) => {\n        Router_goToUrl(e);\n    }]], delay(() => singleton([\"children\", \"HHM\"]))))))), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", props)))), (props_5 = ofSeq(delay(() => append(isActive ? singleton([\"className\", \"is-active\"]) : empty(), delay(() => append(singleton([\"onClick\", (e_1) => {\n        e_1.preventDefault();\n        setIsActive(!isActive);\n    }]), delay(() => singleton([\"children\", reactApi.Children.toArray([createElement(\"span\", {\n        [\"aria-hidden\"]: true,\n    }), createElement(\"span\", {\n        [\"aria-hidden\"]: true,\n    }), createElement(\"span\", {\n        [\"aria-hidden\"]: true,\n    })])]))))))), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-burger\", props_5))))]), createElement(\"div\", {\n        className: \"navbar-brand\",\n        children: reactApi.Children.toArray(Array.from(elms)),\n    })), (props_12 = ofSeq(delay(() => append(isActive ? singleton([\"className\", \"is-active\"]) : empty(), delay(() => {\n        let elms_1, elms_2;\n        return singleton([\"children\", reactApi.Children.toArray([(elms_1 = singleton_1(createElement(NavbarMenuItem, {\n            page: new Page(2),\n            label: \"Cookbook\",\n            closeBurgerMenu: closeMenu,\n            children: singleton_1(createElement(NavbarLink, {\n                page: new Page(3),\n                label: \"Add User\",\n                closeBurgerMenu: closeMenu,\n            })),\n        })), createElement(\"div\", {\n            className: \"navbar-start\",\n            children: reactApi.Children.toArray(Array.from(elms_1)),\n        })), (elms_2 = ofArray([createElement(\"hr\", createObj(Helpers_combineClasses(\"dropdown-divider\", empty_1()))), createElement(NavbarLink, {\n            page: new Page(1),\n            label: \"Login\",\n            closeBurgerMenu: closeMenu,\n        })]), createElement(\"div\", {\n            className: \"navbar-end\",\n            children: reactApi.Children.toArray(Array.from(elms_2)),\n        }))])]);\n    })))), createElement(\"div\", createObj(Helpers_combineClasses(\"navbar-menu\", props_12))))]), createElement(\"div\", {\n        className: \"container\",\n        children: reactApi.Children.toArray(Array.from(elms_3)),\n    }))])]]);\n    return createElement(\"nav\", createObj(Helpers_combineClasses(\"navbar\", props_15)));\n}\n\nexport function MainContent() {\n    let elms_1, elms, s_1;\n    const auth = useReact_useContext_37FA55CF(authContext);\n    const props_6 = ofArray([[\"className\", \"pt-3\"], [\"children\", reactApi.Children.toArray([(elms_1 = ofArray([createElement(\"div\", {\n        className: \"field-label\",\n        children: \"test\",\n    }), (elms = singleton_1(createElement(\"input\", createObj(cons([\"type\", \"text\"], Helpers_combineClasses(\"input\", singleton_1([\"name\", \"test\"])))))), createElement(\"div\", {\n        className: \"field-body\",\n        children: reactApi.Children.toArray(Array.from(elms)),\n    }))]), createElement(\"div\", {\n        className: \"field\",\n        children: reactApi.Children.toArray(Array.from(elms_1)),\n    })), (s_1 = toText(printf(\"User: %A\"))(auth.CurrentUser), createElement(\"div\", {\n        className: \"container\",\n        children: s_1,\n    }))])]]);\n    return createElement(\"section\", createObj(Helpers_combineClasses(\"section\", props_6)));\n}\n\nfunction LoginContent() {\n    let elms, props_2, props;\n    const auth = useReact_useContext_37FA55CF(authContext);\n    const props_5 = ofArray([[\"className\", \"is-primary\"], [\"className\", \"is-fullheight\"], [\"children\", reactApi.Children.toArray([(elms = singleton_1((props_2 = ofArray([[\"className\", \"has-text-centered\"], [\"children\", reactApi.Children.toArray([(props = ofArray([[\"className\", \"is-4\"], [\"className\", \"is-offset-4\"], [\"children\", reactApi.Children.toArray([createElement(Render, {\n        handleNewUser: auth.SetUser,\n    })])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"column\", props))))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"container\", props_2))))), createElement(\"div\", {\n        className: \"hero-body\",\n        children: reactApi.Children.toArray(Array.from(elms)),\n    }))])]]);\n    return createElement(\"section\", createObj(Helpers_combineClasses(\"hero\", props_5)));\n}\n\nexport function MainView(MainViewProps) {\n    const page = MainViewProps.page;\n    return react.createElement(react.Fragment, {}, createElement(TopNavBar, {\n        page: page,\n    }), createElement(MainContent, null));\n}\n\nexport function GetTemplate(GetTemplateProps) {\n    const page = GetTemplateProps.page;\n    switch (page.tag) {\n        case 1: {\n            return createElement(LoginContent, null);\n        }\n        case 3: {\n            return createElement(MainView, {\n                page: page,\n            });\n        }\n        case 2: {\n            return createElement(MainView, {\n                page: page,\n            });\n        }\n        default: {\n            return createElement(MainView, {\n                page: page,\n            });\n        }\n    }\n}\n\nexport function MainApplication() {\n    const patternInput = useFeliz_React__React_useState_Static_1505(PageModule_parseFromUrlSegments(RouterModule_urlSegments(window.location.pathname + window.location.search, 2)));\n    const patternInput_1 = useFeliz_React__React_useState_Static_1505(void 0);\n    const setUser = patternInput_1[1];\n    useReact_useEffectOnce_3A5B6456(() => {\n        setUser(tryGetSession());\n    });\n    const ctx = new AuthContext(patternInput_1[0], (u) => {\n        save(u);\n        setUser(u);\n    }, () => {\n        setUser(void 0);\n    });\n    return RouterModule_router({\n        hashMode: 2,\n        onUrlChanged: (arg) => {\n            patternInput[1](PageModule_parseFromUrlSegments(arg));\n        },\n        application: react.createElement(react.Fragment, {}, createElement(AuthContext_1, {\n            ctx: ctx,\n            children: createElement(GetTemplate, {\n                page: patternInput[0],\n            }),\n        })),\n    });\n}\n\n","import { initStyles } from \"./AppStyles.js\";\nimport { render } from \"react-dom\";\nimport { createElement } from \"react\";\nimport { MainApplication } from \"./App/View.js\";\n\ninitStyles();\n\nrender(createElement(MainApplication, null), document.getElementById(\"elmish-app\"));\n\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { equals } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                const value = Dictionary__Remove_2B595(this$, item[0]);\n                void value;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const value = HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                void value;\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, item);\n        void value;\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, k);\n        void value;\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            f(x, x, this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                void undefined;\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { Record } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { string_type, record_type, int32_type } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { seq, noneOf, optWhitespace, whitespace, oneOf, string, takeWhile, test, fail, all, any, digit, lookahead, succeed, eof, letters, letter, lazy, index } from \"./Parsimmon.js\";\nimport { join } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { reduce } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\n\nexport class TokenPosition extends Record {\n    constructor(offset, line, column) {\n        super();\n        this.offset = (offset | 0);\n        this.line = (line | 0);\n        this.column = (column | 0);\n    }\n}\n\nexport function TokenPosition$reflection() {\n    return record_type(\"Fable.Parsimmon.TokenPosition\", [], TokenPosition, () => [[\"offset\", int32_type], [\"line\", int32_type], [\"column\", int32_type]]);\n}\n\nexport class NodeResult$1 extends Record {\n    constructor(name, value, start, end) {\n        super();\n        this.name = name;\n        this.value = value;\n        this.start = start;\n        this.end = end;\n    }\n}\n\nexport function NodeResult$1$reflection(gen0) {\n    return record_type(\"Fable.Parsimmon.NodeResult`1\", [gen0], NodeResult$1, () => [[\"name\", string_type], [\"value\", gen0], [\"start\", TokenPosition$reflection()], [\"end\", TokenPosition$reflection()]]);\n}\n\nexport function Parsimmon_parseRaw(input, parser) {\n    return parser.parse(input);\n}\n\nexport function Parsimmon_parse(input, parser) {\n    const result = parser.parse(input);\n    if (result.status) {\n        return some(result.value);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport const Parsimmon_index = index;\n\nexport function Parsimmon_orTry(otherParser, parser) {\n    return parser.or(otherParser);\n}\n\nexport function Parsimmon_times(n, parser) {\n    return parser.times(n);\n}\n\nexport function Parsimmon_atLeast(n, parser) {\n    return parser.atLeast(n);\n}\n\nexport function Parsimmon_atMost(n, parser) {\n    return parser.atMost(n);\n}\n\nexport function Parsimmon_skip(skipped, keep) {\n    return keep.skip(skipped);\n}\n\nexport function Parsimmon_many(parser) {\n    return parser.many();\n}\n\nexport const Parsimmon_ofLazy = lazy;\n\nexport function Parsimmon_seperateByAtLeastOne(seperator, parser) {\n    return parser.sepBy1(seperator);\n}\n\nexport function Parsimmon_chain(after, before) {\n    return before.then(after);\n}\n\nexport function Parsimmon_bind(f, p) {\n    return p.chain(f);\n}\n\nexport const Parsimmon_letter = letter;\n\nexport function Parsimmon_timesBetween(min, max, parser) {\n    return parser.times(min, max);\n}\n\nexport const Parsimmon_letters = letters;\n\nexport const Parsimmon_endOfFile = eof;\n\nexport function Parsimmon_notFollowedBy(p, before) {\n    return before.notFollowedBy(p);\n}\n\nexport const Parsimmon_succeed = succeed;\n\nexport const Parsimmon_lookahead = lookahead;\n\nexport const Parsimmon_digit = digit;\n\nexport const Parsimmon_digits = Parsimmon_many(Parsimmon_digit);\n\nexport function Parsimmon_fallback(value, parser) {\n    return parser.fallback(value);\n}\n\nexport function Parsimmon_seperateBy(content, others) {\n    return others.sepBy(content);\n}\n\nexport function Parsimmon_between(left, right, middle) {\n    return Parsimmon_skip(right, Parsimmon_chain(middle, left));\n}\n\nexport function Parsimmon_map(f, parser) {\n    return parser.map(f);\n}\n\nexport function Parsimmon_tie(parser) {\n    return Parsimmon_map((strings) => join(\"\", strings), parser);\n}\n\nexport const Parsimmon_any = any;\n\nexport function Parsimmon_choose(ps) {\n    return reduce((acc, parser) => (acc.or(parser)), ps);\n}\n\nexport const Parsimmon_all = all;\n\nexport const Parsimmon_fail = fail;\n\nexport const Parsimmon_satisfy = test;\n\nexport const Parsimmon_takeWhile = takeWhile;\n\nexport const Parsimmon_str = string;\n\nexport const Parsimmon_oneOf = oneOf;\n\nexport const Parsimmon_whitespace = whitespace;\n\nexport const Parsimmon_optionalWhitespace = optWhitespace;\n\nexport function Parsimmon_atLeastOneOrMany(parser) {\n    return Parsimmon_atLeast(1, parser);\n}\n\nexport function Parsimmon_stringReturn(input, value) {\n    return Parsimmon_map((_arg1) => value, Parsimmon_str(input));\n}\n\nexport const Parsimmon_noneOf = noneOf;\n\nexport const Parsimmon_seq2 = seq;\n\nexport function Parsimmon_trim(trimmed, p) {\n    return p.trim(trimmed);\n}\n\nexport function Parsimmon_concat(parser) {\n    return parser.map((strings) => join(\"\", strings));\n}\n\nexport const Parsimmon_seq3 = seq;\n\nexport const Parsimmon_seq4 = seq;\n\nexport const Parsimmon_seq5 = seq;\n\nexport function Parsimmon_node(description, p) {\n    return p.node(description);\n}\n\n","import { Parsimmon_seperateBy, Parsimmon_ofLazy, Parsimmon_optionalWhitespace, Parsimmon_between, Parsimmon_satisfy, Parsimmon_orTry, Parsimmon_oneOf, Parsimmon_stringReturn, Parsimmon_choose, Parsimmon_many, Parsimmon_seq3, Parsimmon_str, Parsimmon_seq2, Parsimmon_map, Parsimmon_digit, Parsimmon_atLeastOneOrMany, Parsimmon_concat } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\nimport { parse } from \"../fable-library.3.0.0-nagareyama-rc-011/Double.js\";\nimport { join } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { Json } from \"./Json.fs.js\";\nimport { map, ofArray } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { ofList } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { Lazy } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\n\nexport const digits = Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit));\n\nexport const jint = Parsimmon_map(parse, digits);\n\nexport const negJint = Parsimmon_map((tupledArg) => (-tupledArg[1]), Parsimmon_seq2(Parsimmon_str(\"-\"), jint));\n\nexport const jfloat = Parsimmon_map((tupledArg) => {\n    const digitsLeft = tupledArg[0];\n    return parse(join(\"\", [(digitsLeft === \"\") ? \"0\" : digitsLeft, tupledArg[1], tupledArg[2]]));\n}, Parsimmon_seq3(Parsimmon_concat(Parsimmon_many(Parsimmon_digit)), Parsimmon_str(\".\"), Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit))));\n\nexport const negativeJFloat = Parsimmon_map((tupledArg) => (-tupledArg[1]), Parsimmon_seq2(Parsimmon_str(\"-\"), jfloat));\n\nexport const jnumber = Parsimmon_map((arg0) => (new Json(0, arg0)), Parsimmon_choose(ofArray([jfloat, negativeJFloat, jint, negJint])));\n\nexport const jbool = Parsimmon_choose(ofArray([Parsimmon_stringReturn(\"true\", new Json(2, true)), Parsimmon_stringReturn(\"false\", new Json(2, false))]));\n\nexport const jnull = Parsimmon_stringReturn(\"null\", new Json(3));\n\nexport const stringLiteral = (() => {\n    const escape = Parsimmon_map((_arg1) => {\n        switch (_arg1) {\n            case \"b\": {\n                return \"\\b\";\n            }\n            case \"f\": {\n                return \"\\f\";\n            }\n            case \"n\": {\n                return \"\\n\";\n            }\n            case \"r\": {\n                return \"\\r\";\n            }\n            case \"t\": {\n                return \"\\t\";\n            }\n            default: {\n                return _arg1;\n            }\n        }\n    }, Parsimmon_oneOf(\"\\\"\\\\/bfnrt\"));\n    const anyCharSnippet = Parsimmon_concat(Parsimmon_many(Parsimmon_orTry(Parsimmon_map((tuple) => tuple[1], Parsimmon_seq2(Parsimmon_str(\"\\\\\"), escape)), Parsimmon_satisfy((c_1) => ((c_1 !== \"\\\"\") ? (c_1 !== \"\\\\\") : false)))));\n    return Parsimmon_between(Parsimmon_str(\"\\\"\"), Parsimmon_str(\"\\\"\"), anyCharSnippet);\n})();\n\nexport const jstring = stringLiteral.map((arg0) => (new Json(1, arg0)));\n\nexport function withWhitespace(p) {\n    return Parsimmon_between(Parsimmon_optionalWhitespace, Parsimmon_optionalWhitespace, p);\n}\n\nexport const jvalue = Parsimmon_choose(map(withWhitespace, ofArray([jnull, jbool, jnumber, jstring])));\n\nexport const comma = withWhitespace(Parsimmon_str(\",\"));\n\nfunction json$004099() {\n    return Parsimmon_ofLazy(() => Parsimmon_choose(ofArray([jvalue, Parsimmon_map((arg) => (new Json(4, ofArray(arg))), Parsimmon_between(withWhitespace(Parsimmon_str(\"[\")), withWhitespace(Parsimmon_str(\"]\")), Parsimmon_seperateBy(comma, json$004099$002D1.Value))), Parsimmon_map((arg_2) => (new Json(5, ofList(ofArray(arg_2)))), Parsimmon_between(withWhitespace(Parsimmon_str(\"{\")), withWhitespace(Parsimmon_str(\"}\")), Parsimmon_seperateBy(comma, Parsimmon_map((tupledArg) => [tupledArg[0], tupledArg[2]], Parsimmon_seq3(withWhitespace(stringLiteral), withWhitespace(Parsimmon_str(\":\")), withWhitespace(json$004099$002D1.Value))))))])));\n}\n\nconst json$004099$002D1 = new Lazy(json$004099);\n\nexport const json = json$004099$002D1.Value;\n\nexport const jsonParser = withWhitespace(json);\n\n","import { Parsimmon_parse } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\nimport { jsonParser } from \"./Parser.fs.js\";\nimport { join, toText, printf, toFail } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\nimport { empty, singleton, concat, ofSeq, ofArray, map as map_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/List.js\";\nimport { tryFind, ofList, toList } from \"../fable-library.3.0.0-nagareyama-rc-011/Map.js\";\nimport { map as map_3, delay, getEnumerator } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { toString } from \"../fable-library.3.0.0-nagareyama-rc-011/Decimal.js\";\nimport { toDecimal } from \"../fable-library.3.0.0-nagareyama-rc-011/BigInt.js\";\nimport { toString as toString_1 } from \"../fable-library.3.0.0-nagareyama-rc-011/Date.js\";\nimport { partialApply, isIterable } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { value as value_5, some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\nimport { $007CNativeObject$007C_$007C, $007CNativeArray$007C_$007C, $007CNull$007C_$007C, $007CNativeBool$007C_$007C, $007CNativeNumber$007C_$007C, $007CNativeString$007C_$007C } from \"./TypeCheck.fs.js\";\nimport { Json } from \"./Json.fs.js\";\nimport { map as map_2 } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\n\nexport function InteropUtil_isDateOffset(x) {\n    if (x instanceof Date) {\n        return \"offset\" in x;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function InteropUtil_isObjectLiteral(x) {\n    return (typeof x) === \"object\";\n}\n\nexport function InteropUtil_isBigInt(x) {\n    if (((((!(x == null)) ? InteropUtil_isObjectLiteral(x) : false) ? (\"signInt\" in x) : false) ? (\"v\" in x) : false) ? (\"digits\" in (x[\"v\"])) : false) {\n        return \"bound\" in (x[\"v\"]);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SimpleJson_tryParse(input) {\n    return Parsimmon_parse(input, jsonParser);\n}\n\nexport function SimpleJson_parse(input) {\n    const matchValue = SimpleJson_tryParse(input);\n    if (matchValue == null) {\n        return toFail(printf(\"Could not parse the JSON input: %s\"))(input);\n    }\n    else {\n        return matchValue;\n    }\n}\n\nexport function SimpleJson_toString(_arg1) {\n    if (_arg1.tag === 2) {\n        if (_arg1.fields[0]) {\n            return \"true\";\n        }\n        else {\n            return \"false\";\n        }\n    }\n    else if (_arg1.tag === 0) {\n        return _arg1.fields[0].toString();\n    }\n    else if (_arg1.tag === 1) {\n        return toText(printf(\"\\\"%s\\\"\"))(_arg1.fields[0]);\n    }\n    else if (_arg1.tag === 4) {\n        const arg10_1 = join(\",\", map_1(SimpleJson_toString, _arg1.fields[0]));\n        return toText(printf(\"[%s]\"))(arg10_1);\n    }\n    else if (_arg1.tag === 5) {\n        const arg10_3 = join(\",\", map_1((tupledArg) => {\n            const arg20 = SimpleJson_toString(tupledArg[1]);\n            return toText(printf(\"\\\"%s\\\":%s\"))(tupledArg[0])(arg20);\n        }, toList(_arg1.fields[0])));\n        return toText(printf(\"{%s}\"))(arg10_3);\n    }\n    else {\n        return \"null\";\n    }\n}\n\nexport function SimpleJson_toPlainObject(input) {\n    switch (input.tag) {\n        case 2: {\n            return input.fields[0];\n        }\n        case 0: {\n            return input.fields[0];\n        }\n        case 1: {\n            return input.fields[0];\n        }\n        case 4: {\n            const array = [];\n            const enumerator = getEnumerator(input.fields[0]);\n            try {\n                while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    const value_3 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    void (array.push(SimpleJson_toPlainObject(value_3)));\n                }\n            }\n            finally {\n                enumerator.Dispose();\n            }\n            return array;\n        }\n        case 5: {\n            const jsObject = ({});\n            const enumerator_1 = getEnumerator(toList(input.fields[0]));\n            try {\n                while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    const forLoopVar = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    jsObject[forLoopVar[0]] = SimpleJson_toPlainObject(forLoopVar[1]);\n                }\n            }\n            finally {\n                enumerator_1.Dispose();\n            }\n            return jsObject;\n        }\n        default: {\n            return null;\n        }\n    }\n}\n\nexport function SimpleJson_stringify(value) {\n    if (value == null) {\n        return JSON.stringify(null);\n    }\n    else {\n        return JSON.stringify(value, (key, jsonValue) => {\n            let copyOfStruct;\n            return InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : ((jsonValue instanceof Date) ? toString_1(jsonValue, \"o\") : (((typeof jsonValue) === \"string\") ? jsonValue : (isIterable(jsonValue) ? (Array.isArray(jsonValue) ? jsonValue : (Array.from(jsonValue))) : (InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : (InteropUtil_isDateOffset(jsonValue) ? (copyOfStruct = jsonValue, toString_1(copyOfStruct, \"O\")) : jsonValue)))));\n        }, some(0));\n    }\n}\n\nexport function SimpleJson_parseNative$0027(x) {\n    const activePatternResult3247 = $007CNativeString$007C_$007C(x);\n    if (activePatternResult3247 != null) {\n        const str = activePatternResult3247;\n        return new Json(1, str);\n    }\n    else {\n        const activePatternResult3246 = $007CNativeNumber$007C_$007C(x);\n        if (activePatternResult3246 != null) {\n            const number = activePatternResult3246;\n            return new Json(0, number);\n        }\n        else {\n            const activePatternResult3245 = $007CNativeBool$007C_$007C(x);\n            if (activePatternResult3245 != null) {\n                const value = activePatternResult3245;\n                return new Json(2, value);\n            }\n            else if ($007CNull$007C_$007C(x) != null) {\n                return new Json(3);\n            }\n            else {\n                const activePatternResult3243 = $007CNativeArray$007C_$007C(x);\n                if (activePatternResult3243 != null) {\n                    const arr = activePatternResult3243;\n                    return new Json(4, ofArray(map_2(SimpleJson_parseNative$0027, arr)));\n                }\n                else {\n                    const activePatternResult3242 = $007CNativeObject$007C_$007C(x);\n                    if (activePatternResult3242 != null) {\n                        const object = value_5(activePatternResult3242);\n                        return new Json(5, ofList(ofSeq(delay(() => map_3((key) => [key, SimpleJson_parseNative$0027(object[key])], Object.keys(object))))));\n                    }\n                    else {\n                        return new Json(3);\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function SimpleJson_parseNative(input) {\n    return SimpleJson_parseNative$0027(JSON.parse(input));\n}\n\nexport function SimpleJson_tryParseNative(input) {\n    try {\n        return SimpleJson_parseNative(input);\n    }\n    catch (ex) {\n        return void 0;\n    }\n}\n\nexport function SimpleJson_fromObjectLiteral(x) {\n    try {\n        return SimpleJson_parseNative$0027(x);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function SimpleJson_mapKeys(f, _arg1) {\n    switch (_arg1.tag) {\n        case 5: {\n            return new Json(5, ofList(map_1((tupledArg) => [f(tupledArg[0]), SimpleJson_mapKeys(f, tupledArg[1])], toList(_arg1.fields[0]))));\n        }\n        case 4: {\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapKeys(f, _arg1_1), _arg1.fields[0]));\n        }\n        default: {\n            return _arg1;\n        }\n    }\n}\n\nexport function SimpleJson_mapbyKey(f, _arg1) {\n    switch (_arg1.tag) {\n        case 5: {\n            return new Json(5, ofList(map_1((tupledArg) => {\n                const key = tupledArg[0];\n                return [key, f(key, tupledArg[1])];\n            }, toList(_arg1.fields[0]))));\n        }\n        case 4: {\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapbyKey(f, _arg1_1), _arg1.fields[0]));\n        }\n        default: {\n            return _arg1;\n        }\n    }\n}\n\nexport function SimpleJson_mapKeysByPath(f, json) {\n    const mapKey = (xs, _arg1) => {\n        switch (_arg1.tag) {\n            case 5: {\n                return new Json(5, ofList(map_1((tupledArg) => {\n                    const key = tupledArg[0];\n                    const value = tupledArg[1];\n                    const keyPath = concat([xs, singleton(key)]);\n                    const matchValue = f(keyPath);\n                    if (matchValue == null) {\n                        return [key, mapKey(keyPath, value)];\n                    }\n                    else {\n                        return [matchValue, mapKey(keyPath, value)];\n                    }\n                }, toList(_arg1.fields[0]))));\n            }\n            case 4: {\n                return new Json(4, map_1(partialApply(1, mapKey, [xs]), _arg1.fields[0]));\n            }\n            default: {\n                return _arg1;\n            }\n        }\n    };\n    return mapKey(empty(), json);\n}\n\nexport function SimpleJson_readPath(keys_mut, input_mut) {\n    SimpleJson_readPath:\n    while (true) {\n        const keys = keys_mut, input = input_mut;\n        const matchValue = [keys, input];\n        let pattern_matching_result, dict, key, dict_1, firstKey, rest;\n        if (matchValue[0].tail != null) {\n            if (matchValue[0].tail.tail == null) {\n                if (matchValue[1].tag === 5) {\n                    pattern_matching_result = 1;\n                    dict = matchValue[1].fields[0];\n                    key = matchValue[0].head;\n                }\n                else {\n                    pattern_matching_result = 3;\n                }\n            }\n            else if (matchValue[1].tag === 5) {\n                pattern_matching_result = 2;\n                dict_1 = matchValue[1].fields[0];\n                firstKey = matchValue[0].head;\n                rest = matchValue[0].tail;\n            }\n            else {\n                pattern_matching_result = 3;\n            }\n        }\n        else {\n            pattern_matching_result = 0;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return void 0;\n            }\n            case 1: {\n                return tryFind(key, dict);\n            }\n            case 2: {\n                const matchValue_1 = tryFind(firstKey, dict_1);\n                let pattern_matching_result_1, nextDict;\n                if (matchValue_1 != null) {\n                    if (matchValue_1.tag === 5) {\n                        pattern_matching_result_1 = 0;\n                        nextDict = matchValue_1.fields[0];\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_1 = 1;\n                }\n                switch (pattern_matching_result_1) {\n                    case 0: {\n                        keys_mut = rest;\n                        input_mut = (new Json(5, nextDict));\n                        continue SimpleJson_readPath;\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            }\n            case 3: {\n                return void 0;\n            }\n        }\n        break;\n    }\n}\n\n","import { some } from \"../fable-library.3.0.0-nagareyama-rc-011/Option.js\";\n\nexport function $007CNativeString$007C_$007C(x) {\n    if (typeof (x) === 'string') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeBool$007C_$007C(x) {\n    if (typeof (x) === 'boolean') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeNumber$007C_$007C(x) {\n    if (typeof (x) === 'number') {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeObject$007C_$007C(x) {\n    if (typeof (x) === 'object') {\n        return some(x);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNull$007C_$007C(x) {\n    if (x == null) {\n        return some(x);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNativeArray$007C_$007C(x) {\n    if (Array.isArray(x)) {\n        return x;\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { List, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            const y_5 = wj;\n            wj = (toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map(BigNatModule_FFT_Fp_toInt, BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = v;\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = v;\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = (n.digits[i] + (res << 3));\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = bound;\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = x_1;\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = ((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = (~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64))));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = (n.digits[i] + (BigNatModule_baseN * acc));\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = n.digits[i];\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = n.digits[i + d];\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = BigNatModule_modbase(x);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = BigNatModule_modbase(x);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = BigNatModule_modbase(x_1);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = x_3;\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = (~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = (k + 1);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = i;\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = (x_1[j + n] - zLo);\n        }\n        else {\n            x_1[j + n] = (x_1[j + n] + (BigNatModule_baseN - zLo));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = (x_1[j + n] + zLo);\n        }\n        else {\n            x_1[j + n] = (zLo - (BigNatModule_baseN - x_1[j + n]));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = (n - 1);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = (n - 1);\n                        p = (p - 1);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = (a.digits[i] & b.digits[i]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] | a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] | b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] ^ a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] ^ b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return new List([k, ten2k], prior);\n            }\n            else {\n                prior_mut = (new List([k, ten2k], prior));\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (_arg1.tail != null) {\n                const prior_1 = _arg1.tail;\n                const patternInput = BigNatModule_divmod(n_1, _arg1.head[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return new List(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, new List(), n, route(new List(), 0, BigNatModule_embed(10)));\n    if (digits_4.tail == null) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", Array.from(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { toString, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = signInt;\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule_ofInt32);\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compareSafe, equalsSafe, safeHash } from \"./Util.js\";\nimport { List, toString as toString_1 } from \"./Types.js\";\nimport { fold, head, skipWhile, ofSeq, find } from \"./List.js\";\nimport { unfold, delay, rangeNumber } from \"./Seq.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equalsSafe(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << find((i) => ((currByte & (1 << i)) > 0), ofSeq(rangeNumber(0, 1, 7))))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equalsSafe(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compareSafe(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compareSafe(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(Uint8Array.from((isPositive ? isHighBitOne : false) ? (new List(0, accumBytes_1)) : (((!isPositive) ? (!isHighBitOne) : false) ? (new List(255, accumBytes_1)) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = (new List((value_6 = (currValue >>> 24), value_6 & 0xFF), new List(b2, new List(b1, new List(b0, accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = (new List(patternInput_3[0], new List(patternInput_2[0], new List(patternInput_1[0], new List(patternInput[0], accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = (new List((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = (new List((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), 0, bytes.length, false);\n    }\n}\n\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = compareSafe(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compareSafe(x, last) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, BigInteger_op_Addition_56F059C0(x, step)] : (void 0);\n    };\n}\n\nexport function range(first, step, last) {\n    const stepFn = makeRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\n\n","import { equals, getEnumUnderlyingType, isEnum, getTupleElements, isTuple, getElementType, isArray, getFunctionElements, isFunction, getUnionCases, getUnionCaseFields, isUnion, getGenerics, getRecordElements, name, isRecord, fullName } from \"../fable-library.3.0.0-nagareyama-rc-011/Reflection.js\";\nimport { UnionCase, RecordField, TypeInfo } from \"./TypeInfo.fs.js\";\nimport { map } from \"../fable-library.3.0.0-nagareyama-rc-011/Array.js\";\nimport { collect, singleton, append, delay } from \"../fable-library.3.0.0-nagareyama-rc-011/Seq.js\";\nimport { structuralHash, Lazy } from \"../fable-library.3.0.0-nagareyama-rc-011/Util.js\";\nimport { Dictionary } from \"../fable-library.3.0.0-nagareyama-rc-011/MutableMap.js\";\nimport { tryGetValue } from \"../fable-library.3.0.0-nagareyama-rc-011/MapUtil.js\";\nimport { FSharpRef } from \"../fable-library.3.0.0-nagareyama-rc-011/Types.js\";\nimport { endsWith, isNullOrEmpty } from \"../fable-library.3.0.0-nagareyama-rc-011/String.js\";\n\nexport function $007CPrimitiveType$007C_$007C(primType) {\n    const matchValue = fullName(primType);\n    switch (matchValue) {\n        case \"System.String\": {\n            return new TypeInfo(1);\n        }\n        case \"System.Int16\": {\n            return new TypeInfo(10);\n        }\n        case \"System.Int32\": {\n            return new TypeInfo(5);\n        }\n        case \"Microsoft.FSharp.Core.int64`1\":\n        case \"System.Int64\": {\n            return new TypeInfo(11);\n        }\n        case \"System.UInt16\": {\n            return new TypeInfo(2);\n        }\n        case \"System.UInt32\": {\n            return new TypeInfo(3);\n        }\n        case \"System.UInt64\": {\n            return new TypeInfo(4);\n        }\n        case \"System.DateTime\": {\n            return new TypeInfo(13);\n        }\n        case \"System.TimeSpan\": {\n            return new TypeInfo(16);\n        }\n        case \"System.DateTimeOffset\": {\n            return new TypeInfo(14);\n        }\n        case \"System.Boolean\": {\n            return new TypeInfo(6);\n        }\n        case \"System.Single\": {\n            return new TypeInfo(7);\n        }\n        case \"System.Double\": {\n            return new TypeInfo(8);\n        }\n        case \"Microsoft.FSharp.Core.decimal`1\":\n        case \"System.Decimal\": {\n            return new TypeInfo(9);\n        }\n        case \"System.Numerics.BigInteger\": {\n            return new TypeInfo(15);\n        }\n        case \"Microsoft.FSharp.Core.Unit\": {\n            return new TypeInfo(0);\n        }\n        case \"System.Guid\": {\n            return new TypeInfo(17);\n        }\n        case \"System.Byte\": {\n            return new TypeInfo(12);\n        }\n        case \"System.Object\": {\n            return new TypeInfo(18);\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function $007CRecordType$007C_$007C(t) {\n    if (isRecord(t)) {\n        return map((field) => [field, name(field), field[1]], getRecordElements(t));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CSetType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpSet`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CNullable$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Nullable`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CUnionType$007C_$007C(t) {\n    if (isUnion(t)) {\n        return map((info) => [name(info), info, map((prop) => prop[1], getUnionCaseFields(info))], getUnionCases(t));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CMapType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpMap`2\") === 0) {\n        const genArgs = getGenerics(t);\n        return [genArgs[0], genArgs[1]];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CListType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpList`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function flattenFuncTypes(typeDef) {\n    return Array.from(delay(() => {\n        if (isFunction(typeDef)) {\n            const patternInput = getFunctionElements(typeDef);\n            return append(flattenFuncTypes(patternInput[0]), delay(() => flattenFuncTypes(patternInput[1])));\n        }\n        else {\n            return singleton(typeDef);\n        }\n    }));\n}\n\nexport function $007CFuncType$007C_$007C(t) {\n    if (isFunction(t)) {\n        return flattenFuncTypes(t);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CArrayType$007C_$007C(t) {\n    if (isArray(t)) {\n        return getElementType(t);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007COptionType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Core.FSharpOption`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CTupleType$007C_$007C(t) {\n    if (isTuple(t)) {\n        return getTupleElements(t);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CSeqType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.IEnumerable`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CDictionaryType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.Dictionary\") === 0) {\n        const genArgs = getGenerics(t);\n        return [genArgs[0], genArgs[1]];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CResizeArrayType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.List\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CHashSetType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"System.Collections.Generic.HashSet\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CAsyncType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Control.FSharpAsync`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CPromiseType$007C_$007C(t) {\n    if (fullName(t).indexOf(\"Fable.Core.JS.Promise`1\") === 0) {\n        return getGenerics(t)[0];\n    }\n    else {\n        return void 0;\n    }\n}\n\nfunction lazyToDelayed(l, unitVar0) {\n    return l.Value;\n}\n\nexport function $007CEnumType$007C_$007C(t) {\n    if (isEnum(t)) {\n        return getEnumUnderlyingType(t);\n    }\n    else {\n        return void 0;\n    }\n}\n\nfunction _createTypeInfo(resolvedType) {\n    let l, l_3, l_4, l_5, l_6, l_7, l_8, l_9, l_10, l_11, l_12, l_13, l_14, l_15, l_16, l_17;\n    const activePatternResult3162 = $007CPrimitiveType$007C_$007C(resolvedType);\n    if (activePatternResult3162 != null) {\n        const typeInfo = activePatternResult3162;\n        return typeInfo;\n    }\n    else {\n        const activePatternResult3161 = $007CFuncType$007C_$007C(resolvedType);\n        if (activePatternResult3161 != null) {\n            const types = activePatternResult3161;\n            return new TypeInfo(32, (l = (new Lazy(() => map(createTypeInfo, types))), () => lazyToDelayed(l, void 0)));\n        }\n        else {\n            const activePatternResult3160 = $007CRecordType$007C_$007C(resolvedType);\n            if (activePatternResult3160 != null) {\n                const fields = activePatternResult3160;\n                const l_1 = new Lazy(() => [Array.from(delay(() => collect((matchValue) => singleton(new RecordField(matchValue[1], createTypeInfo(matchValue[2]), matchValue[0])), fields))), resolvedType]);\n                return new TypeInfo(34, () => lazyToDelayed(l_1, void 0));\n            }\n            else {\n                const activePatternResult3159 = $007CUnionType$007C_$007C(resolvedType);\n                if (activePatternResult3159 != null) {\n                    const cases = activePatternResult3159;\n                    const l_2 = new Lazy(() => [Array.from(delay(() => collect((matchValue_1) => singleton(new UnionCase(matchValue_1[0], map(createTypeInfo, matchValue_1[2]), matchValue_1[1])), cases))), resolvedType]);\n                    return new TypeInfo(35, () => lazyToDelayed(l_2, void 0));\n                }\n                else {\n                    const activePatternResult3158 = $007CEnumType$007C_$007C(resolvedType);\n                    if (activePatternResult3158 != null) {\n                        const elemType = activePatternResult3158;\n                        return new TypeInfo(33, (l_3 = (new Lazy(() => [createTypeInfo(elemType), resolvedType])), () => lazyToDelayed(l_3, void 0)));\n                    }\n                    else {\n                        const activePatternResult3157 = $007CListType$007C_$007C(resolvedType);\n                        if (activePatternResult3157 != null) {\n                            const elemType_1 = activePatternResult3157;\n                            return new TypeInfo(23, (l_4 = (new Lazy(() => createTypeInfo(elemType_1))), () => lazyToDelayed(l_4, void 0)));\n                        }\n                        else {\n                            const activePatternResult3156 = $007CResizeArrayType$007C_$007C(resolvedType);\n                            if (activePatternResult3156 != null) {\n                                const elemType_2 = activePatternResult3156;\n                                return new TypeInfo(30, (l_5 = (new Lazy(() => createTypeInfo(elemType_2))), () => lazyToDelayed(l_5, void 0)));\n                            }\n                            else {\n                                const activePatternResult3155 = $007CHashSetType$007C_$007C(resolvedType);\n                                if (activePatternResult3155 != null) {\n                                    const elemType_3 = activePatternResult3155;\n                                    return new TypeInfo(31, (l_6 = (new Lazy(() => createTypeInfo(elemType_3))), () => lazyToDelayed(l_6, void 0)));\n                                }\n                                else {\n                                    const activePatternResult3154 = $007CArrayType$007C_$007C(resolvedType);\n                                    if (activePatternResult3154 != null) {\n                                        const elemType_4 = activePatternResult3154;\n                                        return new TypeInfo(25, (l_7 = (new Lazy(() => createTypeInfo(elemType_4))), () => lazyToDelayed(l_7, void 0)));\n                                    }\n                                    else {\n                                        const activePatternResult3153 = $007CTupleType$007C_$007C(resolvedType);\n                                        if (activePatternResult3153 != null) {\n                                            const types_1 = activePatternResult3153;\n                                            return new TypeInfo(27, (l_8 = (new Lazy(() => map(createTypeInfo, types_1))), () => lazyToDelayed(l_8, void 0)));\n                                        }\n                                        else {\n                                            const activePatternResult3152 = $007COptionType$007C_$007C(resolvedType);\n                                            if (activePatternResult3152 != null) {\n                                                const elemType_5 = activePatternResult3152;\n                                                return new TypeInfo(22, (l_9 = (new Lazy(() => createTypeInfo(elemType_5))), () => lazyToDelayed(l_9, void 0)));\n                                            }\n                                            else {\n                                                const activePatternResult3151 = $007CNullable$007C_$007C(resolvedType);\n                                                if (activePatternResult3151 != null) {\n                                                    const elemType_6 = activePatternResult3151;\n                                                    return new TypeInfo(22, (l_10 = (new Lazy(() => createTypeInfo(elemType_6))), () => lazyToDelayed(l_10, void 0)));\n                                                }\n                                                else {\n                                                    const activePatternResult3150 = $007CSetType$007C_$007C(resolvedType);\n                                                    if (activePatternResult3150 != null) {\n                                                        const elemType_7 = activePatternResult3150;\n                                                        return new TypeInfo(24, (l_11 = (new Lazy(() => createTypeInfo(elemType_7))), () => lazyToDelayed(l_11, void 0)));\n                                                    }\n                                                    else {\n                                                        const activePatternResult3149 = $007CMapType$007C_$007C(resolvedType);\n                                                        if (activePatternResult3149 != null) {\n                                                            const keyType = activePatternResult3149[0];\n                                                            const valueType = activePatternResult3149[1];\n                                                            return new TypeInfo(28, (l_12 = (new Lazy(() => [createTypeInfo(keyType), createTypeInfo(valueType)])), () => lazyToDelayed(l_12, void 0)));\n                                                        }\n                                                        else {\n                                                            const activePatternResult3148 = $007CDictionaryType$007C_$007C(resolvedType);\n                                                            if (activePatternResult3148 != null) {\n                                                                const keyType_1 = activePatternResult3148[0];\n                                                                const valueType_1 = activePatternResult3148[1];\n                                                                return new TypeInfo(29, (l_13 = (new Lazy(() => [createTypeInfo(keyType_1), createTypeInfo(valueType_1), valueType_1])), () => lazyToDelayed(l_13, void 0)));\n                                                            }\n                                                            else {\n                                                                const activePatternResult3147 = $007CSeqType$007C_$007C(resolvedType);\n                                                                if (activePatternResult3147 != null) {\n                                                                    const elemType_8 = activePatternResult3147;\n                                                                    return new TypeInfo(26, (l_14 = (new Lazy(() => createTypeInfo(elemType_8))), () => lazyToDelayed(l_14, void 0)));\n                                                                }\n                                                                else {\n                                                                    const activePatternResult3146 = $007CAsyncType$007C_$007C(resolvedType);\n                                                                    if (activePatternResult3146 != null) {\n                                                                        const elemType_9 = activePatternResult3146;\n                                                                        return new TypeInfo(20, (l_15 = (new Lazy(() => createTypeInfo(elemType_9))), () => lazyToDelayed(l_15, void 0)));\n                                                                    }\n                                                                    else {\n                                                                        const activePatternResult3145 = $007CPromiseType$007C_$007C(resolvedType);\n                                                                        if (activePatternResult3145 != null) {\n                                                                            const elemType_10 = activePatternResult3145;\n                                                                            return new TypeInfo(21, (l_16 = (new Lazy(() => createTypeInfo(elemType_10))), () => lazyToDelayed(l_16, void 0)));\n                                                                        }\n                                                                        else {\n                                                                            return new TypeInfo(19, (l_17 = (new Lazy(() => resolvedType)), () => lazyToDelayed(l_17, void 0)));\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nconst typeInfoCache = new Dictionary([], {\n    Equals: equals,\n    GetHashCode: structuralHash,\n});\n\nexport function createTypeInfo(resolvedType) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(typeInfoCache, resolvedType, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const ti_1 = _createTypeInfo(resolvedType);\n        if (((!isNullOrEmpty(fullName(resolvedType))) ? (!endsWith(fullName(resolvedType), \"`1[]\")) : false) ? (!endsWith(fullName(resolvedType), \"`2[]\")) : false) {\n            typeInfoCache.set(resolvedType, ti_1);\n            return ti_1;\n        }\n        else {\n            return ti_1;\n        }\n    }\n}\n\nexport function isPrimitive(_arg1) {\n    switch (_arg1.tag) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 17:\n        case 22: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexport function enumUnion(_arg1) {\n    if (_arg1.tag === 35) {\n        return _arg1.fields[0]()[0].every((case$) => (case$.CaseTypes.length === 0));\n    }\n    else {\n        return false;\n    }\n}\n\n","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long.js\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (offset != null && count != null) {\n        buffer = buffer.subarray(offset, offset + count);\n    }\n    else if (offset != null) {\n        buffer = buffer.subarray(offset);\n    }\n    return Array.from(buffer).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport Decimal from \"./Decimal.js\";\nimport Long, * as _Long from \"./Long.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    return reverse(fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs));\n}\n\nexport function concat(lists) {\n    return reverse(fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists));\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                acc_mut = (new List_1(matchValue[0], acc));\n                state_1_mut = matchValue[1];\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    return ofSeq(scan_1(f, state, xs));\n}\n\nexport function scanBack(f, xs, state) {\n    return ofSeq(scanBack_1(f, xs, state));\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    return ofSeq(collect_1(f, xs));\n}\n\nexport function map(f, xs) {\n    return reverse(fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs));\n}\n\nexport function mapIndexed(f, xs) {\n    return reverse(foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs));\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    return reverse(fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    return reverse(foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function map3(f, xs, ys, zs) {\n    return reverse(fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    return reverse(foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    return find(f, reverse(xs));\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFind(f, reverse(xs));\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, Array.from(xs));\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        return matchValue | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    return findIndexBack_1(f, Array.from(xs));\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    return reverse(fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs));\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    return reverse(fold((acc, x) => {\n        const matchValue = f(x);\n        return (matchValue == null) ? acc : (new List_1(value_1(matchValue), acc));\n    }, new List_1(), xs));\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(x, y))), xs_1)));\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y)))), xs_1)));\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1))), xs_1)));\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1))), xs_1)));\n}\n\nexport function sortWith(comparer, xs) {\n    let comparer_1, xs_1;\n    return ofArray((comparer_1 = comparer, (xs_1 = Array.from(xs), (xs_1.sort(comparer_1), xs_1))));\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs), length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs), length(xs));\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, Array.from(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return map(ofArray, ofArray(chunkBySize_1(chunkSize, Array.from(xs))));\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(false, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (upper < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        const res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= upper)) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (upper > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, keys);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, keys);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    return ofSeq(pairwise_1(source));\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    return map(ofArray, ofArray(splitInto_1(chunks, Array.from(source))));\n}\n\nexport function transpose(lists) {\n    return ofSeq(map_1(ofSeq, transpose_1(lists)));\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new (cons || Array)((len1 + len2));\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return new (cons || Array)(0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = new (cons || Array)(totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const key = projection(array[idx]);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            const value_1 = keys.push(key);\n            void value_1;\n        }\n    }\n    return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            const value = keys.push(key);\n            void value;\n        }\n    }\n    return map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n}\n\nexport function empty(cons) {\n    return new (cons || Array)(0);\n}\n\nexport function singleton(value, cons) {\n    const ar = new (cons || Array)(1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    const value = array.push(x);\n    void value;\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        const value = array.push(x);\n        void value;\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        const value = array.splice(i, 1);\n        void value;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            const value = array.splice(i, 1);\n            void value;\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + count)) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = new (cons || Array)(len);\n    const res2 = new (cons || Array)(len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound() | 0;\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound() | 0;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    return map((x_1) => value_2(chooser(x_1)), array.filter(((x) => (chooser(x) != null))), cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce((folder), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                const value = res.push(x);\n                void value;\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith(compare, array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1(comparePrimitives, 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = (new (cons || Array)(len));\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n"],"sourceRoot":""}